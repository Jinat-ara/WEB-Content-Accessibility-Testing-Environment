from tkinter import*
from tkinter import messagebox
import os
import tkinter as tk
import tkinter as tkinter
from tkinter import ttk
import urllib.request
from bs4 import BeautifulSoup
import validators
import re
import nltk
#nltk.download('punkt')
#nltk.download('stopwords')
#nltk.download()
from nltk.corpus import words
from nltk.corpus import wordnet 
from nltk.corpus import wordnet as wn
from nltk.corpus import stopwords
#stopwords.words('english')
stop_words = set(stopwords.words("english"))
from nltk.tokenize import word_tokenize, sent_tokenize
import itertools
from readability import Readability
import readability
#import requests as re
#import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import matplotlib.pyplot as plt 
import matplotlib.patches as mpatches
import requests
import time
from langdetect import detect, detect_langs
from langdetect import DetectorFactory   
import language_tool_python

def Test_Execute():

  global websiteLink

  websiteLink=URL.get()
  valid=validators.url(websiteLink)
  print(valid)




  #######--------------------------------------WINDOW-1-----------------------------------------------##################

  #root=tk.Tk()

  if (valid ==True):

    messagebox.showinfo("Bingo", "The Evaluated Result is Preparing \n Please press OK")
    root=Toplevel(screen)
    root.title('Web Content Accessibility Evaluate Environment (WCAEE)')
    root.geometry("1000x1000")
    root.configure(bg= "tomato")
    root.resizable(True, True)
    root.state('zoomed')

    
    html_page= urllib.request.urlopen (websiteLink)
    #print(html_page)
    page_length_byte=(len(html_page.read()))
    page_length_KB = page_length_byte/1024
    print("{} KB".format(page_length_KB))
    
    html_page= urllib.request.urlopen (websiteLink)
    soup = BeautifulSoup (html_page, 'html.parser')




    #######--------------------------------------Switch from one page to another-----------------------------------------------##################

    def switch(indicator_lb, page):

      for child in options_fm.winfo_children():
        if isinstance(child, tk.Label):
          child['bg']='SystemButtonFace'

      indicator_lb['bg']='blue'

      for fm in main_fm.winfo_children():
        fm.destroy()
        root.update()

      page()

    options_fm=tk.Frame(root)

    nonSemantics_btn=tk.Button(options_fm, text='Non-Semantics (WCAG)', font=('Arial', 13,), bd=3, bg='orange',fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=nonSemantics_indicator_lb, page=nonSemantics_page))
    nonSemantics_btn.place(x=0, y=0, width=190)
    nonSemantics_indicator_lb=tk.Label(options_fm, bg='orange')
    nonSemantics_indicator_lb.place(x=10, y=30, width=170, height=2)

    semantics_btn=tk.Button(options_fm, text='Semantics (WCAG)', font=('Arial', 13), bd=3, bg='pink', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=semantics_indicator_lb, page=semantics_page))
    semantics_btn.place(x=190, y=0, width=170)
    semantics_indicator_lb=tk.Label(options_fm)
    semantics_indicator_lb.place(x=200, y=30, width=150, height=2)

    user_Requirements_btn=tk.Button(options_fm, text='User Requirements', font=('Arial', 13), bd=3, bg='light blue', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=user_Requirements_indicator_lb, page=user_Requirements_page))
    user_Requirements_btn.place(x=360, y=0, width=150)
    user_Requirements_indicator_lb=tk.Label(options_fm)
    user_Requirements_indicator_lb.place(x=370, y=30, width=130, height=2)

    summary_btn=tk.Button(options_fm, text='Summary', font=('Arial', 13), bd=3, bg='gold', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=summary_indicator_lb, page=summary_page))
    summary_btn.place(x=510, y=0, width=125)
    summary_indicator_lb=tk.Label(options_fm)
    summary_indicator_lb.place(x=520, y=30, width=105, height=2)

    general_statistics_btn=tk.Button(options_fm, text='General Statistics', font=('Arial', 13), bd=3, bg='coral', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=general_statistics_lb, page=General_statistics_page))
    general_statistics_btn.place(x=635, y=0, width=150)
    general_statistics_lb=tk.Label(options_fm)
    general_statistics_lb.place(x=645, y=30, width=130, height=2)

    Key_statistics_btn=tk.Button(options_fm, text='Kye Statistics', font=('Arial', 13), bd=3, bg='yellow', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=Key_statistics_indicator_lb, page=Key_statistics_page))
    Key_statistics_btn.place(x=785, y=0, width=130)
    Key_statistics_indicator_lb=tk.Label(options_fm)
    Key_statistics_indicator_lb.place(x=795, y=30, width=110, height=2)

    Overall_statistics_btn=tk.Button(options_fm, text='Overall Statistics', font=('Arial', 13), bd=3, bg='cyan', fg='black', activeforeground='tomato',command=lambda:switch(indicator_lb=Overall_statistics_indicator_lb, page=Overall_statistics_page))
    Overall_statistics_btn.place(x=915, y=0, width=130)
    Overall_statistics_indicator_lb=tk.Label(options_fm)
    Overall_statistics_indicator_lb.place(x=925, y=30, width=110, height=2)



    options_fm.pack(pady=5)
    options_fm.pack_propagate(False)
    options_fm.configure(width=1045, height=35)



    def nonSemantics_page():

      # TitleFrame1=Frame(main_fm, bg='white smoke',width=800, height=30) #4A7A8c highlightbackground="blue", highlightthickness=2
      # TitleFrame1.place(x=500, y=5, width=800, height=30)
      # TitleLable1=Label(TitleFrame1, text='Evaluation of Non-Textual Feature (Non-Text Components)', fg='black', bg='white smoke', font=("Arial", 17, 'bold'))
      # TitleLable1.grid(row=0, column=0)

      TitleFrame1=tk.Frame (main_fm, bg="white smoke", width=1950, height=35) #highlightbackground="blue", highlightthickness=1
      TitleFrame1.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame1.place(relx=0.0, rely=0.0)

      TitleFrame=tk.Frame (TitleFrame1, bg="white smoke", width=1950, height=35)
      TitleFrame.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame.place(relx=0.30, rely=0.0)
      label = tk.Label(TitleFrame, text="Evaluation of Non-Textual Feature (Non-Text Components)",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()

      Frame0=tk.Frame(main_fm, bg='tomato',width=380, height=25)
      Frame0.place(x=10, y=50, width=380, height=25)
      Lable0=Label(Frame0, text='SUCCESS CRITERIA', fg='black',bg='tomato',font=("Arial", 12, 'bold'))
      Lable0.grid(row=0, column=0)

      Framee0=Frame(main_fm, bg='tomato', width=110, height=25)
      Framee0.place(x=400, y=50, width=110, height=25)
      Lablee0=Label(Framee0, text='Total Count', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lablee0.grid(row=0, column=0)

      Frameee0=Frame(main_fm, bg='tomato', width=480, height=25)
      Frameee0.place(x=530, y=50, width=480, height=25)
      Lableee0=Label(Frameee0, text='FEEDBACK', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableee0.grid(row=0, column=0)

      Frameeee0=Frame(main_fm, bg='tomato', width=130, height=25)
      Frameeee0.place(x=1030, y=50, width=130, height=25)
      Lableeee0=Label(Frameeee0, text='RESULT', fg='black', bg='tomato', font=("Arial", 12, 'bold'))
      Lableeee0.grid(row=0, column=0)

      Frameeeee0=Frame(main_fm, bg='tomato', width=80, height=25)
      Frameeeee0.place(x=1180, y=50, width=80, height=25)
      Lableeeee0=Label(Frameeeee0, text='Count', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeee0.grid(row=0, column=0)

      Frameeeeee0=Frame(main_fm, bg='tomato', width=150, height=25)
      Frameeeeee0.place(x=1280, y=50, width=150, height=25)
      Lableeeeee0=Label(Frameeeeee0, text='CONFORMENCE', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeeee0.grid(row=0, column=0)

      Frameeeeeee0=Frame(main_fm,  bg='tomato', width=210, height=25)
      Frameeeeeee0.place(x=1450, y=50, width=210, height=25)
      Lableeeeeee0=Label(Frameeeeeee0, text='IMPAIRMENTS TYPE', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeeeee0.grid(row=0, column=0)

      Frameeeeeeee0=Frame(main_fm, bg='tomato', width=230, height=25)
      Frameeeeeeee0.place(x=1680, y=50, width=230, height=25)
      Lableeeeeeee0=Label(Frameeeeeeee0, text='IMPROVEMENT DIRECTION', fg='black', bg='tomato', font=("Arial", 12, 'bold')) 
      Lableeeeeeee0.grid(row=0, column=0)




      #####===========================Guideline 1.2.1 (level A)====================================####
      
      global audio_totalCount

      audio_Object=1

      counter=0                                                        
      audio_Passed=0
      audio = soup.find_all('audio')
      if(audio !=[]): 
        for item in audio:
          if (item['src'] != ' '):                         
            counter+=1  
            audio_Passed=counter                         
      print('Number of Passed Guideline for Audio:',audio_Passed)
     
      counter=0
      audio_Failed=0
      audio = soup.find_all('audio')
      if(audio !=[]): 
        for item in audio:
          if (item['src'] == ' '):                         
            counter+=1  
            audio_Failed=counter                           
      print('Number of Failed Guideline for Audio:', audio_Failed)

      audio_totalCount=audio_Passed+audio_Failed
      print('Total Checked for Audio Controls:', audio_totalCount)


      if (audio_Failed<=0 and audio_Passed>=1):
        print('Pass: Guideline 1.2.1 Audio-only and Video-only (Prerecorded); Webpage has Prerecorded Audio file')
        Pcounter1=1; Fcounter1=0; NTcounter1=0; NDcounter1=0
        PLevelA1=1; FLevelA1=0; NTLevelA1=0; NDLevelA1=0
        VLevelA1=1; ADLevelA1=0; ETLevelA1=0

        PVisionImpairment1=1; FVisionImpairment1=0; NTVisionImpairment1=0; NDVisionImpairment1=0   
        PHearingDifficulty1=1; FHearingDifficulty1=0; NTHearingDifficulty1=0; NDHearingDifficulty1=0 
        PCognitiveDisability1=1; FCognitiveDisability1=0; NTCognitiveDisability1=0; NDCognitiveDisability1=0  
        PMotionDisability1=0; FMotionDisability1=0; NTMotionDisability1=0; NDMotionDisability1=0
        PLearningDisability1=0; FLearningDisability1=0; NTLearningDisability1=0; NDLearningDisability1=0
        
        Frame1=Frame(main_fm, bg='white', width=380, height=25)
        Frame1.place(x=10, y=80, width=380, height=25)
        Lable1=Label(Frame1, text='Sc (1.2.1) Audio-only and Video-only', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable1.grid(row=0, column=0)
        Framee1=Frame(main_fm, bg='white', width=110, height=25)
        Framee1.place(x=400, y=80, width=110, height=25)
        Lablee1=Label(Framee1, text=audio_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee1.grid(row=0, column=0)
        Frameee1=Frame(main_fm, bg='white', width=480, height=25)
        Frameee1.place(x=530, y=80, width=480, height=25)
        Lableee1=Label(Frameee1, text='Webpage has Prerecorded Audio/Video File', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee1.grid(row=0, column=0)
        Frameeee1=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee1.place(x=1030, y=80, width=130, height=25)
        Lableeee1=Label(Frameeee1, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee1.grid(row=0, column=0)
        Frameeeee1=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee1.place(x=1180, y=80, width=80, height=25)
        Lableeeee1=Label(Frameeeee1, text=audio_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee1.grid(row=0, column=0)
        Frameeeeee1=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee1.place(x=1280, y=80, width=150, height=25)
        Lableeeeee1=Label(Frameeeeee1, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee1.grid(row=0, column=0)
        Frameeeeeee1=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee1.place(x=1450, y=80, width=210, height=25)
        Lableeeeeee1=Label(Frameeeeeee1, text='Vision/Hearing/Cognitive', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee1.grid(row=0, column=0)
        Frameeeeeeee1=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee1.place(x=1680, y=80, width=230, height=25)
        Lableeeeeeee1=Label(Frameeeeeeee1, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee1.grid(row=0, column=0)
      #elif (audio_Failed>0):
      else:
        print('Fail: Guideline 1.2.1 Audio-only and Video-only (Prerecorded); Webpage has no Prerecorded Audio file')
        Fcounter1=1; Pcounter1=0; NTcounter1=0; NDcounter1=0
        FLevelA1= 1; PLevelA1=0; NTLevelA1=0; NDLevelA1=0
        ADLevelA1=1; VLevelA1=0; ETLevelA1=0

        FVisionImpairment1=1; PVisionImpairment1=0; NTVisionImpairment1=0; NDVisionImpairment1=0   
        FHearingDifficulty1=1; PHearingDifficulty1=0; NTHearingDifficulty1=0; NDHearingDifficulty1=0  
        FCognitiveDisability1=1; PCognitiveDisability1=0; NTCognitiveDisability1=0; NDCognitiveDisability1=0
        FMotionDisability1=0; PMotionDisability1=0; NTMotionDisability1=0; NDMotionDisability1=0
        FLearningDisability1=0; PLearningDisability1=0; NTLearningDisability1=0; NDLearningDisability1=0
        
        Frame1=Frame(main_fm, bg='white', width=380, height=25)
        Frame1.place(x=10, y=80, width=380, height=25)
        Lable1= Label(Frame1, text='Sc (1.2.1) Audio-only and Video-only', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable1.grid(row=0, column=0)
        Framee1=Frame(main_fm, bg='white', width=110, height=25)
        Framee1.place(x=400, y=80, width=110, height=25)
        Lablee1=Label(Framee1, text=audio_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee1.grid(row=0, column=0)
        Frameee1=Frame(main_fm, bg='white', width=480, height=25)
        Frameee1.place(x=530, y=80, width=480, height=25)
        Lableee1= Label(Frameee1, text='Webpage has no Prerecorded Audio/Video File', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee1.grid(row=0, column=0)
        Frameeee1=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee1.place(x=1030, y=80, width=130, height=25)
        Lableeee1=Label(Frameeee1, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee1.grid(row=0, column=0)
        Frameeeee1=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee1.place(x=1180, y=80, width=80, height=25)
        Lableeeee1=Label(Frameeeee1, text=audio_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee1.grid(row=0, column=0)
        Frameeeeee1=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee1.place(x=1280, y=80, width=150, height=25)
        Lableeeeee1=Label(Frameeeeee1, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee1.grid(row=0, column=0)
        Frameeeeeee1=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee1.place(x=1450, y=80, width=210, height=25)
        Lableeeeeee1=Label(Frameeeeeee1, text='Vision/Hearing/Cognitive', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee1.grid(row=0, column=0)
        Frameeeeeeee1=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee1.place(x=1680, y=80, width=230, height=25)
        Lableeeeeeee1=Label(Frameeeeeeee1, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee1.grid(row=0, column=0)



      ####===========================Guideline 1.2.8 (level AAA)====================================####

      counter=0
      audioControl_Failed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                     
        for item in audio:
          if (item['alt']== ' '):
            counter+=1  
            audioControl_Failed=counter                         
      print('Number of Failed Guideline for Audio Controls',audioControl_Failed)

      counter=0
      audioControl_Passed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                     
        for item in audio:
          if (item['alt'] != ' '):
            counter+=1  
            audioControl_Passed=counter                        
      print('Number of Passed Guideline for Audio Controls',audioControl_Passed)

      audioControl_totalCount=audioControl_Failed+audioControl_Passed
      print('The total count of checked for Audio Controls:', audioControl_totalCount)

      if(audioControl_Failed>0):
        print('Fail: Guideline 1.2.8 Media Alternative (Prerecorded); Audio Alternative Text is Missing')  # Poor hearing
        Fcounter2=1; Pcounter2=0; NTcounter2=0; NDcounter2=0
        FLevelAAA1=1; PLevelAAA1=0; NTLevelAAA1=0; NDLevelAAA1=0
        ADLevelAAA1=1; VLevelAAA1=0; ETLevelAAA1=0

        FVisionImpairment2=0; PVisionImpairment2=0; NTVisionImpairment2=0; NDVisionImpairment2=0   
        FHearingDifficulty2=1; PHearingDifficulty2=0; NTHearingDifficulty2=0; NDHearingDifficulty2=0 
        FCognitiveDisability2=0; PCognitiveDisability2=0; NTCognitiveDisability2=0; NDCognitiveDisability2=0
        FMotionDisability2=0; PMotionDisability2=0; NTMotionDisability2=0; NDMotionDisability2=0
        FLearningDisability2=0; PLearningDisability2=0; NTLearningDisability2=0; NDLearningDisability2=0
          
        Frame2=Frame(main_fm, bg='white', width=380, height=25)
        Frame2.place(x=10, y=105, width=380, height=25)
        Lable2=Label(Frame2, text='Sc (1.2.8) Media Alternative (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable2.grid(row=0, column=0)
        Framee2=Frame(main_fm, bg='white', width=110, height=25)
        Framee2.place(x=400, y=105, width=110, height=25)
        Lablee2=Label(Framee2, text=audioControl_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee2.grid(row=0, column=0)
        Frameee2=Frame(main_fm, bg='white', width=480, height=25)
        Frameee2.place(x=530, y=105, width=480, height=25)
        Lableee2=Label(Frameee2, text='Audio Alternative Text is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee2.grid(row=0, column=0)
        Frameeee2=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee2.place(x=1030, y=105, width=130, height=25)
        Lableeee2=Label(Frameeee2, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee2.grid(row=0, column=0)
        Frameeeee2=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee2.place(x=1180, y=105, width=80, height=25)
        Lableeeee2=Label(Frameeeee2, text=audioControl_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee2.grid(row=0, column=0)
        Frameeeeee2=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee2.place(x=1280, y=105, width=150, height=25)
        Lableeeeee2=Label(Frameeeeee2, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee2.grid(row=0, column=0)
        Frameeeeeee2=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee2.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee2=Label(Frameeeeeee2, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee2.grid(row=0, column=0)
        Frameeeeeeee2=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee2.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee2=Label(Frameeeeeeee2, text='Re. Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee2.grid(row=0, column=0)
      elif (audioControl_Failed<=0 and audioControl_Passed>=1):
        print('Pass: Guideline 1.2.8 Media Alternative (Prerecorded); Audio has Alternative Text')
        Pcounter2=1; Fcounter2=0; NTcounter2=0; NDcounter2=0
        PLevelAAA1=1; FLevelAAA1=0; NTLevelAAA1=0; NDLevelAAA1=0
        VLevelAAA1=1; ADLevelAAA1=0; ETLevelAAA1=0

        PVisionImpairment2=0; FVisionImpairment2=0; NTVisionImpairment2=0; NDVisionImpairment2=0   
        PHearingDifficulty2=1; FHearingDifficulty2=0; NTHearingDifficulty2=0; NDHearingDifficulty2=0 
        PCognitiveDisability2=0; FCognitiveDisability2=0; NTCognitiveDisability2=0; NDCognitiveDisability2=0
        PMotionDisability2=0; FMotionDisability2=0; NTMotionDisability2=0; NDMotionDisability2=0
        PLearningDisability2=0; FLearningDisability2=0; NTLearningDisability2=0; NDLearningDisability2=0
          
        Frame2=Frame(main_fm, bg='white', width=380, height=25)
        Frame2.place(x=10, y=105, width=380, height=25)
        Lable2=Label(Frame2, text='Sc (1.2.8) Media Alternative', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable2.grid(row=0, column=0)
        Framee2=Frame(main_fm, bg='white', width=110, height=25)
        Framee2.place(x=400, y=105, width=110, height=25)
        Lablee2=Label(Framee2, text=audioControl_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee2.grid(row=0, column=0)
        Frameee2=Frame(main_fm, bg='white', width=480, height=25)
        Frameee2.place(x=530, y=105, width=480, height=25)
        Lableee2=Label(Frameee2, text='Audio has Alternative Text', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee2.grid(row=0, column=0)
        Frameeee2=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee2.place(x=1030, y=105, width=130, height=25)
        Lableeee2=Label(Frameeee2, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee2.grid(row=0, column=0)
        Frameeeee2=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee2.place(x=1180, y=105, width=80, height=25)
        Lableeeee2=Label(Frameeeee2, text=audioControl_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee2.grid(row=0, column=0)
        Frameeeeee2=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee2.place(x=1280, y=105, width=150, height=25)
        Lableeeeee2=Label(Frameeeeee2, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee2.grid(row=0, column=0)
        Frameeeeeee2=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee2.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee2=Label(Frameeeeeee2, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee2.grid(row=0, column=0)
        Frameeeeeeee2=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee2.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee2=Label(Frameeeeeeee2, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee2.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.8 Media Alternative (Prerecorded); Webpage has no audio content')
        NDcounter2=1; Pcounter2=0; Fcounter2=0; NTcounter2=0
        NDLevelAAA1=1; PLevelAAA1=0; FLevelAAA1=0; NTLevelAAA1=0
        VLevelAAA1=1; ADLevelAAA1=0; ETLevelAAA1=0

        NDVisionImpairment2=0; PVisionImpairment2=0; FVisionImpairment2=0; NTVisionImpairment2=0    
        NDHearingDifficulty2=1; PHearingDifficulty2=0; FHearingDifficulty2=0; NTHearingDifficulty2=0 
        NDCognitiveDisability2=0; PCognitiveDisability2=0; FCognitiveDisability2=0; NTCognitiveDisability2=0
        NDMotionDisability2=0; PMotionDisability2=0; FMotionDisability2=0; NTMotionDisability2=0
        NDLearningDisability2=0; PLearningDisability2=0; FLearningDisability2=0; NTLearningDisability2=0
        
        Frame2=Frame(main_fm, bg='white', width=380, height=25)
        Frame2.place(x=10, y=105, width=380, height=25)
        Lable2=Label(Frame2, text='Sc (1.2.8) Media Alternative', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable2.grid(row=0, column=0)
        Framee2=Frame(main_fm, bg='white', width=110, height=25)
        Framee2.place(x=400, y=105, width=110, height=25)
        Lablee2=Label(Framee2, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee2.grid(row=0, column=0)
        Frameee2=Frame(main_fm, bg='white', width=480, height=25)
        Frameee2.place(x=530, y=105, width=480, height=25)
        Lableee2=Label(Frameee2, text='Webpage has no Audio Content to check Alternative Text', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee2.grid(row=0, column=0)
        Frameeee2=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee2.place(x=1030, y=105, width=130, height=25)
        Lableeee2=Label(Frameeee2, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee2.grid(row=0, column=0)
        Frameeeee2=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee2.place(x=1180, y=105, width=80, height=25)
        Lableeeee2=Label(Frameeeee2, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee2.grid(row=0, column=0)
        Frameeeeee2=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee2.place(x=1280, y=105, width=150, height=25)
        Lableeeeee2=Label(Frameeeeee2, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee2.grid(row=0, column=0)
        Frameeeeeee2=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee2.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee2=Label(Frameeeeeee2, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee2.grid(row=0, column=0)
        Frameeeeeeee2=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee2.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee2=Label(Frameeeeeeee2, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee2.grid(row=0, column=0)


      #####===========================Guideline 1.2.9 (level AAA)====================================####
      
      counter=0
      audioControlAlt_Passed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                          
        for item in audio:
          if (item['src'] != ' '):
            counter+=1  
            audioControlAlt_Passed=counter                         
      print('Number of Passed Guideline for Audio Controls:', audioControlAlt_Passed)
      
      counter=0
      audioControlAlt_Failed=0
      audio = soup.find_all('audio controls')
      if(audio !=[]):                          
        for item in audio:
          if (item['src'] == ' '):
            counter+=1  
            audioControlAlt_Failed=counter                          
      print('Number of Failed Guideline for Audio Controls:', audioControlAlt_Failed)

      audioControlAlt_totalCount=audioControlAlt_Passed+audioControlAlt_Failed
      print('Total Checked for Audio Controls:', audioControlAlt_totalCount)


      if (audioControlAlt_Failed<=0 and audioControlAlt_Passed>=1):
          print('Pass: Guideline 1.2.9 Audio-only (Live); Webpage has Live Audio Content')
          Pcounter3=1; Fcounter3=0; NTcounter3=0; NDcounter3=0
          PLevelAAA2=1; FLevelAAA2=0; NTLevelAAA2=0; NDLevelAAA2=0
          VLevelAAA2=1; ADLevelAAA2=0; ETLevelAAA2=0

          PVisionImpairment3=0; FVisionImpairment3=0; NDVisionImpairment3=0; NTVisionImpairment3=0   
          PHearingDifficulty3=1; FHearingDifficulty3=0; NDHearingDifficulty3=0; NTHearingDifficulty3=0  
          PCognitiveDisability3=0; FCognitiveDisability3=0; NDCognitiveDisability3=0; NTCognitiveDisability3=0
          PMotionDisability3=0; FMotionDisability3=0; NDMotionDisability3=0; NTMotionDisability3=0
          PLearningDisability3=0; FLearningDisability3=0; NDLearningDisability3=0; NTLearningDisability3=0
          
          Frame3=Frame(main_fm, bg='white', width=380, height=25) 
          Frame3.place(x=10, y=130, width=380, height=25)
          Lable3 = Label(Frame3, text='Sc (1.2.9) Audio-only (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable3.grid(row=0, column=0) 
          Framee3=Frame(main_fm, bg='white', width=110, height=25)
          Framee3.place(x=400, y=130, width=110, height=25)
          Lablee3=Label(Framee3, text=audioControlAlt_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lablee3.grid(row=0, column=0)
          Frameee3=Frame(main_fm, bg='white', width=480, height=25) 
          Frameee3.place(x=530, y=130, width=480, height=25)
          Lableee3 = Label(Frameee3, text='Webpage has Live Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee3.grid(row=0, column=0) 
          Frameeee3=Frame(main_fm, bg='white', width=130, height=25)
          Frameeee3.place(x=1030, y=130, width=130, height=25)
          Lableeee3=Label(Frameeee3, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
          Lableeee3.grid(row=0, column=0) 
          Frameeeee3=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee3.place(x=1180, y=130, width=80, height=25)
          Lableeeee3=Label(Frameeeee3, text=audioControlAlt_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee3.grid(row=0, column=0)
          Frameeeeee3=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee3.place(x=1280, y=130, width=150, height=25)
          Lableeeeee3=Label(Frameeeeee3, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee3.grid(row=0, column=0)
          Frameeeeeee3=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee3.place(x=1450, y=130, width=210, height=25)
          Lableeeeeee3=Label(Frameeeeeee3, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee3.grid(row=0, column=0)
          Frameeeeeeee3=Frame(main_fm, bg='white', width=230, height=25)
          Frameeeeeeee3.place(x=1680, y=130, width=230, height=25)   
          Lableeeeeeee3=Label(Frameeeeeeee3, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
          Lableeeeeeee3.grid(row=0, column=0)
      elif (audioControlAlt_Failed>0):
          print('Fail: Guideline 1.2.9 Audio-only (Live); Webpage has no Live Audio Content')
          Fcounter3=1; Pcounter3=0; NTcounter3=0; NDcounter3=0
          FLevelAAA2=1; PLevelAAA2=0; NTLevelAAA2=0; NDLevelAAA2=0
          ADLevelAAA2=1; VLevelAAA2=0; ETLevelAAA2=0

          FVisionImpairment3=0; PVisionImpairment3=0; NDVisionImpairment3=0; NTVisionImpairment3=0   
          FHearingDifficulty3=1; PHearingDifficulty3=0; NDHearingDifficulty3=0; NTHearingDifficulty3=0  
          FCognitiveDisability3=0; PCognitiveDisability3=0; NDCognitiveDisability3=0; NTCognitiveDisability3=0
          FMotionDisability3=0; PMotionDisability3=0; NDMotionDisability3=0; NTMotionDisability3=0
          FLearningDisability3=0; PLearningDisability3=0; NDLearningDisability3=0; NTLearningDisability3=0
          
          Frame3=Frame(main_fm, bg='white', width=380, height=25)
          Frame3.place(x=10, y=130, width=380, height=25)
          Lable3 = Label(Frame3, text='Sc (1.2.9) Audio-only (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable3.grid(row=0, column=0)
          Framee3=Frame(main_fm, bg='white', width=110, height=25)
          Framee3.place(x=400, y=130, width=110, height=25)
          Lablee3=Label(Framee3, text=audioControlAlt_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lablee3.grid(row=0, column=0)
          Frameee3=Frame(main_fm, bg='white', width=480, height=25)
          Frameee3.place(x=530, y=130, width=480, height=25)
          Lableee3=Label(Frameee3, text='Webpage has no Live Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee3.grid(row=0, column=0)
          Frameeee3=Frame(main_fm, bg='white', width=130, height=25)
          Frameeee3.place(x=1030, y=130, width=130, height=25)
          Lableeee3=Label(Frameeee3, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
          Lableeee3.grid(row=0, column=0)
          Frameeeee3=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee3.place(x=1180, y=130, width=80, height=25)
          Lableeeee3=Label(Frameeeee3, text=audioControlAlt_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee3.grid(row=0, column=0)
          Frameeeeee3=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee3.place(x=1280, y=130, width=150, height=25)
          Lableeeeee3=Label(Frameeeeee3, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee3.grid(row=0, column=0)
          Frameeeeeee3=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee3.place(x=1450, y=130, width=210, height=25)
          Lableeeeeee3=Label(Frameeeeeee3, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee3.grid(row=0, column=0)
          Frameeeeeeee3=Frame(main_fm, bg='white', width=230, height=25)
          Frameeeeeeee3.place(x=1680, y=130, width=230, height=25)
          Lableeeeeeee3=Label(Frameeeeeeee3, text='Re. Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeeee3.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.9 Audio-only (Live); Webpage has no Live Audio Content')
        NDcounter3=1; Pcounter3=0; Fcounter3=0; NTcounter3=0
        NDLevelAAA2=1; PLevelAAA2=0; FLevelAAA2=0; NTLevelAAA2=0
        VLevelAAA2=1; ADLevelAAA2=0; ETLevelAAA2=0

        NDVisionImpairment3=0; PVisionImpairment3=0; FVisionImpairment3=0; NTVisionImpairment3=0   
        NDHearingDifficulty3=1; PHearingDifficulty3=0; FHearingDifficulty3=0; NTHearingDifficulty3=0  
        NDCognitiveDisability3=0; PCognitiveDisability3=0; FCognitiveDisability3=0; NTCognitiveDisability3=0
        NDMotionDisability3=0; PMotionDisability3=0; FMotionDisability3=0; NTMotionDisability3=0
        NDLearningDisability3=0; PLearningDisability3=0; FLearningDisability3=0; NTLearningDisability3=0
          
        Frame3=Frame(main_fm, bg='white', width=380, height=25) 
        Frame3.place(x=10, y=130, width=380, height=25)
        Lable3=Label(Frame3, text='Sc (1.2.9) Audio-only (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable3.grid(row=0, column=0) 
        Framee3=Frame(main_fm, bg='white', width=110, height=25)
        Framee3.place(x=400, y=130, width=110, height=25)
        Lablee3=Label(Framee3, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee3.grid(row=0, column=0)
        Frameee3=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee3.place(x=530, y=130, width=480, height=25)
        Lableee3=Label(Frameee3, text='Webpage has no Live Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee3.grid(row=0, column=0) 
        Frameeee3=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee3.place(x=1030, y=130, width=130, height=25) 
        Lableeee3=Label(Frameeee3, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee3.grid(row=0, column=0) 
        Frameeeee3=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee3.place(x=1180, y=130, width=80, height=25)
        Lableeeee3=Label(Frameeeee3, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee3.grid(row=0, column=0)
        Frameeeeee3=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee3.place(x=1280, y=130, width=150, height=25)
        Lableeeeee3=Label(Frameeeeee3, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee3.grid(row=0, column=0)
        Frameeeeeee3=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee3.place(x=1450, y=130, width=210, height=25)
        Lableeeeeee3=Label(Frameeeeeee3, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee3.grid(row=0, column=0)
        Frameeeeeeee3=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee3.place(x=1680, y=130, width=230, height=25)   
        Lableeeeeeee3=Label(Frameeeeeeee3, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee3.grid(row=0, column=0)


      ####===========================Guideline 1.3.1 (level A)====================================####
      
      global link_totalCount

      Links_Object=1

      counter=0
      link_Failed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('href'== ''):
            counter+=1  
            link_Failed=counter                       
      print('Number of Failed Guideline for Links:', link_Failed)

      counter=0
      link_Passed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('href'!= ''):
            counter+=1  
            link_Passed=counter                         
      print('Number of passed Guideline for Links:',link_Passed)

      link_totalCount=link_Failed+link_Passed
      print('The total count of checked for Links:', link_totalCount)
    
      if(link_Failed>0):
          print('Fail: Guideline 1.3.1 Info and Relationships; Few Internal and External Links are Missing')
          Fcounter4=1; Pcounter4=0; NTcounter4=0; NDcounter4=0
          FLevelA2=1; PLevelA2=0; NTLevelA2=0; NDLevelA2=0
          ADLevelA2=1; VLevelA2=0; ETLevelA2=0

          FVisionImpairment4=1; PVisionImpairment4=0; NDVisionImpairment4=0; NTVisionImpairment4=0   
          FHearingDifficulty4=0; PHearingDifficulty4=0; NDHearingDifficulty4=0; NTHearingDifficulty4=0 
          FCognitiveDisability4=0; PCognitiveDisability4=0; NDCognitiveDisability4=0; NTCognitiveDisability4=0
          FMotionDisability4=0; PMotionDisability4=0; NDMotionDisability4=0; NTMotionDisability4=0
          FLearningDisability4=0; PLearningDisability4=0; NDLearningDisability4=0; NTLearningDisability4=0
          
          Frame4=Frame(main_fm, bg='white', width=380, height=20)
          Frame4.place(x=10, y=155, width=380, height=20)
          Lable4=Label(Frame4, text='Sc (1.3.1) Info and Relationships', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=110, height=25)
          Framee4.place(x=400, y=155, width=110, height=25)
          Lablee4=Label(Framee4, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=530, y=155, width=480, height=20)
          Lableee4=Label(Frameee4, text='Few Internal and External Links are Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1030, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1180, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=link_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=150, height=20)
          Frameeeeee4.place(x=1280, y=155, width=150, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeeee4.place(x=1450, y=155, width=210, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)
          Frameeeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeeee4.place(x=1680, y=155, width=230, height=20)
          Lableeeeeeee4=Label(Frameeeeeeee4, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeeee4.grid(row=0, column=0)
      elif (link_Failed<=0 and link_Passed>=1):
          print('Pass: Guideline 1.3.1 Info and Relationships; All Internal and External Links are Available')
          Pcounter4=1; Fcounter4=0; NTcounter4=0; NDcounter4=0
          PLevelA2=1; FLevelA2=0; NTLevelA2=0; NDLevelA2=0
          VLevelA2=1; ADLevelA2=0; ETLevelA2=0

          PVisionImpairment4=1; FVisionImpairment4=0; NDVisionImpairment4=0; NTVisionImpairment4=0;    
          PHearingDifficulty4=0; FHearingDifficulty4=0; NDHearingDifficulty4=0; NTHearingDifficulty4=0 
          PCognitiveDisability4=0; FCognitiveDisability4=0; NDCognitiveDisability4=0; NTCognitiveDisability4=0
          PMotionDisability4=0; FMotionDisability4=0; NDMotionDisability4=0; NTMotionDisability4=0
          PLearningDisability4=0; FLearningDisability4=0; NDLearningDisability4=0; NTLearningDisability4=0
          
          Frame4=Frame(main_fm, bg='white', width=380, height=20)
          Frame4.place(x=10, y=155, width=380, height=20)
          Lable4=Label(Frame4, text='Sc (1.3.1) Info and Relationships', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=110, height=25)
          Framee4.place(x=400, y=155, width=110, height=25)
          Lablee4=Label(Framee4, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=530, y=155, width=480, height=20)
          Lableee4=Label(Frameee4, text='All Internal and External Links are Available', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1030, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1180, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=link_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=150, height=20)
          Frameeeeee4.place(x=1280, y=155, width=150, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeeee4.place(x=1450, y=155, width=210, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)
          Frameeeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeeee4.place(x=1680, y=155, width=230, height=20)
          Lableeeeeeee4=Label(Frameeeeeeee4, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeeee4.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.3.1 Info and Relationships; Webpage has no Internal and External Links')
        NDcounter4=1; Pcounter4=0; Fcounter4=0; NTcounter4=0
        NDLevelA2=1; PLevelA2=0; FLevelA2=0; NTLevelA2=0
        VLevelA2=1; ADLevelA2=0; ETLevelA2=0

        NDVisionImpairment4=1; PVisionImpairment4=0; FVisionImpairment4=0; NTVisionImpairment4=0     
        NDHearingDifficulty4=0; PHearingDifficulty4=0; FHearingDifficulty4=0; NTHearingDifficulty4=0 
        NDCognitiveDisability4=0; PCognitiveDisability4=0; FCognitiveDisability4=0; NTCognitiveDisability4=0
        NDMotionDisability4=0; PMotionDisability4=0; FMotionDisability4=0; NTMotionDisability4=0
        NDLearningDisability4=0; PLearningDisability4=0; FLearningDisability4=0; NTLearningDisability4=0
        
        Frame4=Frame(main_fm, bg='white', width=380, height=20)
        Frame4.place(x=10, y=155, width=380, height=20)
        Lable4=Label(Frame4, text='Sc (1.3.1) Info and Relationships', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable4.grid(row=0, column=0)
        Framee4=Frame(main_fm, bg='white', width=110, height=25)
        Framee4.place(x=400, y=155, width=110, height=25)
        Lablee4=Label(Framee4, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee4.grid(row=0, column=0)
        Frameee4=Frame(main_fm, bg='white', width=480, height=20)
        Frameee4.place(x=530, y=155, width=480, height=20)
        Lableee4=Label(Frameee4, text='Webpage has no Internal and External Links', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee4.grid(row=0, column=0)
        Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee4.place(x=1030, y=155, width=130, height=20)
        Lableeee4=Label(Frameeee4, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee4.grid(row=0, column=0)
        Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee4.place(x=1180, y=155, width=80, height=25)
        Lableeeee4=Label(Frameeeee4, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee4.grid(row=0, column=0)
        Frameeeeee4=Frame(main_fm, bg='white', width=150, height=20)
        Frameeeeee4.place(x=1280, y=155, width=150, height=20)
        Lableeeeee4=Label(Frameeeeee4, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee4.grid(row=0, column=0)
        Frameeeeeee4=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeeee4.place(x=1450, y=155, width=210, height=20)
        Lableeeeeee4=Label(Frameeeeeee4, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee4.grid(row=0, column=0)
        Frameeeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeeee4.place(x=1680, y=155, width=230, height=20)
        Lableeeeeeee4=Label(Frameeeeeeee4, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee4.grid(row=0, column=0)


      ####===========================Guideline 1.3.4 (level AA)====================================#### 
      
      global displayOrientation_totalCount

      DisplayOrientation_Object=1

      counter=0
      displayOrientation_Failed=0
      displayOrientation = soup.find_all('meta')
      if(displayOrientation !=[]):          
        for item in displayOrientation:
          if ('name' == 'viewport'):
            if('content' != 'width=device-width, initial-scale=1.0'):
              counter+=1  
              displayOrientation_Failed=counter                         
      print('Number of Failed Guideline for Display Orientation:', displayOrientation_Failed)
    
      counter=0
      displayOrientation_Passed=0
      displayOrientation = soup.find_all('meta')
      if(displayOrientation !=[]):          
        for item in displayOrientation:
          if ('name' == 'viewport'):
            if('content' == 'width=device-width, initial-scale=1.0'):
              counter+=1  
              displayOrientation_Passed=counter                         
      print('Number of Passed Guideline for Display Orientation:', displayOrientation_Passed)
     
      displayOrientation_totalCount=displayOrientation_Passed+displayOrientation_Failed
      print('The total count of checked for Display Orientation:', displayOrientation_totalCount)

      if(displayOrientation_Failed>0):
        print('Fail: Guideline 1.3.4 Orientation; Webpage Display Orientation is not Defined')
        Fcounter5=1; Pcounter5=0; NTcounter5=0; NDcounter5=0
        FLevelAA1=1; PLevelAA1=0; NTLevelAA1=0; NDLevelAA1=0
        ADLevelAA1=1; VLevelAA1=0; ETLevelAA1=0

        FVisionImpairment5=1; PVisionImpairment5=0; NDVisionImpairment5=0; NTVisionImpairment15=0      
        FHearingDifficulty5=0; PHearingDifficulty5=0; NDHearingDifficulty5=0; NTHearingDifficulty5=0 
        FCognitiveDisability5=0; PCognitiveDisability5=0; NDCognitiveDisability5=0; NTCognitiveDisability5=0; 
        FMotionDisability5=0; PMotionDisability5=0; NDMotionDisability5=0; NTMotionDisability5=0
        FLearningDisability5=0; PLearningDisability5=0; NDLearningDisability5=0; NTLearningDisability5=0
          
        Frame5=Frame(main_fm, bg='white', width=380, height=25) 
        Frame5.place(x=10, y=180, width=380, height=25)
        Lable5=Label(Frame5, text='Sc (1.3.4) Orientation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable5.grid(row=0, column=0)
        Framee5=Frame(main_fm, bg='white', width=110, height=25)
        Framee5.place(x=400, y=180, width=110, height=25)
        Lablee5=Label(Framee5, text=displayOrientation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee5.grid(row=0, column=0)
        Frameee5=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee5.place(x=530, y=180, width=480, height=25)
        Lableee5=Label(Frameee5, text='Webpage Display Orientation is not Defined', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee5.grid(row=0, column=0)  
        Frameeee5=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee5.place(x=1030, y=180, width=130, height=25) 
        Lableeee5=Label(Frameeee5, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee5.grid(row=0, column=0) 
        Frameeeee5=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee5.place(x=1180, y=180, width=80, height=25)
        Lableeeee5=Label(Frameeeee5, text=displayOrientation_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee5.grid(row=0, column=0)
        Frameeeeee5=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee5.place(x=1280, y=180, width=150, height=25)
        Lableeeeee5=Label(Frameeeeee5, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee5.grid(row=0, column=0)
        Frameeeeeee5=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee5.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee5=Label(Frameeeeeee5, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee5.grid(row=0, column=0)
        Frameeeeeeee5=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee5.place(x=1680, y=180, width=230, height=25)   
        Lableeeeeeee5=Label(Frameeeeeeee5, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee5.grid(row=0, column=0) 
      elif (displayOrientation_Failed<=0 and displayOrientation_Passed>=1):
        print('Pass: Guideline 1.3.4 Orientation; Webpage Display Orientation is Defined')
        Pcounter5=1; Fcounter5=0; NTcounter5=0; NDcounter5=0
        PLevelAA1=1; FLevelAA1=0; NTLevelAA1=0; NDLevelAA1=0
        VLevelAA1=1; ADLevelAA1=0; ETLevelAA1=0

        PVisionImpairment5=1; FVisionImpairment5=0; NDVisionImpairment5=0; NTVisionImpairment5=0      
        PHearingDifficulty5=0; FHearingDifficulty5=0; NDHearingDifficulty5=0; NTHearingDifficulty5=0 
        PCognitiveDisability5=0; FCognitiveDisability5=0; NDCognitiveDisability5=0; NTCognitiveDisability5=0; 
        PMotionDisability5=0; FMotionDisability5=0; NDMotionDisability5=0; NTMotionDisability5=0
        PLearningDisability5=0; FLearningDisability5=0; NDLearningDisability5=0; NTLearningDisability5=0
          
        Frame5=Frame(main_fm, bg='white', width=380, height=25) 
        Frame5.place(x=10, y=180, width=380, height=25)
        Lable5=Label(Frame5, text='Sc (1.3.4) Orientation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable5.grid(row=0, column=0)
        Framee5=Frame(main_fm, bg='white', width=110, height=25)
        Framee5.place(x=400, y=180, width=110, height=25)
        Lablee5=Label(Framee5, text=displayOrientation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee5.grid(row=0, column=0)
        Frameee5=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee5.place(x=530, y=180, width=480, height=25)
        Lableee5=Label(Frameee5, text='Webpage Display Orientation is Defined', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee5.grid(row=0, column=0) 
        Frameeee5=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee5.place(x=1030, y=180, width=130, height=25) 
        Lableeee5=Label(Frameeee5, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee5.grid(row=0, column=0) 
        Frameeeee5=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee5.place(x=1180, y=180, width=80, height=25)
        Lableeeee5=Label(Frameeeee5, text=displayOrientation_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee5.grid(row=0, column=0)
        Frameeeeee5=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee5.place(x=1280, y=180, width=150, height=25)
        Lableeeeee5=Label(Frameeeeee5, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee5.grid(row=0, column=0)
        Frameeeeeee5=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee5.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee5=Label(Frameeeeeee5, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee5.grid(row=0, column=0)
        Frameeeeeeee5=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee5.place(x=1680, y=180, width=230, height=25)   
        Lableeeeeeee5=Label(Frameeeeeeee5, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee5.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.3.4 Orientation; Webpage Display Orientation is not Detected') 
        NDcounter5=1; Fcounter5=0; Pcounter5=0; NTcounter5=0
        NDLevelAA1=1; PLevelAA1=0; FLevelAA1=0; NTLevelAA1=0
        VLevelAA1=1; ADLevelAA1=0; ETLevelAA1=0

        NDVisionImpairment5=1; PVisionImpairment5=0; FVisionImpairment5=0; NTVisionImpairment5=0     
        NDHearingDifficulty5=0; PHearingDifficulty5=0; FHearingDifficulty5=0; NTHearingDifficulty5=0 
        NDCognitiveDisability5=0; PCognitiveDisability5=0; FCognitiveDisability5=0; NTCognitiveDisability5=0 
        NDMotionDisability5=0; PMotionDisability5=0; FMotionDisability5=0; NTMotionDisability5=0
        NDLearningDisability5=0; PLearningDisability5=0; FLearningDisability5=0; NTLearningDisability5=0
          
        Frame5=Frame(main_fm, bg='white', width=380, height=25) 
        Frame5.place(x=10, y=180, width=380, height=25)
        Lable5=Label(Frame5, text='Sc (1.3.4) Orientation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable5.grid(row=0, column=0) 
        Framee5=Frame(main_fm, bg='white', width=110, height=25)
        Framee5.place(x=400, y=180, width=110, height=25)
        Lablee5=Label(Framee5, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee5.grid(row=0, column=0)
        Frameee5=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee5.place(x=530, y=180, width=480, height=25)
        Lableee5=Label(Frameee5, text='Webpage Display Orientation is not Detected to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee5.grid(row=0, column=0) 
        Frameeee5=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee5.place(x=1030, y=180, width=130, height=25) 
        Lableeee5=Label(Frameeee5, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee5.grid(row=0, column=0) 
        Frameeeee5=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee5.place(x=1180, y=180, width=80, height=25)
        Lableeeee5=Label(Frameeeee5, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee5.grid(row=0, column=0)
        Frameeeeee5=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee5.place(x=1280, y=180, width=150, height=25)
        Lableeeeee5=Label(Frameeeeee5, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee5.grid(row=0, column=0)
        Frameeeeeee5=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee5.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee5=Label(Frameeeeeee5, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee5.grid(row=0, column=0)   
        Frameeeeeeee5=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee5.place(x=1680, y=180, width=230, height=25)   
        Lableeeeeeee5=Label(Frameeeeeeee5, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee5.grid(row=0, column=0) 


      ####===========================Guideline 1.3.5 (level AA)====================================#### 
      
      global placeholder_totalCount

      Input_Object=1

      counter=0
      placeholder_Failed=0
      inputLabel1 = soup.find_all('input')
      if(inputLabel1 !=[]):           
        for item in inputLabel1:
          if ('placeholder' == ''):
            counter+=1  
            placeholder_Failed=counter                        
      print('Number of Failed Guideline for placeholder:', placeholder_Failed)

      counter=0
      placeholder_Passed=0
      inputLabel1 = soup.find_all('input')
      if(inputLabel1 !=[]):          
        for item in inputLabel1:
          if ('placeholder'!= ''):
            counter+=1  
            placeholder_Passed=counter                        
      print('Number of Passed Guideline for placeholder:',placeholder_Passed)

      placeholder_totalCount=placeholder_Failed+placeholder_Passed
      print('The total count of checked for placeholder:', placeholder_totalCount)

    
      if(placeholder_Failed>0):
        print('Fail: Guideline 1.3.5 Identify Input Purpose; Input purpose is Missing')
        Frame6=Frame(main_fm, bg='white', width=380, height=25) 
        Frame6.place(x=10, y=205, width=380, height=25)
        Lable6=Label(Frame6, text='Sc (1.3.5) Identify Input Purpose (placeholder)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable6.grid(row=0, column=0)
        Framee6=Frame(main_fm, bg='white', width=110, height=25)
        Framee6.place(x=400, y=205, width=110, height=25)
        Lablee6=Label(Framee6, text=placeholder_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee6.grid(row=0, column=0)
        Frameee6=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee6.place(x=530, y=205, width=480, height=25)
        Lableee6=Label(Frameee6, text='Input Fields Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee6.grid(row=0, column=0)  
        Frameeee6=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee6.place(x=1030, y=205, width=130, height=25) 
        Lableeee6=Label(Frameeee6, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee6.grid(row=0, column=0) 
        Frameeeee6=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee6.place(x=1180, y=205, width=80, height=25)
        Lableeeee6=Label(Frameeeee6, text=placeholder_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee6.grid(row=0, column=0)
        Frameeeeee6=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee6.place(x=1280, y=205, width=150, height=25)
        Lableeeeee6=Label(Frameeeeee6, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee6.grid(row=0, column=0)
        Frameeeeeee6=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee6.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee6=Label(Frameeeeeee6, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee6.grid(row=0, column=0)
        Frameeeeeeee6=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee6.place(x=1680, y=205, width=230, height=25)   
        Lableeeeeeee6=Label(Frameeeeeeee6, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee6.grid(row=0, column=0) 
      elif (placeholder_Failed<=0 and placeholder_Passed>=1):
        print('Pass: Guideline 1.3.5 Identify Input Purpose; Input purpose is Specified')
        Frame6=Frame(main_fm, bg='white', width=380, height=25) 
        Frame6.place(x=10, y=205, width=380, height=25)
        Lable6=Label(Frame6, text='Sc (1.3.5) Identify Input Purpose (placeholder)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable6.grid(row=0, column=0)
        Framee6=Frame(main_fm, bg='white', width=110, height=25)
        Framee6.place(x=400, y=205, width=110, height=25)
        Lablee6=Label(Framee6, text=placeholder_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee6.grid(row=0, column=0)
        Frameee6=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee6.place(x=530, y=205, width=480, height=25)
        Lableee6=Label(Frameee6, text='Input Fields Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee6.grid(row=0, column=0) 
        Frameeee6=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee6.place(x=1030, y=205, width=130, height=25) 
        Lableeee6=Label(Frameeee6, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee6.grid(row=0, column=0) 
        Frameeeee6=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee6.place(x=1180, y=205, width=80, height=25)
        Lableeeee6=Label(Frameeeee6, text=placeholder_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee6.grid(row=0, column=0)
        Frameeeeee6=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee6.place(x=1280, y=205, width=150, height=25)
        Lableeeeee6=Label(Frameeeeee6, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee6.grid(row=0, column=0)
        Frameeeeeee6=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee6.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee6=Label(Frameeeeeee6, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee6.grid(row=0, column=0)
        Frameeeeeeee6=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee6.place(x=1680, y=205, width=230, height=25)   
        Lableeeeeeee6=Label(Frameeeeeeee6, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee6.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.3.5 Identify Input Purpose; Input fields are not Specified')
        Frame6=Frame(main_fm, bg='white', width=380, height=25) 
        Frame6.place(x=10, y=205, width=380, height=25)
        Lable6=Label(Frame6, text='Sc (1.3.5) Identify Input Purpose (placeholder)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable6.grid(row=0, column=0) 
        Framee6=Frame(main_fm, bg='white', width=110, height=25)
        Framee6.place(x=400, y=205, width=110, height=25)
        Lablee6=Label(Framee6, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee6.grid(row=0, column=0)
        Frameee6=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee6.place(x=530, y=205, width=480, height=25)
        Lableee6=Label(Frameee6, text='Input Fields are not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee6.grid(row=0, column=0) 
        Frameeee6=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee6.place(x=1030, y=205, width=130, height=25) 
        Lableeee6=Label(Frameeee6, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee6.grid(row=0, column=0) 
        Frameeeee6=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee6.place(x=1180, y=205, width=80, height=25)
        Lableeeee6=Label(Frameeeee6, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee6.grid(row=0, column=0)
        Frameeeeee6=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee6.place(x=1280, y=205, width=150, height=25)
        Lableeeeee6=Label(Frameeeeee6, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee6.grid(row=0, column=0)
        Frameeeeeee6=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee6.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee6=Label(Frameeeeeee6, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee6.grid(row=0, column=0)   
        Frameeeeeeee6=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee6.place(x=1680, y=205, width=230, height=25)   
        Lableeeeeeee6=Label(Frameeeeeeee6, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee6.grid(row=0, column=0) 

      ####-------------------####

      global ariaLabel_totalCount

      counter=0
      araiLabel_Failed=0
      inputfield1 = soup.find_all('input')
      if(inputfield1 !=[]):        
        for item in inputfield1:
          if('aria-label'== ''):
            counter+=1  
            araiLabel_Failed=counter                         
      print('Number of Failed Guideline for Aria Label:', araiLabel_Failed)

      counter=0
      araiLabel_Passed=0
      inputfield1 = soup.find_all('input')
      if(inputfield1 !=[]):        
        for item in inputfield1:
          if('aria-label'!= ''):
            counter+=1  
            araiLabel_Passed=counter                        
      print('Number of Failed Guideline for Aria Label:',araiLabel_Passed)

      ariaLabel_totalCount=araiLabel_Failed+araiLabel_Passed
      print('The total count of checked for Aria Label:', ariaLabel_totalCount)

      if(araiLabel_Failed>0):
        print('Fail: Guideline 1.3.5 Identify Input Purpose; Input purpose is Missing') 
        Frame7=Frame(main_fm, bg='white', width=380, height=25) 
        Frame7.place(x=10, y=230, width=380, height=25)
        Lable7=Label(Frame7, text='Sc (1.3.5) Identify Input Purpose (aria-label)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable7.grid(row=0, column=0) 
        Framee7=Frame(main_fm, bg='white', width=110, height=25)
        Framee7.place(x=400, y=230, width=110, height=25)
        Lablee7=Label(Framee7, text=ariaLabel_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee7.grid(row=0, column=0)
        Frameee7=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee7.place(x=530, y=230, width=480, height=25)
        Lableee7=Label(Frameee7, text='Input Fields Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee7.grid(row=0, column=0) 
        Frameeee7=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee7.place(x=1030, y=230, width=130, height=25) 
        Lableeee7=Label(Frameeee7, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee7.grid(row=0, column=0) 
        Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee7.place(x=1180, y=230, width=80, height=25)
        Lableeeee7=Label(Frameeeee7, text=araiLabel_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee7.grid(row=0, column=0)
        Frameeeeee7=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee7.place(x=1280, y=230, width=150, height=25)
        Lableeeeee7=Label(Frameeeeee7, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee7.grid(row=0, column=0)
        Frameeeeeee7=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee7.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee7=Label(Frameeeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee7.grid(row=0, column=0)
        Frameeeeeeee7=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee7.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee7=Label(Frameeeeeeee7, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee7.grid(row=0, column=0) 
      elif ((araiLabel_Failed<=0) and (araiLabel_Passed>=1)):
        print('Pass: Guideline 1.3.5 Identify Input Purpose; Input purpose is Specified') 
        Frame7=Frame(main_fm, bg='white', width=380, height=25) 
        Frame7.place(x=10, y=230, width=380, height=25)
        Lable7=Label(Frame7, text='Sc (1.3.5) Identify Input Purpose (aria-label)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable7.grid(row=0, column=0)
        Framee7=Frame(main_fm, bg='white', width=110, height=25)
        Framee7.place(x=400, y=230, width=110, height=25)
        Lablee7=Label(Framee7, text=ariaLabel_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee7.grid(row=0, column=0)
        Frameee7=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee7.place(x=530, y=230, width=480, height=25)
        Lableee7=Label(Frameee7, text='Input Fields Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee7.grid(row=0, column=0) 
        Frameeee7=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee7.place(x=1030, y=230, width=130, height=25) 
        Lableeee7=Label(Frameeee7, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee7.grid(row=0, column=0) 
        Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee7.place(x=1180, y=230, width=80, height=25)
        Lableeeee7=Label(Frameeeee7, text=araiLabel_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee7.grid(row=0, column=0)
        Frameeeeee7=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee7.place(x=1280, y=230, width=150, height=25)
        Lableeeeee7=Label(Frameeeeee7, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee7.grid(row=0, column=0)
        Frameeeeeee7=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee7.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee7=Label(Frameeeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee7.grid(row=0, column=0)
        Frameeeeeeee7=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee7.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee7=Label(Frameeeeeeee7, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee7.grid(row=0, column=0) 
      else:
        print('Not Detected: Guideline 1.3.5 Identify Input Purpose; Input fields are not Specified')  
        Frame7=Frame(main_fm, bg='white', width=380, height=25) 
        Frame7.place(x=10, y=230, width=380, height=25)
        Lable7=Label(Frame7, text='Sc (1.3.5) Identify Input Purpose (aria-label)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable7.grid(row=0, column=0) 
        Framee7=Frame(main_fm, bg='white', width=110, height=25)
        Framee7.place(x=400, y=230, width=110, height=25)
        Lablee7=Label(Framee7, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee7.grid(row=0, column=0)
        Frameee7=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee7.place(x=530, y=230, width=480, height=25)
        Lableee7=Label(Frameee7, text='Input Fields are not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee7.grid(row=0, column=0) 
        Frameeee7=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee7.place(x=1030, y=230, width=130, height=25) 
        Lableeee7=Label(Frameeee7, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee7.grid(row=0, column=0) 
        Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee7.place(x=1180, y=230, width=80, height=25)
        Lableeeee7=Label(Frameeeee7, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee7.grid(row=0, column=0)
        Frameeeeee7=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee7.place(x=1280, y=230, width=150, height=25)
        Lableeeeee7=Label(Frameeeeee7, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee7.grid(row=0, column=0)
        Frameeeeeee7=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee7.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee7=Label(Frameeeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee7.grid(row=0, column=0)
        Frameeeeeeee7=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee7.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee7=Label(Frameeeeeeee7, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee7.grid(row=0, column=0) 

      if ((placeholder_Failed>0 and araiLabel_Failed>0) or (placeholder_Failed>0 or araiLabel_Failed>0)):
        print('Fail: Guideline 1.3.5 Identify Input Purpose; Input purpose is Missing')
        Fcounter6=1; Pcounter6=0; NTcounter6=0; NDcounter6=0
        FLevelAA2=1; PLevelAA2=0; NTLevelAA2=0; NDLevelAA2=0
        ADLevelAA2=1; VLevelAA2=0; ETLevelAA2=0

        FVisionImpairment6=0; PVisionImpairment6=0; NDVisionImpairment6=0; NTVisionImpairment6=0      
        FHearingDifficulty6=0; PHearingDifficulty6=0; NDHearingDifficulty6=0; NTHearingDifficulty6=0 
        FCognitiveDisability6=1; PCognitiveDisability6=0; NDCognitiveDisability6=0; NTCognitiveDisability6=0 
        FMotionDisability6=0; PMotionDisability6=0; NDMotionDisability6=0; NTMotionDisability6=0
        FLearningDisability6=0; PLearningDisability6=0; NDLearningDisability6=0; NTLearningDisability6=0

      elif ((placeholder_Failed<=0 and placeholder_Passed>=1) and (araiLabel_Failed<=0 and araiLabel_Passed>=1)):
        print('Pass: Guideline 1.3.5 Identify Input Purpose; Input purpose is Specified')
        Pcounter6=1; Fcounter6=0; NTcounter6=0; NDcounter6=0
        PLevelAA2=1; FLevelAA2=0; NTLevelAA2=0; NDLevelAA2=0
        VLevelAA2=1; ADLevelAA2=0; ETLevelAA2=0

        PVisionImpairment6=0; FVisionImpairment6=0; NDVisionImpairment6=0; NTVisionImpairment6=0      
        PHearingDifficulty6=0; FHearingDifficulty6=0; NDHearingDifficulty6=0; NTHearingDifficulty6=0
        PCognitiveDisability6=1; FCognitiveDisability6=0; NDCognitiveDisability6=0; NTCognitiveDisability6=0 
        PMotionDisability6=0; FMotionDisability6=0; NDMotionDisability6=0; NTMotionDisability6=0
        PLearningDisability6=0; FLearningDisability6=0; NDLearningDisability6=0; NTLearningDisability6=0

      else:
        print('Not Detected: Guideline 1.3.5 Identify Input Purpose; Input fields are not Specified')
        NDcounter6=1; Fcounter6=0; Pcounter6=0; NTcounter6=0
        NDLevelAA2=1; PLevelAA2=0; FLevelAA2=0; NTLevelAA2=0
        VLevelAA2=1; ADLevelAA2=0; ETLevelAA2=0

        NDVisionImpairment6=0; PVisionImpairment6=0; FVisionImpairment6=0; NTVisionImpairment6=0     
        NDHearingDifficulty6=0; PHearingDifficulty6=0; FHearingDifficulty6=0; NTHearingDifficulty6=0 
        NDCognitiveDisability6=1; PCognitiveDisability6=0; FCognitiveDisability6=0; NTCognitiveDisability6=0 
        NDMotionDisability6=0; PMotionDisability6=0; FMotionDisability6=0; NTMotionDisability6=0
        NDLearningDisability6=0; PLearningDisability6=0; FLearningDisability6=0; NTLearningDisability6=0


      ####===========================Guideline 1.3.6 (level AAA)====================================####
      
      global arialableButton_totalCount

      Button_Object=1

      counter=0
      arialableButton_Failed=0
      buttons1 = soup.find_all('button')
      if(buttons1 !=[]):            
        for item in buttons1:
          if (('aria-label'== ' ') or ('title'==' ')):
            counter+=1  
            arialableButton_Failed=counter                        
      print('Number of Failed Guideline for Aria label of Buttons:',arialableButton_Failed)

      counter=0
      arialableButton_Passed=0
      buttons1 = soup.find_all('button')
      if(buttons1 !=[]):           
        for item in buttons1:
          if (('aria-label'!= ' ') and ('title' != ' ')):
            counter+=1  
            arialableButton_Passed=counter                         
      print('Number of Passed Guideline for Aria label of Buttons:',arialableButton_Passed)

      arialableButton_totalCount=arialableButton_Failed+arialableButton_Passed
      print('The total count of checked for Aria label of Buttons:', arialableButton_totalCount)

      if(arialableButton_Failed>0):
        print('Fail: Guideline 1.3.6 Identify Purpose (Buttons); Buttons purpose is Missing')
        Fcounter7=1; Pcounter7=0; NTcounter7=0; NDcounter7=0
        FLevelAAA3=1; PLevelAAA3=0; NTLevelAAA3=0; NDLevelAAA3=0 
        ADLevelAAA3=1; VLevelAAA3=0; ETLevelAAA3=0

        FVisionImpairment7=0; PVisionImpairment7=0; NDVisionImpairment7=0; NTVisionImpairment7=0      
        FHearingDifficulty7=0; PHearingDifficulty7=0; NDHearingDifficulty7=0; NTHearingDifficulty7=0 
        FCognitiveDisability7=1; PCognitiveDisability7=0; NDCognitiveDisability7=0; NTCognitiveDisability7=0
        FMotionDisability7=0; PMotionDisability7=0; NDMotionDisability7=0; NTMotionDisability7=0
        FLearningDisability7=0; PLearningDisability7=0; NDLearningDisability7=0; NTLearningDisability7=0
          
        Frame8=Frame(main_fm, bg='white', width=380, height=25) 
        Frame8.place(x=10, y=255, width=380, height=25)
        Lable8=Label(Frame8, text='Sc (1.3.6) Identify Purpose (Buttons)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0) 
        Framee8=Frame(main_fm, bg='white', width=110, height=25)
        Framee8.place(x=400, y=255, width=110, height=25)
        Lablee8=Label(Framee8, text=arialableButton_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee8.place(x=530, y=255, width=480, height=25)
        Lableee8=Label(Frameee8, text='Buttons purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee8.place(x=1030, y=255, width=130, height=25) 
        Lableeee8=Label(Frameeee8, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee8.grid(row=0, column=0) 
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1180, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text=arialableButton_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee8.place(x=1280, y=255, width=150, height=25)
        Lableeeeee8=Label(Frameeeeee8, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee8.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee8=Label(Frameeeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)
        Frameeeeeeee8=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee8.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee8=Label(Frameeeeeeee8, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee8.grid(row=0, column=0)
      elif (arialableButton_Failed<=0 and arialableButton_Passed>=1):
        print('Pass: Guideline 1.3.6 Identify Purpose; All Buttons purposes is specified')
        Pcounter7=1; Fcounter7=0; NTcounter7=0; NDcounter7=0
        PLevelAAA3=1; FLevelAAA3=0; NTLevelAAA3=0; NDLevelAAA3=0
        VLevelAAA3=1; ADLevelAAA3=0; ETLevelAAA3=0

        PVisionImpairment7=0; FVisionImpairment7=0; NDVisionImpairment7=0; NTVisionImpairment7=0      
        PHearingDifficulty7=0; FHearingDifficulty7=0; NDHearingDifficulty7=0; NTHearingDifficulty7=0 
        PCognitiveDisability7=1; FCognitiveDisability7=0; NDCognitiveDisability7=0; NTCognitiveDisability7=0
        PMotionDisability7=0; FMotionDisability7=0; NDMotionDisability7=0; NTMotionDisability7=0
        PLearningDisability7=0; FLearningDisability7=0; NDLearningDisability7=0; NTLearningDisability7=0
          
        Frame8=Frame(main_fm, bg='white', width=380, height=25) 
        Frame8.place(x=10, y=255, width=380, height=25)
        Lable8=Label(Frame8, text='Sc (1.3.6) Identify Purpose (Buttons)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0) 
        Framee8=Frame(main_fm, bg='white', width=110, height=25)
        Framee8.place(x=400, y=255, width=110, height=25)
        Lablee8=Label(Framee8, text=arialableButton_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee8.place(x=530, y=255, width=480, height=25)
        Lableee8=Label(Frameee8, text='All Buttons Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee8.place(x=1030, y=255, width=130, height=25) 
        Lableeee8=Label(Frameeee8, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee8.grid(row=0, column=0) 
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1180, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text=arialableButton_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee8.place(x=1280, y=255, width=150, height=25)
        Lableeeeee8=Label(Frameeeeee8, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee8.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee8=Label(Frameeeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)
        Frameeeeeeee8=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee8.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee8=Label(Frameeeeeeee8, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee8.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.3.6 Identify Purpose; Webpage has no Identifiable Buttons') 
        NDcounter7=1; Pcounter7=0; Fcounter7=0; NTcounter7=0
        NDLevelAAA3=1; PLevelAAA3=0; FLevelAAA3=3; NTLevelAAA3=0 
        VLevelAAA3=1; ADLevelAAA3=0; ETLevelAAA3=0

        NDVisionImpairment7=0; PVisionImpairment7=0; FVisionImpairment7=0; NTVisionImpairment7=0      
        NDHearingDifficulty7=0; PHearingDifficulty7=0; FHearingDifficulty7=0; NTHearingDifficulty7=0
        NDCognitiveDisability7=1; PCognitiveDisability7=0; FCognitiveDisability7=0; NTCognitiveDisability7=0
        NDMotionDisability7=0; PMotionDisability7=0; FMotionDisability7=0; NTMotionDisability7=0
        NDLearningDisability7=0; PLearningDisability7=0; FLearningDisability7=0; NTLearningDisability7=0
        
        Frame8=Frame(main_fm, bg='white', width=380, height=25) 
        Frame8.place(x=10, y=255, width=380, height=25)
        Lable8=Label(Frame8, text='Sc (1.3.6) Identify Purpose (Buttons)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0) 
        Framee8=Frame(main_fm, bg='white', width=110, height=25)
        Framee8.place(x=400, y=255, width=110, height=25)
        Lablee8=Label(Framee8, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee8.place(x=530, y=255, width=480, height=25)
        Lableee8=Label(Frameee8, text='Webpage has no Identifiable Buttons', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee8.place(x=1030, y=255, width=130, height=25) 
        Lableeee8=Label(Frameeee8, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee8.grid(row=0, column=0) 
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1180, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee8.place(x=1280, y=255, width=150, height=25)
        Lableeeeee8=Label(Frameeeeee8, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee8.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee8=Label(Frameeeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)
        Frameeeeeeee8=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee8.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee8=Label(Frameeeeeeee8, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee8.grid(row=0, column=0)

      ####===========================Guideline 1.4.1 (level A)====================================####230

      global headings
      global headingColor_totalCount

      Headings_Object= 1 

      counter=0
      headings=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      if(headingList !=[]):           
        for item in headingList:
          counter+=1  
          headings=counter               
      print('Number of Heading:', headings)

      counter=0
      headingColor_Failed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      if(headingList !=[]):           
        for item in headingList:
          if ((('style'== 'color:red') and ('style'=="background-color:black")) or (('style'== 'color:black') and ('style'=="background-color:red"))
              or (('style'== 'color:red') and ('style'=="background-color:green")) or (('style'== 'color:green') and ('style'=="background-color:red"))):
            counter+=1  
            headingColor_Failed=counter               
      print('Number of Failed Guideline for Heading:', headingColor_Failed)

      counter=0
      headingColor_Passed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      if(headingList !=[]):           
        for item in headingList:
          if ((('style'!= 'color:red') and ('style'!="background-color:black")) or (('style'!= 'color:black') and ('style'!="background-color:red"))
              or (('style'!= 'color:red') and ('style'!="background-color:green")) or (('style'!= 'color:green') and ('style'!="background-color:red"))):
            counter+=1  
            headingColor_Passed=counter               
      print('Number of Passed Guideline for Heading:', headingColor_Passed)

      headingColor_totalCount=headingColor_Passed+headingColor_Failed
      print('Total Checked for Heading:', headingColor_totalCount)

      if (headingColor_Failed>0):
        print('Fail: Guideline 1.4.1 Use of Color; Webpage Heading Color is not Accessible')
        Frame9=Frame(main_fm, bg='white', width=380, height=25)
        Frame9.place(x=10, y=280, width=380, height=25)
        Lable9=Label(Frame9, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable9.grid(row=0, column=0)
        Framee9=Frame(main_fm, bg='white', width=110, height=25)
        Framee9.place(x=400, y=280, width=110, height=25)
        Lablee9=Label(Framee9, text=headingColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee9.grid(row=0, column=0)
        Frameee9=Frame(main_fm, bg='white', width=480, height=25)
        Frameee9.place(x=530, y=280, width=480, height=25)
        Lableee9=Label(Frameee9, text='Webpage Heading Color is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee9.grid(row=0, column=0)
        Frameeee9=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee9.place(x=1030, y=280, width=130, height=25)
        Lableeee9=Label(Frameeee9, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee9.grid(row=0, column=0)
        Frameeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeee9.place(x=1180, y=280, width=110, height=25)
        Lableeeee9=Label(Frameeeee9, text=headingColor_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee9.grid(row=0, column=0)
        Frameeeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeeee9.place(x=1280, y=280, width=110, height=25)
        Lableeeeee9=Label(Frameeeeee9, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee9.grid(row=0, column=0)
        Frameeeeeee9=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee9.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee9=Label(Frameeeeeee9, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee9.grid(row=0, column=0)
        Frameeeeeeee9=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee9.place(x=1680, y=280, width=230, height=25)
        Lableeeeeeee9=Label(Frameeeeeeee9, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee9.grid(row=0, column=0)
      elif(headingColor_Failed<=0 and headingColor_Passed>=1):
        print('Pass: Guideline 1.4.1 Use of Color; Webpage Heading Color is Accessible')
        Frame9=Frame(main_fm, bg='white', width=380, height=25)
        Frame9.place(x=10, y=280, width=380, height=25)
        Lable9=Label(Frame9, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable9.grid(row=0, column=0)
        Framee9=Frame(main_fm, bg='white', width=110, height=25)
        Framee9.place(x=400, y=280, width=110, height=25)
        Lablee9=Label(Framee9, text=headingColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee9.grid(row=0, column=0)
        Frameee9=Frame(main_fm, bg='white', width=480, height=25)
        Frameee9.place(x=530, y=280, width=480, height=25)
        Lableee9=Label(Frameee9, text='Webpage Heading Color is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee9.grid(row=0, column=0)
        Frameeee9=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee9.place(x=1030, y=280, width=130, height=25)
        Lableeee9=Label(Frameeee9, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee9.grid(row=0, column=0)
        Frameeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeee9.place(x=1180, y=280, width=110, height=25)
        Lableeeee9=Label(Frameeeee9, text=headingColor_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee9.grid(row=0, column=0)
        Frameeeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeeee9.place(x=1280, y=280, width=110, height=25)
        Lableeeeee9=Label(Frameeeeee9, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee9.grid(row=0, column=0)
        Frameeeeeee9=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee9.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee9=Label(Frameeeeeee9, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee9.grid(row=0, column=0)
        Frameeeeeeee9=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee9.place(x=1680, y=280, width=230, height=25)
        Lableeeeeeee9=Label(Frameeeeeeee9, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee9.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.4.1 Use of Color; Webpage has no Identifiable Heading')
        Frame9=Frame(main_fm, bg='white', width=380, height=25) 
        Frame9.place(x=10, y=280, width=380, height=25)
        Lable9=Label(Frame9, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable9.grid(row=0, column=0) 
        Framee9=Frame(main_fm, bg='white', width=110, height=25)
        Framee9.place(x=400, y=280, width=110, height=25)
        Lablee9=Label(Framee9, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee9.grid(row=0, column=0)
        Frameee9=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee9.place(x=530, y=280, width=480, height=25)
        Lableee9=Label(Frameee9, text='Webpage has no Identifiable Heading', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee9.grid(row=0, column=0)
        Frameeee9=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee9.place(x=1030, y=280, width=130, height=25) 
        Lableeee9=Label(Frameeee9, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee9.grid(row=0, column=0) 
        Frameeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeee9.place(x=1180, y=280, width=110, height=25)
        Lableeeee9=Label(Frameeeee9, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee9.grid(row=0, column=0)
        Frameeeeee9=Frame(main_fm, bg='white', width=110, height=25)
        Frameeeeee9.place(x=1280, y=280, width=110, height=25)
        Lableeeeee9=Label(Frameeeeee9, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee9.grid(row=0, column=0)
        Frameeeeeee9=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee9.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee9=Label(Frameeeeeee9, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee9.grid(row=0, column=0)
        Frameeeeeeee9=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee9.place(x=1680, y=280, width=230, height=25)   
        Lableeeeeeee9=Label(Frameeeeeeee9, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee9.grid(row=0, column=0)


      ####---------------------------###

      global header
      global headerColor_totalCount

      Header_Object=1

      counter=0
      header=0
      headerList = soup.find_all('header')
      if(headerList !=[]):           
        for item in headerList:
          counter+=1  
          header=counter               
      print('Number of Header:', header)
    

      counter=0
      headerColor_Failed=0
      headerList = soup.find_all('header')
      if(headerList !=[]):           
        for item in headerList:
          if ((('style'== 'color:red') and ('style'=="background-color:black")) or (('style'== 'color:black') and ('style'=="background-color:red"))
              or (('style'== 'color:red') and ('style'=="background-color:green")) or (('style'== 'color:green') and ('style'=="background-color:red"))):
            counter+=1  
            headerColor_Failed=counter               
      print('Number of Failed Guideline for Header:', headerColor_Failed)

      counter=0
      headerColor_Passed=0
      headerList = soup.find_all('header')
      if(headerList !=[]):           
        for item in headerList:
          if ((('style'!= 'color:red') and ('style'!="background-color:black")) or (('style'!= 'color:black') and ('style'!="background-color:red"))
              or (('style'!= 'color:red') and ('style'!="background-color:green")) or (('style'!= 'color:green') and ('style'!="background-color:red"))):
            counter+=1  
            headerColor_Passed=counter               
      print('Number of Passed Guideline for Header:', headerColor_Passed)

      headerColor_totalCount=headerColor_Passed+headerColor_Failed
      print('Total Checked for Header:', headerColor_totalCount)

      if (headerColor_Failed>0):
        print('Fail: Guideline 1.4.1 Use of Color; Webpage Header Color is not Accessible') 
        Frame10=Frame(main_fm, bg='white', width=380, height=25)
        Frame10.place(x=10, y=305, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=305, width=110, height=25)
        Lablee10=Label(Framee10, text=headerColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25)
        Frameee10.place(x=530, y=305, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage Header Color is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee10.place(x=1030, y=305, width=130, height=25)
        Lableeee10=Label(Frameeee10, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=305, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=headerColor_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=305, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=305, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee10.place(x=1680, y=305, width=230, height=25)
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee10.grid(row=0, column=0)
      elif(headerColor_Failed<=0 and headerColor_Passed>=1):
        print('Pass: Guideline 1.4.1 Use of Color; Webpage Header Color is Accessible')
        Frame10=Frame(main_fm, bg='white', width=380, height=25)
        Frame10.place(x=10, y=305, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=305, width=110, height=25)
        Lablee10=Label(Framee10, text=headerColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25)
        Frameee10.place(x=530, y=305, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage Header Color is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee10.place(x=1030, y=305, width=130, height=25)
        Lableeee10=Label(Frameeee10, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=305, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=headerColor_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=305, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=305, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee10.place(x=1680, y=305, width=230, height=25)
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee10.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.4.1 Use of Color; Webpage has no Identifiable Header') 
        Frame10=Frame(main_fm, bg='white', width=380, height=25) 
        Frame10.place(x=10, y=305, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0) 
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=305, width=110, height=25)
        Lablee10=Label(Framee10, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee10.place(x=530, y=305, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage has no Identifiable Header', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee10.place(x=1030, y=305, width=130, height=25) 
        Lableeee10=Label(Frameeee10, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee10.grid(row=0, column=0) 
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=305, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=305, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=305, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee10.place(x=1680, y=305, width=230, height=25)   
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee10.grid(row=0, column=0)  


       ####----------------------------###

      global paragraphColor_totalCount

      Paragraph_Object=1

      counter=0
      paragraphColor_Failed=0
      paragraphList = soup.find_all('p')
      if(paragraphList !=[]):           
        for item in paragraphList:
          if ((('style'== 'color:red') and ('style'=="background-color:black")) or (('style'== 'color:black') and ('style'=="background-color:red"))
              or (('style'== 'color:red') and ('style'=="background-color:green")) or (('style'== 'color:green') and ('style'=="background-color:red"))):
            counter+=1  
            paragraphColor_Failed=counter               
      print('Number of Failed Guideline for Paragraph:', paragraphColor_Failed)

      counter=0
      paragraphColor_Passed=0
      paragraphList = soup.find_all('p')
      if(paragraphList !=[]):           
        for item in paragraphList:
          if ((('style'!= 'color:red') and ('style'!="background-color:black")) or (('style'!= 'color:black') and ('style'!="background-color:red"))
              or (('style'!= 'color:red') and ('style'!="background-color:green")) or (('style'!= 'color:green') and ('style'!="background-color:red"))):
            counter+=1  
            paragraphColor_Passed=counter               
      print('Number of Passed Guideline for Paragraph:', paragraphColor_Passed)

      paragraphColor_totalCount=paragraphColor_Passed+paragraphColor_Failed
      print('Total Checked for Paragraph:', paragraphColor_totalCount)

      if (paragraphColor_Failed>0):
        print('Fail: Guideline 1.4.1 Use of Color; Webpage Paragraph and its Text Color is not Accessible') 
        Frame10=Frame(main_fm, bg='white', width=380, height=25)
        Frame10.place(x=10, y=330, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=330, width=110, height=25)
        Lablee10=Label(Framee10, text=paragraphColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25)
        Frameee10.place(x=530, y=330, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage Paragraph and its Text Color is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee10.place(x=1030, y=330, width=130, height=25)
        Lableeee10=Label(Frameeee10, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=330, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=paragraphColor_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=330, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=330, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee10.place(x=1680, y=330, width=230, height=25)
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee10.grid(row=0, column=0)
      elif(paragraphColor_Failed<=0 and paragraphColor_Passed>=1):
        print('Pass: Guideline 1.4.1 Use of Color; Webpage Paragraph and its Text Color is Accessible')
        Frame10=Frame(main_fm, bg='white', width=380, height=25)
        Frame10.place(x=10, y=330, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=330, width=110, height=25)
        Lablee10=Label(Framee10, text=paragraphColor_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25)
        Frameee10.place(x=530, y=330, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage Paragraph and its Text Color is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee10.place(x=1030, y=330, width=130, height=25)
        Lableeee10=Label(Frameeee10, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=330, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=paragraphColor_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=330, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=330, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee10.place(x=1680, y=330, width=230, height=25)
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee10.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.4.1 Use of Color; Webpage has no Identifiable Paragraph') 
        Frame10=Frame(main_fm, bg='white', width=380, height=25) 
        Frame10.place(x=10, y=330, width=380, height=25)
        Lable10=Label(Frame10, text='Sc (1.4.1) Use of Color', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0) 
        Framee10=Frame(main_fm, bg='white', width=110, height=25)
        Framee10.place(x=400, y=330, width=110, height=25)
        Lablee10=Label(Framee10, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee10.place(x=530, y=330, width=480, height=25)
        Lableee10=Label(Frameee10, text='Webpage has no Identifiable Paragraph', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee10.place(x=1030, y=330, width=130, height=25) 
        Lableeee10=Label(Frameeee10, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee10.grid(row=0, column=0) 
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1180, y=330, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee10.place(x=1280, y=330, width=150, height=25)
        Lableeeeee10=Label(Frameeeeee10, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee10.place(x=1450, y=330, width=210, height=25)
        Lableeeeeee10=Label(Frameeeeeee10, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
        Frameeeeeeee10=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee10.place(x=1680, y=330, width=230, height=25)   
        Lableeeeeeee10=Label(Frameeeeeeee10, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee10.grid(row=0, column=0)

        ##-------------------##

      if ((headingColor_Failed>0 and headerColor_Failed>0 and paragraphColor_Failed>0) or (headingColor_Failed>0 or headerColor_Failed>0 or paragraphColor_Failed>0)):
        print('Fail: Guideline 1.4.1 Use of Color; Webpage Heading, Header and Text Color is not Accessible')
        Fcounter8=1; Pcounter8=0; NTcounter8=0; NDcounter8=0
        FLevelA3= 1; PLevelA3=0; NTLevelA3=0; NDLevelA3=0
        ADLevelA3=1; VLevelA3=0; ETLevelA3=0

        FVisionImpairment8=1; PVisionImpairment8=0; NDVisionImpairment8=0; NTVisionImpairment8=0
        FHearingDifficulty8=0; PHearingDifficulty8=0; NDHearingDifficulty8=0; NTHearingDifficulty8=0
        FCognitiveDisability8=0; PCognitiveDisability8=0; NDCognitiveDisability8=0; NTCognitiveDisability8=0
        FMotionDisability8=0; PMotionDisability8=0; NDMotionDisability8=0; NTMotionDisability8=0
        FLearningDisability8=0; PLearningDisability8=0; NDLearningDisability8=0; NTLearningDisability8=0

      elif((headingColor_Failed<=0 and headingColor_Passed>=1) and (headerColor_Failed<=0 and headerColor_Passed>=1) and (paragraphColor_Failed<=0 and paragraphColor_Passed>=1)):
        print('Pass: Guideline 1.4.1 Use of Color; Webpage Header and its Text Color is Accessible')
        Pcounter8=1; Fcounter8=0; NTcounter8=0; NDcounter8=0
        PLevelA3= 1; FLevelA3=0; NTLevelA3=0; NDLevelA3=0
        VLevelA3=1; ADLevelA3=0; ETLevelA3=0

        PVisionImpairment8=1; FVisionImpairment8=0; NDVisionImpairment8=0; NTVisionImpairment8=0
        PHearingDifficulty8=0; FHearingDifficulty8=0; NDHearingDifficulty8=0; NTHearingDifficulty8=0
        PCognitiveDisability8=0; FCognitiveDisability8=0; NDCognitiveDisability8=0; NTCognitiveDisability8=0
        PMotionDisability8=0; FMotionDisability8=0; NDMotionDisability8=0; NTMotionDisability8=0
        PLearningDisability8=0; FLearningDisability8=0; NDLearningDisability8=0; NTLearningDisability8=0

      else:
        print('Not Detected: Guideline 1.4.1 Use of Color; Webpage has no Identifiable Header')
        NDcounter8=1; Pcounter8=0; Fcounter8=0; NTcounter8=0
        NDLevelA3=1; PLevelA3=0; FLevelA3=0; NTLevelA3=0 
        VLevelA3=1; ADLevelA3=0; ETLevelA3=0

        NDVisionImpairment8=1; PVisionImpairment8=0; FVisionImpairment8=0; NTVisionImpairment8=0      
        NDHearingDifficulty8=0; PHearingDifficulty8=0; FHearingDifficulty8=0; NTHearingDifficulty8=0 
        NDCognitiveDisability8=0; PCognitiveDisability8=0; FCognitiveDisability8=0; NTCognitiveDisability8=0
        NDMotionDisability8=0; PMotionDisability8=0; FMotionDisability8=0; NTMotionDisability8=0
        NDLearningDisability8=0; PLearningDisability8=0; FLearningDisability8=0; NTLearningDisability8=0


      ####===========================Guideline 1.4.7 (level AAA)====================================####

      global backgroundMusic_totalCount

      BackgroundMusic_Object=1

      counter=0
      backgroundMusic_Passed=0
      backgroundMusic = soup.find_all('bgsound')
      if (backgroundMusic == []):
        counter+=1  
        backgroundMusic_Passed=counter                         
      print('Number of Passed Guideline for Background Music', backgroundMusic_Passed)
      
      counter=0
      backgroundMusic_Failed=0
      backgroundMusic = soup.find_all('bgsound')
      if (backgroundMusic != []):
        counter+=1  
        backgroundMusic_Failed=counter                         
      print('Number of Failed Guideline for Background Music',backgroundMusic_Failed)

      backgroundMusic_totalCount=backgroundMusic_Passed+backgroundMusic_Failed
      print('Total Checked for Background Music:',backgroundMusic_totalCount)

      if (backgroundMusic_Failed>0):
        print('Fail: Guideline 1.4.7 Low or No Background Audio; Webpage has Background Audio')
        Fcounter9=1; Pcounter9=0; NTcounter9=0; NDcounter9=0
        FLevelAAA4=1; PLevelAAA4=0; NTLevelAAA4=0; NDLevelAAA4=0
        ADLevelAAA4=1; VLevelAAA4=0; ETLevelAAA4=0

        FVisionImpairment9=0; PVisionImpairment9=0; NDVisionImpairment9=0; NTVisionImpairment9=0
        FHearingDifficulty9=1; PHearingDifficulty9=0; NDHearingDifficulty9=0; NTHearingDifficulty9=0
        FCognitiveDisability9=0; PCognitiveDisability9=0; NDCognitiveDisability9=0; NTCognitiveDisability9=0
        FMotionDisability9=0; PMotionDisability9=0; NDMotionDisability9=0; NTMotionDisability9=0
        FLearningDisability9=0; PLearningDisability9=0; NDLearningDisability9=0; NTLearningDisability9=0
        
        Frame11=Frame(main_fm, bg='white', width=380, height=25)
        Frame11.place(x=10, y=355, width=380, height=25)
        Lable11=Label(Frame11, text='Sc (1.4.7) Low or No Background Audio', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable11.grid(row=0, column=0)
        Framee11=Frame(main_fm, bg='white', width=110, height=25)
        Framee11.place(x=400, y=355, width=110, height=25)
        Lablee11=Label(Framee11, text=backgroundMusic_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee11.grid(row=0, column=0)
        Frameee11=Frame(main_fm, bg='white', width=480, height=25)
        Frameee11.place(x=530, y=355, width=480, height=25)
        Lableee11=Label(Frameee11, text='Webpage has Background Audio', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee11.grid(row=0, column=0)
        Frameeee11=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee11.place(x=1030, y=355, width=130, height=25)
        Lableeee11=Label(Frameeee11, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee11.grid(row=0, column=0)
        Frameeeee11=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee11.place(x=1180, y=355, width=80, height=25)
        Lableeeee11=Label(Frameeeee11, text=backgroundMusic_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee11.grid(row=0, column=0)
        Frameeeeee11=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee11.place(x=1280, y=355, width=150, height=25)
        Lableeeeee11=Label(Frameeeeee11, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee11.grid(row=0, column=0)
        Frameeeeeee11=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee11.place(x=1450, y=355, width=210, height=25)
        Lableeeeeee11=Label(Frameeeeeee11, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee11.grid(row=0, column=0)
        Frameeeeeeee11=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee11.place(x=1680, y=355, width=230, height=25)
        Lableeeeeeee11=Label(Frameeeeeeee11, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee11.grid(row=0, column=0)
      elif(backgroundMusic_Failed<=0 and backgroundMusic_Passed>=1):
        print('Pass: Guideline 1.4.7 Low or No Background Audio; Webpage has no Background Audio')
        Pcounter9=1; Fcounter9=0; NTcounter9=0; NDcounter9=0
        PLevelAAA4=1; FLevelAAA4=0; NTLevelAAA4=0; NDLevelAAA4=0
        VLevelAAA4=1; ADLevelAAA4=0; ETLevelAAA4=0

        PVisionImpairment9=0; FVisionImpairment9=0; NDVisionImpairment9=0; NTVisionImpairment9=0
        PHearingDifficulty9=1; FHearingDifficulty9=0; NDHearingDifficulty9=0; NTHearingDifficulty9=0
        PCognitiveDisability9=0; FCognitiveDisability9=0; NDCognitiveDisability9=0; NTCognitiveDisability9=0
        PMotionDisability9=0; FMotionDisability9=0; NDMotionDisability9=0; NTMotionDisability9=0
        PLearningDisability9=0; FLearningDisability9=0; NDLearningDisability9=0; NTLearningDisability9=0
        
        Frame11=Frame(main_fm, bg='white', width=380, height=25)
        Frame11.place(x=10, y=355, width=380, height=25)
        Lable11=Label(Frame11, text='Sc (1.4.7) Low or No Background Audio', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable11.grid(row=0, column=0)
        Framee11=Frame(main_fm, bg='white', width=110, height=25)
        Framee11.place(x=400, y=355, width=110, height=25)
        Lablee11=Label(Framee11, text=backgroundMusic_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee11.grid(row=0, column=0)
        Frameee11=Frame(main_fm, bg='white', width=480, height=25)
        Frameee11.place(x=530, y=355, width=480, height=25)
        Lableee11=Label(Frameee11, text='Webpage has no Background Audio', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee11.grid(row=0, column=0)
        Frameeee11=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee11.place(x=1030, y=355, width=130, height=25)
        Lableeee11=Label(Frameeee11, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee11.grid(row=0, column=0)
        Frameeeee11=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee11.place(x=1180, y=355, width=80, height=25)
        Lableeeee11=Label(Frameeeee11, text=backgroundMusic_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee11.grid(row=0, column=0)
        Frameeeeee11=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee11.place(x=1280, y=355, width=150, height=25)
        Lableeeeee11=Label(Frameeeeee11, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee11.grid(row=0, column=0)
        Frameeeeeee11=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee11.place(x=1450, y=355, width=210, height=25)
        Lableeeeeee11=Label(Frameeeeeee11, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee11.grid(row=0, column=0)
        Frameeeeeeee11=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee11.place(x=1680, y=355, width=230, height=25)
        Lableeeeeeee11=Label(Frameeeeeeee11, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee11.grid(row=0, column=0)


      ####===========================Guideline 1.4.8 (level AAA)====================================####

      counter=0
      linksHref_Failed=0
      links = soup.find_all('a')      
      if(links !=[]):
        if 'href' in links:
          for item in links:
            if(item['href'] != ''):
              if(len(item['href']) >80):
                counter+=1  
                linksHref_Failed=counter 

      print('Number of Failed Guideline for links href:', linksHref_Failed)

      counter=0
      linksHref_Passed=0
      links = soup.find_all('a')      
      if(links !=[]):
        if 'href' in links:
          for item in links:
            if(item['href'] != ''):
              if(len(item['href']) <=80):
                counter+=1  
                linksHref_Passed=counter                         
      print('Number of Failed Guideline for links href:',linksHref_Passed)

      linksHref_totalCount=linksHref_Failed+linksHref_Passed
      print('The total count of checked for links: href', linksHref_totalCount)

      if(linksHref_Failed>0):
        print('Fail: Guideline 1.4.8 Visual Presentation; Webpage Link width is not appropriate')
        Fcounter10=1; Pcounter10=0; NTcounter10=0; NDcounter10=0
        FLevelAAA5=1; PLevelAAA5=0; NTLevelAAA5=0; NDLevelAAA5=0
        ADLevelAAA5=1; VLevelAAA5=0; ETLevelAAA5=0

        FVisionImpairment10=0; PVisionImpairment10=0; NDVisionImpairment10=0; NTVisionImpairment10=0      
        FHearingDifficulty10=0; PHearingDifficulty10=0; NDHearingDifficulty10=0; NTHearingDifficulty10=0 
        FCognitiveDisability10=1; PCognitiveDisability10=0; NDCognitiveDisability10=0; NTCognitiveDisability10=0
        FMotionDisability10=0; PMotionDisability10=0; NDMotionDisability10=0; NTMotionDisability10=0
        FLearningDisability10=0; PLearningDisability10=0; NDLearningDisability10=0; NTLearningDisability10=0
          
        Frame12=Frame(main_fm, bg='white', width=380, height=25) 
        Frame12.place(x=10, y=380, width=380, height=25)
        Lable12=Label(Frame12, text='Sc (1.4.8) Visual Presentation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable12.grid(row=0, column=0) 
        Framee12=Frame(main_fm, bg='white', width=110, height=25)
        Framee12.place(x=400, y=380, width=110, height=25)
        Lablee12=Label(Framee12, text=linksHref_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee12.grid(row=0, column=0)
        Frameee12=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee12.place(x=530, y=380, width=480, height=25)
        Lableee12=Label(Frameee12, text='Webpage Links Width is not Appropriate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee12.grid(row=0, column=0) 
        Frameeee12=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee12.place(x=1030, y=380, width=130, height=25) 
        Lableeee12=Label(Frameeee12, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee12.grid(row=0, column=0) 
        Frameeeee12=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee12.place(x=1180, y=380, width=80, height=25)
        Lableeeee12=Label(Frameeeee12, text=linksHref_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee12.grid(row=0, column=0)
        Frameeeeee12=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee12.place(x=1280, y=380, width=150, height=25)
        Lableeeeee12=Label(Frameeeeee12, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee12.grid(row=0, column=0)
        Frameeeeeee12=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee12.place(x=1450, y=380, width=210, height=25)
        Lableeeeeee12=Label(Frameeeeeee12, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee12.grid(row=0, column=0)
        Frameeeeeeee12=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee12.place(x=1680, y=380, width=230, height=25)   
        Lableeeeeeee12=Label(Frameeeeeeee12, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee12.grid(row=0, column=0)
      elif(linksHref_Failed<=0 and linksHref_Passed>=1):
        print('Pass: Guideline 1.4.8 Visual Presentation; Webpage Link width is appropriate')
        Pcounter10=1; Fcounter10=0; NTcounter10=0; NDcounter10=0
        PLevelAAA5=1; FLevelAAA5=0; NTLevelAAA5=0; NDLevelAAA5=0
        VLevelAAA5=1; ADLevelAAA5=0; ETLevelAAA5=0

        PVisionImpairment10=0; FVisionImpairment10=0; NDVisionImpairment10=0; NTVisionImpairment10=0      
        PHearingDifficulty10=0; FHearingDifficulty10=0; NDHearingDifficulty10=0; NTHearingDifficulty10=0 
        PCognitiveDisability10=1; FCognitiveDisability10=0; NDCognitiveDisability10=0; NTCognitiveDisability10=0
        PMotionDisability10=0; FMotionDisability10=0; NDMotionDisability10=0; NTMotionDisability10=0
        PLearningDisability10=0; FLearningDisability10=0; NDLearningDisability10=0; NTLearningDisability10=0
          
        Frame12=Frame(main_fm, bg='white', width=380, height=25) 
        Frame12.place(x=10, y=380, width=380, height=25)
        Lable12=Label(Frame12, text='Sc (1.4.8) Visual Presentation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable12.grid(row=0, column=0) 
        Framee12=Frame(main_fm, bg='white', width=110, height=25)
        Framee12.place(x=400, y=380, width=110, height=25)
        Lablee12=Label(Framee12, text=linksHref_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee12.grid(row=0, column=0)
        Frameee12=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee12.place(x=530, y=380, width=480, height=25)
        Lableee12=Label(Frameee12, text='Webpage Links Width is Appropriate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee12.grid(row=0, column=0)
        Frameeee12=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee12.place(x=1030, y=380, width=130, height=25) 
        Lableeee12 =Label(Frameeee12, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee12.grid(row=0, column=0) 
        Frameeeee12=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee12.place(x=1180, y=380, width=80, height=25)
        Lableeeee12=Label(Frameeeee12, text=linksHref_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee12.grid(row=0, column=0)
        Frameeeeee12=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee12.place(x=1280, y=380, width=150, height=25)
        Lableeeeee12=Label(Frameeeeee12, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee12.grid(row=0, column=0)
        Frameeeeeee12=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee12.place(x=1450, y=380, width=210, height=25)
        Lableeeeeee12=Label(Frameeeeeee12, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee12.grid(row=0, column=0)
        Frameeeeeeee12=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee12.place(x=1680, y=380, width=230, height=25)   
        Lableeeeeeee12=Label(Frameeeeeeee12, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee12.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.4.8 Visual Presentation; Webpage has no Link')
        NDcounter10=1; Pcounter10=0; Fcounter10=0; NTcounter10=0
        NDLevelAAA5=1; PLevelAAA5=0; FLevelAAA5=0; NTLevelAAA5=0
        VLevelAAA5=1; ADLevelAAA5=0; ETLevelAAA5=0

        NDVisionImpairment10=0; PVisionImpairment10=0; FVisionImpairment10=0; NTVisionImpairment10=0      
        NDHearingDifficulty10=0; PHearingDifficulty10=0; FHearingDifficulty10=0; NTHearingDifficulty10=0 
        NDCognitiveDisability10=1; PCognitiveDisability10=0; FCognitiveDisability10=0; NTCognitiveDisability10=0
        NDMotionDisability10=0; PMotionDisability10=0; FMotionDisability10=0; NTMotionDisability10=0
        NDLearningDisability10=0; PLearningDisability10=0; FLearningDisability10=0; NTLearningDisability10=0
        
        Frame12=Frame(main_fm, bg='white', width=380, height=25)
        Frame12.place(x=10, y=380, width=380, height=25)
        Lable12=Label(Frame12, text='Sc (1.4.8) Visual Presentation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable12.grid(row=0, column=0)
        Framee12=Frame(main_fm, bg='white', width=110, height=25)
        Framee12.place(x=400, y=380, width=110, height=25)
        Lablee12=Label(Framee12, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee12.grid(row=0, column=0)
        Frameee12=Frame(main_fm, bg='white', width=480, height=25)
        Frameee12.place(x=530, y=380, width=480, height=25)
        Lableee12=Label(Frameee12, text='Webpage has no Links to Check its Width', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee12.grid(row=0, column=0)
        Frameeee12=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee12.place(x=1030, y=380, width=130, height=25)
        Lableeee12=Label(Frameeee12, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee12.grid(row=0, column=0)
        Frameeeee12=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee12.place(x=1180, y=380, width=80, height=25)
        Lableeeee12=Label(Frameeeee12, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee12.grid(row=0, column=0)
        Frameeeeee12=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee12.place(x=1280, y=380, width=150, height=25)
        Lableeeeee12=Label(Frameeeeee12, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee12.grid(row=0, column=0)
        Frameeeeeee12=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee12.place(x=1450, y=380, width=210, height=25)
        Lableeeeeee12=Label(Frameeeeeee12, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee12.grid(row=0, column=0)
        Frameeeeeeee12=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee12.place(x=1680, y=380, width=230, height=25)
        Lableeeeeeee12=Label(Frameeeeeeee12, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee12.grid(row=0, column=0) 


           ####===========================Guideline 2.1.1 (level A)====================================####330

      global tabIndex_totalCount

      KeyboardAccess_Object=1

      counter=0
      tabIndex_Lang_Passed=0
      for lang in soup.find_all('html'):
        tabIndex_Lang= lang.get('lang')
        if(tabIndex_Lang is not None):
          for item in tabIndex_Lang:
            if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
              counter+=1  
              tabIndex_Lang_Passed=counter                        
        print('Number of Passed Guideline for Tabindex in Language:',tabIndex_Lang_Passed)

      counter=0
      tabIndex_Lang_Failed=0
      for lang in soup.find_all('html'):
        tabIndex_Lang= lang.get('lang')
        if(tabIndex_Lang is not None):
          for item in tabIndex_Lang:
            if ('tabindex'== '' or 'tabindex'!= '0' or 'tabindex'!= '1' or 'tabindex'!= '-1'):
              counter+=1  
              tabIndex_Lang_Failed=counter                        
        print('Number of Failed Guideline for Tabindex in Language:',tabIndex_Lang_Failed)

      ####------------------#####
      counter=0
      tabIndex_Title_Passed=0
      tabIndex_Title = soup.find_all('title')
      for item in tabIndex_Title:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_Title_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Title:', tabIndex_Title_Passed)

      counter=0
      tabIndex_Title_Failed=0
      tabIndex_Title = soup.find_all('title')
      for item in tabIndex_Title:
        if ('tabindex'== '' or 'tabindex'!= '0' or 'tabindex'!= '1' or 'tabindex'!= '-1'):
          counter+=1  
          tabIndex_Title_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Title:', tabIndex_Title_Failed)
      

      #####------------------------------#####
      counter=0
      tabIndex_Link_Passed=0
      tabIndex_Link = soup.find_all('link')
      for item in tabIndex_Link:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_Link_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Link:', tabIndex_Link_Passed)

      counter=0
      tabIndex_Link_Failed=0
      tabIndex_Link = soup.find_all('link')
      for item in tabIndex_Link:
        if ('tabindex'== '' or 'tabindex'!= '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_Link_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Link:', tabIndex_Link_Failed)


      ####---------------------------------#####
      counter=0
      tabIndex_Div_Passed=0
      tabIndex_Div = soup.find_all('div')
      for item in tabIndex_Div:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_Div_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Div:', tabIndex_Div_Passed)

      counter=0
      tabIndex_Div_Failed=0
      tabIndex_Div = soup.find_all('div')
      for item in tabIndex_Div:
        if ('tabindex'== '' or 'tabindex' != '1' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_Div_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Div:', tabIndex_Div_Failed)


      #####---------------------------------------####
      counter=0
      tabIndex_a_Passed=0
      tabIndex_a = soup.find_all('a')
      for item in tabIndex_a:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_a_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in a:', tabIndex_a_Passed)

      counter=0
      tabIndex_a_Failed=0
      tabIndex_a = soup.find_all('a')
      for item in tabIndex_a:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_a_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in a:', tabIndex_a_Failed)


      #####-----------------------------------------#####
      counter=0
      tabIndex_header_Passed=0
      tabIndex_header = soup.find_all('header')
      for item in tabIndex_header:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_header_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Header:', tabIndex_header_Passed)

      counter=0
      tabIndex_header_Failed=0
      tabIndex_header = soup.find_all('header')
      for item in tabIndex_header:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_header_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Header:', tabIndex_header_Failed)


      #####--------------------------------------#####
      counter=0
      tabIndex_ul_Passed=0
      tabIndex_ul = soup.find_all('ul')         
      for item in tabIndex_ul:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_ul_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in ul:', tabIndex_ul_Passed)
    

      counter=0
      tabIndex_ul_Failed=0
      tabIndex_ul = soup.find_all('ul')         
      for item in tabIndex_ul:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_ul_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in ul:', tabIndex_ul_Failed)
   

      #####------------------------------------------####
      counter=0
      tabIndex_li_Passed=0
      tabIndex_li = soup.find_all('li')        
      for item in tabIndex_li:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_li_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in li:', tabIndex_li_Passed)

      counter=0
      tabIndex_li_Failed=0
      tabIndex_li = soup.find_all('li')          
      for item in tabIndex_li:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_li_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in li:', tabIndex_li_Failed)
   

      ####-------------------------------------------####
      counter=0
      tabIndex_buttons_Passed=0
      tabIndex_buttons = soup.find_all('button')         
      for item in tabIndex_buttons:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_buttons_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Button:', tabIndex_buttons_Passed)

      counter=0
      tabIndex_buttons_Failed=0
      tabIndex_buttons = soup.find_all('button')        
      for item in tabIndex_buttons:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_buttons_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Button:', tabIndex_buttons_Failed)


      ####--------------------------------------------####
      counter=0
      tabIndex_paragraph_Passed=0
      tabIndex_paragraph = soup.find_all('p')         
      for item in tabIndex_paragraph:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_paragraph_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Paragraph:', tabIndex_paragraph_Passed)

      counter=0
      tabIndex_paragraph_Failed=0
      tabIndex_paragraph = soup.find_all('p')        
      for item in tabIndex_paragraph:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_paragraph_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Paragraph:', tabIndex_paragraph_Failed)
   

      #####---------------------------------------#####
      counter=0
      tabIndex_heading_Passed=0
      tabIndex_heading = soup.find_all(re.compile('^h[1-6]'))         
      for item in tabIndex_heading:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_heading_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Heading:', tabIndex_heading_Passed)

      counter=0
      tabIndex_heading_Failed=0
      tabIndex_heading = soup.find_all(re.compile('^h[1-6]'))        
      for item in tabIndex_heading:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_heading_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Heading:', tabIndex_heading_Failed)
    

      #####--------------------------------------#####
      counter=0
      tabIndex_image_Passed=0
      tabIndex_image = soup.find_all('img')         
      for item in tabIndex_image:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_image_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Image:', tabIndex_image_Passed)

      counter=0
      tabIndex_image_Failed=0
      tabIndex_image = soup.find_all('img')        
      for item in tabIndex_image:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_image_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Image:', tabIndex_image_Failed)
    

      #####---------------------------------------------####
      counter=0
      tabIndex_footer_Passed=0
      tabIndex_footer = soup.find_all('footer')         
      for item in tabIndex_footer:
        if ('tabindex'== '0' or 'tabindex'== '1' or 'tabindex'== '-1'):
          counter+=1  
          tabIndex_footer_Passed=counter                         
      print('Number of Passed Guideline for Tabindex in Footer:', tabIndex_footer_Passed)

      counter=0
      tabIndex_footer_Failed=0
      tabIndex_footer = soup.find_all('footer')        
      for item in tabIndex_footer:
        if ('tabindex'== '' or 'tabindex' != '0' or 'tabindex' != '1' or 'tabindex' != '-1'):
          counter+=1  
          tabIndex_footer_Failed=counter                         
      print('Number of Failed Guideline for Tabindex in Footer:', tabIndex_footer_Failed)
   

      tabIndex_totalCount= tabIndex_Lang_Passed+tabIndex_Lang_Failed+tabIndex_Title_Passed+tabIndex_Title_Failed+tabIndex_Link_Passed+tabIndex_Link_Failed+tabIndex_Div_Passed+tabIndex_Div_Failed+tabIndex_a_Passed+tabIndex_a_Failed+tabIndex_header_Passed+tabIndex_header_Failed+tabIndex_ul_Passed+tabIndex_ul_Failed+tabIndex_li_Passed+tabIndex_li_Failed+tabIndex_buttons_Passed+tabIndex_buttons_Failed+tabIndex_paragraph_Passed+tabIndex_paragraph_Failed+tabIndex_heading_Passed+tabIndex_heading_Failed+tabIndex_image_Passed+tabIndex_image_Failed+tabIndex_footer_Passed+tabIndex_footer_Failed
      print('Total Number of HTMLs Elements Checked for Tabindex:', tabIndex_totalCount)

      tabIndex_totalCount_Passed= tabIndex_Lang_Passed+tabIndex_Title_Passed+tabIndex_Link_Passed+tabIndex_Div_Passed+tabIndex_a_Passed+tabIndex_header_Passed+tabIndex_ul_Passed+tabIndex_li_Passed+tabIndex_buttons_Passed+tabIndex_paragraph_Passed+tabIndex_heading_Passed+tabIndex_image_Passed+tabIndex_footer_Passed
      print('Total Number of HTMLs Elements Passed for Tabindex:', tabIndex_totalCount_Passed)

      tabIndex_totalCount_Failed= tabIndex_Lang_Failed+tabIndex_Title_Failed+tabIndex_Link_Failed+tabIndex_Div_Failed+tabIndex_a_Failed+tabIndex_header_Failed+tabIndex_ul_Failed+tabIndex_li_Failed+tabIndex_buttons_Failed+tabIndex_paragraph_Failed+tabIndex_heading_Failed+tabIndex_image_Failed+tabIndex_footer_Failed
      print('Total Number of HTMLs Elements Failed for Tabindex:', tabIndex_totalCount_Failed)

      if(tabIndex_totalCount_Failed<=0 and tabIndex_totalCount_Passed>=1):
        print('Pass: Guideline 2.1.1 Keyboard; Webpage has Keyboard Access')
        Pcounter11=1; Fcounter11=0; NTcounter11=0; NDcounter11=0
        PLevelA4=1; FLevelA4=0; NTLevelA4=0; NDLevelA4=0
        VLevelA4=1; ADLevelA4=0; ETLevelA4=0

        PVisionImpairment11=1; FVisionImpairment11=0; NDVisionImpairment11=0; NTVisionImpairment11=0      
        PHearingDifficulty11=0; FHearingDifficulty11=0; NDHearingDifficulty11=0; NTHearingDifficulty11=0 
        PCognitiveDisability11=0; FCognitiveDisability11=0; NDCognitiveDisability11=0; NTCognitiveDisability11=0 
        PMotionDisability11=0; FMotionDisability11=0; NDMotionDisability11=0; NTMotionDisability11=0
        PLearningDisability11=0; FLearningDisability11=0; NDLearningDisability11=0; NTLearningDisability11=0
        
        Frame13=Frame(main_fm, bg='white', width=380, height=25) 
        Frame13.place(x=10, y=405, width=380, height=25)
        Lable13=Label(Frame13, text='Sc (2.1.1) Keyboard', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0)
        Framee13=Frame(main_fm, bg='white', width=110, height=25)
        Framee13.place(x=400, y=405, width=110, height=25)
        Lablee13=Label(Framee13, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee13.place(x=530, y=405, width=480, height=25)
        Lableee13=Label(Frameee13, text='Webpage has Keyboard Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0) 
        Frameeee13=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee13.place(x=1030, y=405, width=130, height=25) 
        Lableeee13=Label(Frameeee13, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee13.grid(row=0, column=0) 
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1180, y=405, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=tabIndex_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee13.place(x=1280, y=405, width=150, height=25)
        Lableeeeee13=Label(Frameeeeee13, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee13.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee13=Label(Frameeeeeee13, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)
        Frameeeeeeee13=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee13.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee13=Label(Frameeeeeeee13, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee13.grid(row=0, column=0)
        print('Pass: Guideline 2.1.2 No Keyboard Trap; Webpage has Keyboard Access/No Keyboard Trap') 
        Pcounter12=1; Fcounter12=0; NTcounter12=0; NDcounter12=0
        PLevelA5=1; FLevelA5=0; NTLevelA5=0; NDLevelA5=0
        VLevelA5=1; ADLevelA5=0; ETLevelA5=0

        PVisionImpairment12=1; FVisionImpairment12=0; NDVisionImpairment12=0; NTVisionImpairment12=0      
        PHearingDifficulty12=0; FHearingDifficulty12=0; NDHearingDifficulty12=0; NTHearingDifficulty12=0 
        PCognitiveDisability12=0; FCognitiveDisability12=0; NDCognitiveDisability12=0; NTCognitiveDisability12=0 
        PMotionDisability12=0; FMotionDisability12=0; NDMotionDisability12=0; NTMotionDisability12=0
        PLearningDisability12=0; FLearningDisability12=0; NDLearningDisability12=0; NTLearningDisability12=0
        
        Frame14=Frame(main_fm, bg='white', width=380, height=25) 
        Frame14.place(x=10, y=430, width=380, height=25)
        Lable14=Label(Frame14, text='Sc (2.1.2) No Keyboard Trap', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0)
        Framee14=Frame(main_fm, bg='white', width=110, height=25)
        Framee14.place(x=400, y=430, width=110, height=25)
        Lablee14=Label(Framee14, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee14.place(x=530, y=430, width=480, height=25)
        Lableee14=Label(Frameee14, text='Webpage has Keyboard Access/No Keyboard Trap', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0) 
        Frameeee14=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee14.place(x=1030, y=430, width=130, height=25) 
        Lableeee14=Label(Frameeee14, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee14.grid(row=0, column=0) 
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1180, y=430, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=tabIndex_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee14.place(x=1280, y=430, width=150, height=25)
        Lableeeeee14=Label(Frameeeeee14, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee14.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee14=Label(Frameeeeeee14, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)
        Frameeeeeeee14=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee14.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee14=Label(Frameeeeeeee14, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee14.grid(row=0, column=0)
        print('Pass: Guideline 2.1.3 Keyboard (No Exception); Webpage has Keyboard Access')
        Pcounter13=1; Fcounter13=0; NTcounter13=0; NDcounter13=0
        PLevelA6=1; FLevelA6=0; NTLevelA6=0; NDLevelA6=0
        VLevelA6=1; ADLevelA6=0; ETLevelA6=0

        PVisionImpairment13=1; FVisionImpairment13=0; NDVisionImpairment13=0; NTVisionImpairment13=0      
        PHearingDifficulty13=0; FHearingDifficulty13=0; NDHearingDifficulty13=0; NTHearingDifficulty13=0 
        PCognitiveDisability13=0; FCognitiveDisability13=0; NDCognitiveDisability13=0; NTCognitiveDisability13=0 
        PMotionDisability13=0; FMotionDisability13=0; NDMotionDisability13=0; NTMotionDisability13=0
        PLearningDisability13=0; FLearningDisability13=0; NDLearningDisability13=0; NTLearningDisability13=0
        
        Frame15=Frame(main_fm, bg='white', width=380, height=25) 
        Frame15.place(x=10, y=455, width=380, height=25)
        Lable15=Label(Frame15, text='Sc (2.1.3) Keyboard (No Exception)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0)
        Framee15=Frame(main_fm, bg='white', width=110, height=25)
        Framee15.place(x=400, y=455, width=110, height=25)
        Lablee15=Label(Framee15, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee15.place(x=530, y=455, width=480, height=25)
        Lableee15=Label(Frameee15, text='Webpage has Keyboard Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0) 
        Frameeee15=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee15.place(x=1030, y=455, width=130, height=25) 
        Lableeee15=Label(Frameeee15, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee15.grid(row=0, column=0) 
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1180, y=455, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=tabIndex_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee15.place(x=1280, y=455, width=150, height=25)
        Lableeeeee15=Label(Frameeeeee15, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee15.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee15=Label(Frameeeeeee15, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)
        Frameeeeeeee15=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee15.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee15=Label(Frameeeeeeee15, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee15.grid(row=0, column=0)
      elif(tabIndex_totalCount_Failed>0): 
        print('Fail: Guideline 2.1.1 Keyboard; Webpage has no Keyboard Access')
        Fcounter11=1; Pcounter11=0; NTcounter11=0; NDcounter11=0
        FLevelA4=1; PLevelA4=0; NTLevelA4=0; NDLevelA4=0
        ADLevelA4=1; VLevelA4=0; ETLevelA4=0

        FVisionImpairment11=1; PVisionImpairment11=0; NDVisionImpairment11=0; NTVisionImpairment11=0      
        FHearingDifficulty11=0; PHearingDifficulty11=0; NDHearingDifficulty11=0; NTHearingDifficulty11=0 
        FCognitiveDisability11=0; PCognitiveDisability11=0; NDCognitiveDisability11=0; NTCognitiveDisability11=0 
        FMotionDisability11=0; PMotionDisability11=0; NDMotionDisability11=0; NTMotionDisability11=0
        FLearningDisability11=0; PLearningDisability11=0; NDLearningDisability11=0; NTLearningDisability11=0
        
        Frame13=Frame(main_fm, bg='white', width=380, height=25) 
        Frame13.place(x=10, y=405, width=380, height=25)
        Lable13=Label(Frame13, text='Sc (2.1.1) Keyboard', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0) 
        Framee13=Frame(main_fm, bg='white', width=110, height=25)
        Framee13.place(x=400, y=405, width=110, height=25)
        Lablee13=Label(Framee13, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee13.place(x=530, y=405, width=480, height=25)
        Lableee13=Label(Frameee13, text='Webpage has no Keyboard Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0)
        Frameeee13=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee13.place(x=1030, y=405, width=130, height=25) 
        Lableeee13=Label(Frameeee13,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee13.grid(row=0, column=0) 
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1180, y=405, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=tabIndex_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee13.place(x=1280, y=405, width=150, height=25)
        Lableeeeee13=Label(Frameeeeee13, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee13.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee13=Label(Frameeeeeee13, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)
        Frameeeeeeee13=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee13.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee13=Label(Frameeeeeeee13, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee13.grid(row=0, column=0)
        print('Fail: Guideline 2.1.2 No Keyboard Trap; Webpage has no Keyboard Access/has Keyboard Trap')
        Fcounter12=1; Pcounter12=0; NTcounter12=0; NDcounter12=0
        FLevelA5=1; PLevelA5=0; NTLevelA5=0; NDLevelA5=0
        ADLevelA5=1; VLevelA5=0; ETLevelA5=0

        FVisionImpairment12=1; PVisionImpairment12=0; NDVisionImpairment12=0; NTVisionImpairment12=0      
        FHearingDifficulty12=0; PHearingDifficulty12=0; NDHearingDifficulty12=0; NTHearingDifficulty12=0 
        FCognitiveDisability12=0; PCognitiveDisability12=0; NDCognitiveDisability12=0; NTCognitiveDisability12=0 
        FMotionDisability12=0; PMotionDisability12=0; NDMotionDisability12=0; NTMotionDisability12=0
        FLearningDisability12=0; PLearningDisability12=0; NDLearningDisability12=0; NTLearningDisability12=0
        
        Frame14=Frame(main_fm, bg='white', width=380, height=25) 
        Frame14.place(x=10, y=430, width=380, height=25)
        Lable14=Label(Frame14, text='Sc (2.1.2) No Keyboard Trap', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0) 
        Framee14=Frame(main_fm, bg='white', width=110, height=25)
        Framee14.place(x=400, y=430, width=110, height=25)
        Lablee14=Label(Framee14, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee14.place(x=530, y=430, width=480, height=25)
        Lableee14=Label(Frameee14, text='Webpage has no Keyboard Access/has Keyboard Trap', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0)
        Frameeee14=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee14.place(x=1030, y=430, width=130, height=25) 
        Lableeee14=Label(Frameeee14,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee14.grid(row=0, column=0) 
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1180, y=430, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=tabIndex_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee14.place(x=1280, y=430, width=150, height=25)
        Lableeeeee14=Label(Frameeeeee14, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee14.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee14=Label(Frameeeeeee14, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)
        Frameeeeeeee14=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee14.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee14=Label(Frameeeeeeee14, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee14.grid(row=0, column=0)
        print('Fail: Guideline 2.1.3 Keyboard (No Exception); Webpage has no Keyboard Access')
        Fcounter13=1; Pcounter13=0; NTcounter13=0; NDcounter13=0
        FLevelA6=1; PLevelA6=0; NTLevelA6=0; NDLevelA6=0
        ADLevelA6=1; VLevelA6=0; ETLevelA6=0

        FVisionImpairment13=1; PVisionImpairment13=0; NDVisionImpairment13=0; NTVisionImpairment13=0      
        FHearingDifficulty13=0; PHearingDifficulty13=0; NDHearingDifficulty13=0; NTHearingDifficulty13=0 
        FCognitiveDisability13=0; PCognitiveDisability13=0; NDCognitiveDisability13=0; NTCognitiveDisability13=0 
        FMotionDisability13=0; PMotionDisability13=0; NDMotionDisability13=0; NTMotionDisability13=0
        FLearningDisability13=0; PLearningDisability13=0; NDLearningDisability13=0; NTLearningDisability13=0
        
        Frame15=Frame(main_fm, bg='white', width=380, height=25) 
        Frame15.place(x=10, y=455, width=380, height=25)
        Lable15=Label(Frame15, text='Sc (2.1.3) Keyboard (No Exception)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0) 
        Framee15=Frame(main_fm, bg='white', width=110, height=25)
        Framee15.place(x=400, y=455, width=110, height=25)
        Lablee15=Label(Framee15, text=tabIndex_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee15.place(x=530, y=455, width=480, height=25)
        Lableee15=Label(Frameee15, text='Webpage has no Keyboard Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0)
        Frameeee15=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee15.place(x=1030, y=455, width=130, height=25) 
        Lableeee15=Label(Frameeee15,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee15.grid(row=0, column=0) 
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1180, y=455, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=tabIndex_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee15.place(x=1280, y=455, width=150, height=25)
        Lableeeeee15=Label(Frameeeeee15, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee15.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee15=Label(Frameeeeeee15, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)
        Frameeeeeeee15=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee15.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee15=Label(Frameeeeeeee15, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee15.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 2.1.1 Keyboard; Webpage Keyboard Access is not Identifiable')
        NDcounter11=1; Pcounter11=0; Fcounter11=0; NTcounter11=0
        NDLevelA4=1; PLevelA4=0; FLevelA4=0; NTLevelA4=0
        VLevelA4=1; ADLevelA4=0; ETLevelA4=0

        NDVisionImpairment11=1; PVisionImpairment11=0; FVisionImpairment11=0; NDVisionImpairment11=0     
        NDHearingDifficulty11=0; PHearingDifficulty11=0; FHearingDifficulty11=0; NDHearingDifficulty11=0 
        NDCognitiveDisability11=0; PCognitiveDisability11=0; FCognitiveDisability11=0; NDCognitiveDisability11=0 
        NDMotionDisability11=0; PMotionDisability11=0; FMotionDisability11=0; NDMotionDisability11=0
        NDLearningDisability11=0; PLearningDisability11=0; FLearningDisability11=0; NDLearningDisability11=0
        
        Frame13=Frame(main_fm, bg='white', width=380, height=25) 
        Frame13.place(x=10, y=405, width=380, height=25)
        Lable13=Label(Frame13, text='Sc (2.1.1) Keyboard', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0) 
        Framee13=Frame(main_fm, bg='white', width=110, height=25)
        Framee13.place(x=400, y=405, width=110, height=25)
        Lablee13=Label(Framee13, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee13.place(x=530, y=405, width=480, height=25)
        Lableee13=Label(Frameee13, text='Webpage Keyboard Access is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0) 
        Frameeee13=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee13.place(x=1030, y=405, width=130, height=25) 
        Lableeee13=Label(Frameeee13, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee13.grid(row=0, column=0) 
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1180, y=405, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee13.place(x=1280, y=405, width=150, height=25)
        Lableeeeee13=Label(Frameeeeee13, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee13.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee13=Label(Frameeeeeee13, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)
        Frameeeeeeee13=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee13.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee13=Label(Frameeeeeeee13, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee13.grid(row=0, column=0)
        print('Not Detected: Guideline 2.1.2 No Keyboard Trap; Webpage Keyboard Access/Keyboard Trap is not Identifiable')
        NDcounter12=1; Pcounter12=0; Fcounter12=0; NTcounter12=0
        NDLevelA5=1; PLevelA5=0; FLevelA5=0; NTLevelA5=0
        VLevelA5=1; ADLevelA5=0; ETLevelA5=0

        NDVisionImpairment12=1; PVisionImpairment12=0; FVisionImpairment12=0; NTVisionImpairment12=0     
        NDHearingDifficulty12=0; PHearingDifficulty12=0; FHearingDifficulty12=0; NTHearingDifficulty12=0 
        NDCognitiveDisability12=0; PCognitiveDisability12=0; FCognitiveDisability12=0; NTCognitiveDisability12=0 
        NDMotionDisability12=0; PMotionDisability12=0; FMotionDisability12=0; NTMotionDisability12=0
        NDLearningDisability12=0; PLearningDisability12=0; FLearningDisability12=0; NTLearningDisability12=0
        
        Frame14=Frame(main_fm, bg='white', width=380, height=25) 
        Frame14.place(x=10, y=430, width=380, height=25)
        Lable14=Label(Frame14, text='Sc (2.1.2) No Keyboard Trap', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0) 
        Framee14=Frame(main_fm, bg='white', width=110, height=25)
        Framee14.place(x=400, y=430, width=110, height=25)
        Lablee14=Label(Framee14, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee14.place(x=530, y=430, width=480, height=25)
        Lableee14=Label(Frameee14, text='Webpage Keyboard Access/Keyboard Trap is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0) 
        Frameeee14=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee14.place(x=1030, y=430, width=130, height=25) 
        Lableeee14=Label(Frameeee14, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee14.grid(row=0, column=0) 
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1180, y=430, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee14.place(x=1280, y=430, width=150, height=25)
        Lableeeeee14=Label(Frameeeeee14, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee14.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee14=Label(Frameeeeeee14, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)
        Frameeeeeeee14=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee14.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee14=Label(Frameeeeeeee14, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee14.grid(row=0, column=0)
        print('Not Detected: Guideline 2.1.3 Keyboard (No Exception); Webpage Keyboard Access is not Identifiable')
        NDcounter13=1; Pcounter13=0; Fcounter13=0; NTcounter13=0
        NDLevelA6=1; PLevelA6=0; FLevelA6=0; NTLevelA6=0
        VLevelA6=1; ADLevelA6=0; ETLevelA6=0

        NDVisionImpairment13=1; PVisionImpairment13=0; FVisionImpairment13=0; NTVisionImpairment13=0     
        NDHearingDifficulty13=0; PHearingDifficulty13=0; FHearingDifficulty13=0; NTHearingDifficulty13=0 
        NDCognitiveDisability13=0; PCognitiveDisability13=0; FCognitiveDisability13=0; NTCognitiveDisability13=0 
        NDMotionDisability13=0; PMotionDisability13=0; FMotionDisability13=0; NTMotionDisability13=0
        NDLearningDisability13=0; PLearningDisability13=0; FLearningDisability13=0; NTLearningDisability13=0
        
        Frame15=Frame(main_fm, bg='white', width=380, height=25) 
        Frame15.place(x=10, y=455, width=380, height=25)
        Lable15=Label(Frame15, text='Sc (2.1.3) Keyboard (No Exception)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0) 
        Framee15=Frame(main_fm, bg='white', width=110, height=25)
        Framee15.place(x=400, y=455, width=110, height=25)
        Lablee15=Label(Framee15, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee15.place(x=530, y=455, width=480, height=25)
        Lableee15=Label(Frameee15, text='Webpage Keyboard Access is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0) 
        Frameeee15=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee15.place(x=1030, y=455, width=130, height=25) 
        Lableeee15=Label(Frameeee15, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee15.grid(row=0, column=0) 
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1180, y=455, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee15.place(x=1280, y=455, width=150, height=25)
        Lableeeeee15=Label(Frameeeeee15, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee15.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee15=Label(Frameeeeeee15, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)
        Frameeeeeeee15=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee15.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee15=Label(Frameeeeeeee15, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee15.grid(row=0, column=0)

            ####===========================Guideline 2.1.4 (level A)====================================####390

      global accessKey_totalCount

      KeyboardCharacterKeyShortcut_Object=1

      counter=0
      accessKey_Link_Passed=0
      accessKey_Link = soup.find_all('link')
      for item in accessKey_Link:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_Link_Passed=counter                         
      print('No Characters Key Shortcut in Link:', accessKey_Link_Passed)

      counter=0
      accessKey_Link_Failed=0
      accessKey_Link = soup.find_all('link')
      for item in accessKey_Link:
        if ('accesskey' in item):
          counter+=1  
          accessKey_Link_Failed=counter                         
      print('Has Characters Key Shortcut in Link:', accessKey_Link_Failed)

      #######--------------------------------------------------#####

      counter=0
      accessKey_Label_Passed=0
      accessKey_Label = soup.find_all('label')
      for item in accessKey_Label:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_Label_Passed=counter                         
      print('No Characters Key Shortcut in Label:', accessKey_Label_Passed) 

      counter=0
      accessKey_Label_Failed=0
      accessKey_Label = soup.find_all('label')
      for item in accessKey_Label:
        if ('accesskey' in item):
          counter+=1  
          accessKey_Label_Failed=counter                         
      print('Has Characters Key Shortcut in Label:', accessKey_Label_Failed)

      #####---------------------------------------####
      counter=0
      accessKey_a_Passed=0
      accessKey_a = soup.find_all('a')
      for item in accessKey_a:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_a_Passed=counter                         
      print('No Characters Key Shortcut in a:', accessKey_a_Passed)

      counter=0
      accessKey_a_Failed=0
      accessKey_a = soup.find_all('a')
      for item in accessKey_a:
        if ('accesskey' in item):
          counter+=1  
          accessKey_a_Failed=counter                         
      print('Has Characters Key Shortcut in a:', accessKey_a_Failed)


      #####-----------------------------------------#####
      counter=0
      accessKey_header_Passed=0
      accessKey_header = soup.find_all('header')
      for item in accessKey_header:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_header_Passed=counter                         
      print('No Characters Key Shortcut in Header:', accessKey_header_Passed)

      counter=0
      accessKey_header_Failed=0
      accessKey_header = soup.find_all('header')
      for item in accessKey_header:
        if ('accesskey' in item):
          counter+=1  
          accessKey_header_Failed=counter                         
      print('Has No Characters Key Shortcut in Header:', accessKey_header_Failed)


      #####--------------------------------------#####
      counter=0
      accessKey_ul_Passed=0
      accessKey_ul = soup.find_all('ul')         
      for item in accessKey_ul:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_ul_Passed=counter                         
      print('No Characters Key Shortcut in ul:', accessKey_ul_Passed)
    

      counter=0
      accessKey_ul_Failed=0
      accessKey_ul = soup.find_all('ul')         
      for item in accessKey_ul:
        if ('accesskey' in item):
          counter+=1  
          accessKey_ul_Failed=counter                         
      print('Has No Characters Key Shortcut in ul:', accessKey_ul_Failed)
   

      #####------------------------------------------####
      counter=0
      accessKey_li_Passed=0
      accessKey_li = soup.find_all('li')        
      for item in accessKey_li:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_li_Passed=counter                         
      print('No Characters Key Shortcut in li:', accessKey_li_Passed)

      counter=0
      accessKey_li_Failed=0
      accessKey_li = soup.find_all('li')          
      for item in accessKey_li:
        if ('accesskey' in item):
          counter+=1  
          accessKey_li_Failed=counter                         
      print('Has Characters Key Shortcut in li:', accessKey_li_Failed)
   

      ####-------------------------------------------####
      counter=0
      accessKey_buttons_Passed=0
      accessKey_buttons = soup.find_all('button')         
      for item in accessKey_buttons:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_buttons_Passed=counter                         
      print('No Characters Key Shortcut in Button:', accessKey_buttons_Passed)

      counter=0
      accessKey_buttons_Failed=0
      accessKey_buttons = soup.find_all('button')        
      for item in accessKey_buttons:
        if ('accesskey' in item):
          counter+=1  
          accessKey_buttons_Failed=counter                         
      print('Has Characters Key Shortcut in Button:', accessKey_buttons_Failed)


      ####--------------------------------------------####
      counter=0
      accessKey_paragraph_Passed=0
      accessKey_paragraph = soup.find_all('p')         
      for item in accessKey_paragraph:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_paragraph_Passed=counter                         
      print('No Characters Key Shortcut in Paragraph:', accessKey_paragraph_Passed)

      counter=0
      accessKey_paragraph_Failed=0
      accessKey_paragraph = soup.find_all('p')        
      for item in accessKey_paragraph:
        if ('accesskey' in item):
          counter+=1  
          accessKey_paragraph_Failed=counter                         
      print('Has Characters Key Shortcut in Paragraph:', accessKey_paragraph_Failed)
   

      #####---------------------------------------#####
      counter=0
      accessKey_heading_Passed=0
      accessKey_heading = soup.find_all(re.compile('^h[1-6]'))         
      for item in accessKey_heading:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_heading_Passed=counter                         
      print('No Characters Key Shortcut in Heading:', accessKey_heading_Passed)

      counter=0
      accessKey_heading_Failed=0
      accessKey_heading = soup.find_all(re.compile('^h[1-6]'))        
      for item in accessKey_heading:
        if ('accesskey' in item):
          counter+=1  
          accessKey_heading_Failed=counter                         
      print('Has Characters Key Shortcut in Heading:', accessKey_heading_Failed)
    

      #####--------------------------------------#####
      counter=0
      accessKey_image_Passed=0
      accessKey_image = soup.find_all('img')         
      for item in accessKey_image:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_image_Passed=counter                         
      print('No Characters Key Shortcut in Image:', accessKey_image_Passed)

      counter=0
      accessKey_image_Failed=0
      accessKey_image = soup.find_all('img')        
      for item in accessKey_image:
        if ('accesskey' in item):
          counter+=1  
          accessKey_image_Failed=counter                         
      print('Has Characters Key Shortcut in Image:', accessKey_image_Failed)
    

      #####---------------------------------------------####
      counter=0
      accessKey_footer_Passed=0
      accessKey_footer = soup.find_all('footer')         
      for item in accessKey_footer:
        if ('accesskey' not in item):
          counter+=1  
          accessKey_footer_Passed=counter                         
      print('No Characters Key Shortcut in Footer:', accessKey_footer_Passed)

      counter=0
      accessKey_footer_Failed=0
      accessKey_footer = soup.find_all('footer')        
      for item in accessKey_footer:
        if ('accesskey' in item):
          counter+=1  
          accessKey_footer_Failed=counter                         
      print('Has Characters Key Shortcut in Footer:', accessKey_footer_Failed)
   

      accessKey_totalCount= accessKey_Link_Passed+accessKey_Link_Failed+accessKey_Label_Passed+accessKey_Label_Failed+ accessKey_a_Passed+accessKey_a_Failed+accessKey_header_Passed+accessKey_header_Failed+accessKey_ul_Passed+accessKey_ul_Failed+accessKey_li_Passed+accessKey_li_Failed+accessKey_buttons_Passed+accessKey_buttons_Failed+accessKey_paragraph_Passed+accessKey_paragraph_Failed+accessKey_heading_Passed+accessKey_heading_Failed+accessKey_image_Passed+accessKey_image_Failed+accessKey_footer_Passed+accessKey_footer_Failed
      print('Total Number of HTMLs Elements Checked for accesskey:', accessKey_totalCount)

      accessKey_totalCount_Passed= accessKey_Link_Passed+accessKey_Label_Passed+accessKey_a_Passed+accessKey_header_Passed+accessKey_ul_Passed+accessKey_li_Passed+accessKey_buttons_Passed+accessKey_paragraph_Passed+accessKey_heading_Passed+accessKey_image_Passed+accessKey_footer_Passed
      print('Total Number of HTMLs Elements Passed for accesskey:', accessKey_totalCount_Passed)

      accessKey_totalCount_Failed= accessKey_Link_Failed+accessKey_Label_Failed+accessKey_a_Failed+accessKey_header_Failed+accessKey_ul_Failed+accessKey_li_Failed+accessKey_buttons_Failed+accessKey_paragraph_Failed+accessKey_heading_Failed+accessKey_image_Failed+accessKey_footer_Failed
      print('Total Number of HTMLs Elements Failed for accesskey:', accessKey_totalCount_Failed)

      if(accessKey_totalCount_Failed<=0 and accessKey_totalCount_Passed>=1):
        print('Pass: Guideline 2.1.4 Character Key Shortcuts; Webpage has no Character Key Shortcut')
        Pcounter14=1; Fcounter14=0; NTcounter14=0; NDcounter14=0
        PLevelA7=1; FLevelA7=0; NTLevelA7=0; NDLevelA7=0
        VLevelA7=1; ADLevelA7=0; ETLevelA7=0

        PVisionImpairment14=0; FVisionImpairment14=0; NDVisionImpairment14=0; NTVisionImpairment14=0;    
        PHearingDifficulty14=0; FHearingDifficulty14=0; NDHearingDifficulty14=0; NTHearingDifficulty14=0 
        PCognitiveDisability14=1; FCognitiveDisability14=0; NDCognitiveDisability14=0; NTCognitiveDisability14=0
        PMotionDisability14=1; FMotionDisability14=0; NDMotionDisability14=0; NTMotionDisability14=0
        PLearningDisability14=0; FLearningDisability14=0; NDLearningDisability14=0; NTLearningDisability14=0
        
        Frame16=Frame(main_fm, bg='white', width=380, height=25)
        Frame16.place(x=10, y=480, width=380, height=25)
        Lable16=Label(Frame16, text='Sc (2.1.4) Character Key Shortcuts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable16.grid(row=0, column=0)
        Framee16=Frame(main_fm, bg='white', width=110, height=25)
        Framee16.place(x=400, y=480, width=110, height=25)
        Lablee16=Label(Framee16, text=accessKey_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee16.grid(row=0, column=0)
        Frameee16=Frame(main_fm, bg='white', width=480, height=25)
        Frameee16.place(x=530, y=480, width=480, height=25)
        Lableee16=Label(Frameee16, text='Webpage has no Character Key Shortcut', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee16.grid(row=0, column=0)
        Frameeee16=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee16.place(x=1030, y=480, width=130, height=25)
        Lableeee16=Label(Frameeee16, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee16.grid(row=0, column=0)
        Frameeeee16=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee16.place(x=1180, y=480, width=80, height=25)
        Lableeeee16=Label(Frameeeee16, text=accessKey_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee16.grid(row=0, column=0)
        Frameeeeee16=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee16.place(x=1280, y=480, width=150, height=25)
        Lableeeeee16=Label(Frameeeeee16, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee16.grid(row=0, column=0)
        Frameeeeeee16=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee16.place(x=1450, y=480, width=210, height=25)
        Lableeeeeee16=Label(Frameeeeeee16, text='Cognitive/Motion Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee16.grid(row=0, column=0)
        Frameeeeeeee16=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee16.place(x=1680, y=480, width=230, height=25)
        Lableeeeeeee16=Label(Frameeeeeeee16, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee16.grid(row=0, column=0)
      elif(accessKey_totalCount_Failed>=1):
        print('Fail: Guideline 2.1.4 Character Key Shortcuts; Webpage has Character Key') 
        Fcounter14=1; Pcounter14=0; NTcounter14=0; NDcounter14=0
        FLevelA7=1; PLevelA7=0; NTLevelA7=0; NDLevelA7=0
        ADLevelA7=1; VLevelA7=0; ETLevelA7=0

        FVisionImpairment14=0; PVisionImpairment14=0; NDVisionImpairment14=0; NTVisionImpairment14=0;    
        FHearingDifficulty14=0; PHearingDifficulty14=0; NDHearingDifficulty14=0; NTHearingDifficulty14=0 
        FCognitiveDisability14=1; PCognitiveDisability14=0; NDCognitiveDisability14=0; NTCognitiveDisability14=0
        FMotionDisability14=1; PMotionDisability14=0; NDMotionDisability14=0; NTMotionDisability14=0
        FLearningDisability14=0; PLearningDisability14=0; NDLearningDisability14=0; NTLearningDisability14=0
        
        Frame16=Frame(main_fm, bg='white', width=380, height=25)
        Frame16.place(x=10, y=480, width=380, height=25)
        Lable16=Label(Frame16, text='Sc (2.1.4) Character Key Shortcuts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable16.grid(row=0, column=0)
        Framee16=Frame(main_fm, bg='white', width=110, height=25)
        Framee16.place(x=400, y=480, width=110, height=25)
        Lablee16=Label(Framee16, text=accessKey_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee16.grid(row=0, column=0)
        Frameee16=Frame(main_fm, bg='white', width=480, height=25)
        Frameee16.place(x=530, y=480, width=480, height=25)
        Lableee16=Label(Frameee16, text='Webpage has Character Key Shortcut', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee16.grid(row=0, column=0)
        Frameeee16=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee16.place(x=1030, y=480, width=130, height=25)
        Lableeee16=Label(Frameeee16, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee16.grid(row=0, column=0)
        Frameeeee16=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee16.place(x=1180, y=480, width=80, height=25)
        Lableeeee16=Label(Frameeeee16, text=accessKey_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee16.grid(row=0, column=0)
        Frameeeeee16=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee16.place(x=1280, y=480, width=150, height=25)
        Lableeeeee16=Label(Frameeeeee16, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee16.grid(row=0, column=0)
        Frameeeeeee16=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee16.place(x=1450, y=480, width=210, height=25)
        Lableeeeeee16=Label(Frameeeeeee16, text='Cognitive/Motion Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee16.grid(row=0, column=0)
        Frameeeeeeee16=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee16.place(x=1680, y=480, width=230, height=25)
        Lableeeeeeee16=Label(Frameeeeeeee16, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee16.grid(row=0, column=0)

      ####===========================Guideline 2.4.5 (level AA)====================================####370

      counter=0
      linkHref_Failed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('href'== ''):
            counter+=1  
            linkHref_Failed=counter                         
        print('Number of Failed Guideline for Link:', linkHref_Failed)

      counter=0
      linkHref_Passed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('href'!= ''):
            counter+=1  
            linkHref_Passed=counter                        
        print('Number of passed Guideline for Link:',linkHref_Passed)

      ####---------------------------###
      global searchField_totalCount

      SearchField_Object=1
      
      counter=0
      searchField_Passed=0
      for link in soup.find_all('input'):
        if(link.get('type') == 'search'):
          counter+=1  
          searchField_Passed=counter                        
      print('Number of Passed Guideline for Search Field:',searchField_Passed)

      counter=0
      searchField_Failed=0
      for link in soup.find_all('input'):
        if(link.get('type') != 'search'):
          counter+=1  
          searchField_Failed=counter                        
      print('Number of Failed Guideline for Search Field:',searchField_Failed)

      searchField_totalCount=searchField_Passed+searchField_Failed
      print('The total count of Search Fields:', searchField_totalCount)


      link_searchField_Failed=linkHref_Failed+searchField_Failed
      print('The total count of Failed for Links and Search Fields:', link_searchField_Failed)

      link_searchField_Passed=linkHref_Passed+searchField_Passed
      print('The total count of Passed for Links and Search Fields:', link_searchField_Passed)

      link_searchField_totalCount=linkHref_Passed+linkHref_Failed+searchField_Passed+searchField_Failed
      print('The total count of checked for Links and Search Fields:', link_searchField_totalCount)

      if ((link_Failed>0 and searchField_Failed>0) or (link_Failed>0 or searchField_Failed>0)):
        print('Fail: Guideline 2.4.5 Multiple Ways; Internal and External Links and Search Fields are Missing')
        Fcounter15=1; Pcounter15=0; NTcounter15=0; NDcounter15=0
        FLevelAA3=1; PLevelAA3=0; NTLevelAA3=0; NDLevelAA3=0
        ADLevelAA3=1; VLevelAA3=0; ETLevelAA3=0

        FVisionImpairment15=0; PVisionImpairment15=0; NDVisionImpairment15=0; NTVisionImpairment15=0;    
        FHearingDifficulty15=0; PHearingDifficulty15=0; NDHearingDifficulty15=0; NTHearingDifficulty15=0 
        FCognitiveDisability15=1; PCognitiveDisability15=0; NDCognitiveDisability15=0; NTCognitiveDisability15=0
        FMotionDisability15=0; PMotionDisability15=0; NDMotionDisability15=0; NTMotionDisability15=0
        FLearningDisability15=0; PLearningDisability15=0; NDLearningDisability15=0; NTLearningDisability15=0
        
        Frame17=Frame(main_fm, bg='white', width=380, height=25)
        Frame17.place(x=10, y=505, width=380, height=25)
        Lable17=Label(Frame17, text='Sc (2.4.5) Multiple Ways', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=110, height=25)
        Framee17.place(x=400, y=505, width=110, height=25)
        Lablee17=Label(Framee17, text=link_searchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=25)
        Frameee17.place(x=530, y=505, width=480, height=25)
        Lableee17=Label(Frameee17, text='Internal and External Links/Search Fields are Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee17.place(x=1030, y=505, width=130, height=25)
        Lableeee17=Label(Frameeee17, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1180, y=505, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=link_searchField_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee17.place(x=1280, y=505, width=150, height=25)
        Lableeeeee17=Label(Frameeeeee17, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee17.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee17=Label(Frameeeeeee17, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
        Frameeeeeeee17=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee17.place(x=1680, y=505, width=230, height=25)
        Lableeeeeeee17=Label(Frameeeeeeee17, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee17.grid(row=0, column=0)
      elif(link_Failed>0 and searchField_Failed<=0):
        print('Fail: Guideline 2.4.5 Multiple Ways; Internal and External Links are Missing')
        Fcounter15=1; Pcounter15=0; NTcounter15=0; NDcounter15=0
        FLevelAA3=1; PLevelAA3=0; NTLevelAA3=0; NDLevelAA3=0
        ADLevelAA3=1; VLevelAA3=0; ETLevelAA3=0

        FVisionImpairment15=0; PVisionImpairment15=0; NDVisionImpairment15=0; NTVisionImpairment15=0    
        FHearingDifficulty15=0; PHearingDifficulty15=0; NDHearingDifficulty15=0; NTHearingDifficulty15=0 
        FCognitiveDisability15=1; PCognitiveDisability15=0; NDCognitiveDisability15=0; NTCognitiveDisability15=0
        FMotionDisability15=0; PMotionDisability15=0; NDMotionDisability15=0; NTMotionDisability15=0
        FLearningDisability15=0; PLearningDisability15=0; NDLearningDisability15=0; NTLearningDisability15=0
        
        Frame17=Frame(main_fm, bg='white', width=380, height=25)
        Frame17.place(x=10, y=505, width=380, height=25)
        Lable17=Label(Frame17, text='Sc (2.4.5) Multiple Ways', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=110, height=25)
        Framee17.place(x=400, y=505, width=110, height=25)
        Lablee17=Label(Framee17, text=link_searchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=25)
        Frameee17.place(x=530, y=505, width=480, height=25)
        Lableee17=Label(Frameee17, text='Internal and External Links are Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee17.place(x=1030, y=505, width=130, height=25)
        Lableeee17=Label(Frameeee17, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1180, y=505, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=link_searchField_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee17.place(x=1280, y=505, width=150, height=25)
        Lableeeeee17=Label(Frameeeeee17, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee17.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee17=Label(Frameeeeeee17, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
        Frameeeeeeee17=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee17.place(x=1680, y=505, width=230, height=25)
        Lableeeeeeee17=Label(Frameeeeeeee17, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee17.grid(row=0, column=0)
      elif(link_Failed<=0 and searchField_Failed>0):
        print('Fail: Guideline 2.4.5 Multiple Ways; Webpage has no Search Field')
        Fcounter15=1; Pcounter15=0; NTcounter15=0; NDcounter15=0
        FLevelAA3=1; PLevelAA3=0; NTLevelAA3=0; NDLevelAA3=0
        ADLevelAA3=1; VLevelAA3=0; ETLevelAA3=0

        FVisionImpairment15=0; PVisionImpairment15=0; NDVisionImpairment15=0; NTVisionImpairment15=0    
        FHearingDifficulty15=0; PHearingDifficulty15=0; NDHearingDifficulty15=0; NTHearingDifficulty15=0 
        FCognitiveDisability15=1; PCognitiveDisability15=0; NDCognitiveDisability15=0; NTCognitiveDisability15=0
        FMotionDisability15=0; PMotionDisability15=0; NDMotionDisability15=0; NTMotionDisability15=0
        FLearningDisability15=0; PLearningDisability15=0; NDLearningDisability15=0; NTLearningDisability15=0
        
        Frame17=Frame(main_fm, bg='white', width=380, height=25)
        Frame17.place(x=10, y=505, width=380, height=25)
        Lable17=Label(Frame17, text='Sc (2.4.5) Multiple Ways', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=110, height=25)
        Framee17.place(x=400, y=505, width=110, height=25)
        Lablee17=Label(Framee17, text=link_searchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=25)
        Frameee17.place(x=530, y=505, width=480, height=25)
        Lableee17=Label(Frameee17, text='Webpage has no Search Field', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee17.place(x=1030, y=505, width=130, height=25)
        Lableeee17=Label(Frameeee17, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1180, y=505, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=link_searchField_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee17.place(x=1280, y=505, width=150, height=25)
        Lableeeeee17=Label(Frameeeeee17, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee17.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee17=Label(Frameeeeeee17, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
        Frameeeeeeee17=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee17.place(x=1680, y=505, width=230, height=25)
        Lableeeeeeee17=Label(Frameeeeeeee17, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee17.grid(row=0, column=0)
      elif ((link_Failed<=0 and link_Passed>=1) and (searchField_Failed<=0 and searchField_Passed>=1)):
        print('Pass: Guideline 2.4.5 Multiple Ways; All Internal and External Links and Search Fields are Available')
        Pcounter15=1; Fcounter15=0; NTcounter15=0; NDcounter15=0
        PLevelAA3=1; FLevelAA3=0; NTLevelAA3=0; NDLevelAA3=0
        VLevelAA3=1; ADLevelAA3=0; ETLevelAA3=0

        PVisionImpairment15=0; FVisionImpairment15=0; NDVisionImpairment15=0; NTVisionImpairment15=0    
        PHearingDifficulty15=0; FHearingDifficulty15=0; NDHearingDifficulty15=0; NTHearingDifficulty15=0 
        PCognitiveDisability15=1; FCognitiveDisability15=0; NDCognitiveDisability15=0; NTCognitiveDisability15=0
        PMotionDisability15=0; FMotionDisability15=0; NDMotionDisability15=0; NTMotionDisability15=0
        PLearningDisability15=0; FLearningDisability15=0; NDLearningDisability15=0; NTLearningDisability15=0
        
        Frame17=Frame(main_fm, bg='white', width=380, height=25)
        Frame17.place(x=10, y=505, width=380, height=25)
        Lable17=Label(Frame17, text='Sc (2.4.5) Multiple Ways', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=110, height=25)
        Framee17.place(x=400, y=505, width=110, height=25)
        Lablee17=Label(Framee17, text=link_searchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=25)
        Frameee17.place(x=530, y=505, width=480, height=25)
        Lableee17=Label(Frameee17, text='All Internal and External Links and Search Fields are Available', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee17.place(x=1030, y=505, width=130, height=25)
        Lableeee17=Label(Frameeee17, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1180, y=505, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=link_searchField_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee17.place(x=1280, y=505, width=150, height=25)
        Lableeeeee17=Label(Frameeeeee17, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee17.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee17=Label(Frameeeeeee17, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
        Frameeeeeeee17=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee17.place(x=1680, y=505, width=230, height=25)
        Lableeeeeeee17=Label(Frameeeeeeee17, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee17.grid(row=0, column=0)
      else:
        print('Fail: Guideline 2.4.5 Multiple Ways; Internal and External Links and Search Field are Missing')
        Fcounter15=1; Pcounter15=0; NTcounter15=0; NDcounter15=0
        FLevelAA3=1; PLevelAA3=0; NTLevelAA3=0; NDLevelAA3=0
        ADLevelAA3=1; VLevelAA3=0; ETLevelAA3=0

        FVisionImpairment15=0; PVisionImpairment15=0; NDVisionImpairment15=0; NTVisionImpairment15=0    
        FHearingDifficulty15=0; PHearingDifficulty15=0; NDHearingDifficulty15=0; NTHearingDifficulty15=0 
        FCognitiveDisability15=1; PCognitiveDisability15=0; NDCognitiveDisability15=0; NTCognitiveDisability15=0
        FMotionDisability15=0; PMotionDisability15=0; NDMotionDisability15=0; NTMotionDisability15=0
        FLearningDisability15=0; PLearningDisability15=0; NDLearningDisability15=0; NTLearningDisability15=0
        
        Frame17=Frame(main_fm, bg='white', width=380, height=25)
        Frame17.place(x=10, y=505, width=380, height=25)
        Lable17=Label(Frame17, text='Sc (2.4.5) Multiple Ways', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=110, height=25)
        Framee17.place(x=400, y=505, width=110, height=25)
        Lablee17=Label(Framee17, text=link_searchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=25)
        Frameee17.place(x=530, y=505, width=480, height=25)
        Lableee17=Label(Frameee17, text='All Internal and External Links and Search Fields are Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee17.place(x=1030, y=505, width=130, height=25)
        Lableeee17=Label(Frameeee17, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1180, y=505, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=link_searchField_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee17.place(x=1280, y=505, width=150, height=25)
        Lableeeeee17=Label(Frameeeeee17, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee17.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee17=Label(Frameeeeeee17, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
        Frameeeeeeee17=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee17.place(x=1680, y=505, width=230, height=25)
        Lableeeeeeee17=Label(Frameeeeeeee17, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee17.grid(row=0, column=0)

      ####===========================Guideline 2.5.3 (level A)====================================####

      Label_Object=1  

      counter=0
      labelName_Failed=0
      for link in soup.find_all('label'):
        if(link.get('for') == ' '):
          counter+=1  
          labelName_Failed=counter
      print('Number of Failed Guideline for Label Name:', labelName_Failed)

      counter=0
      labelName_Passed=0
      for link in soup.find_all('label'):
        if(link.get('for') != ' '):
          counter+=1  
          labelName_Passed=counter
      print('Number of Passed Guideline for Label Name:', labelName_Passed)

      lebelName_totalCount=labelName_Passed + labelName_Failed
      print('The total count of checked for Lebel:', lebelName_totalCount)

      if(labelName_Failed<=0 and labelName_Passed>=1):
        print('Pass: Guideline 2.5.3 Label in Name; Label has Specified Name')
        Pcounter16=1; Fcounter16=0; NTcounter16=0; NDcounter16=0
        PLevelA8=1; FLevelA8=0; NTLevelA8=0; NDLevelA8=0
        VLevelA8=1; ADLevelA8=0; ETLevelA8=0

        PVisionImpairment16=1; FVisionImpairment16=0; NDVisionImpairment16=0; NTVisionImpairment16=0      
        PHearingDifficulty16=0; FHearingDifficulty16=0; NDHearingDifficulty16=0; NTHearingDifficulty16=0 
        PCognitiveDisability16=1; FCognitiveDisability16=0; NDCognitiveDisability16=0; NTCognitiveDisability16=0 
        PMotionDisability16=0; FMotionDisability16=0; NDMotionDisability16=0; NTMotionDisability16=0
        PLearningDisability16=0; FLearningDisability16=0; NDLearningDisability16=0; NTLearningDisability16=0
        
        Frame18=Frame(main_fm, bg='white', width=380, height=25) 
        Frame18.place(x=10, y=530, width=380, height=25)
        Lable18=Label(Frame18, text='Sc (2.5.3) Label in Name', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0)
        Framee18=Frame(main_fm, bg='white', width=110, height=25)
        Framee18.place(x=400, y=530, width=110, height=25)
        Lablee18=Label(Framee18, text=lebelName_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee18.place(x=530, y=530, width=480, height=25)
        Lableee18=Label(Frameee18, text='Label has Specified Name', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0) 
        Frameeee18=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee18.place(x=1030, y=530, width=130, height=25) 
        Lableeee18=Label(Frameeee18, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee18.grid(row=0, column=0) 
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1180, y=530, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=labelName_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee18.place(x=1280, y=530, width=150, height=25)
        Lableeeeee18=Label(Frameeeeee18, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee18.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee18=Label(Frameeeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)
        Frameeeeeeee18=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee18.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee18=Label(Frameeeeeeee18, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee18.grid(row=0, column=0)
      elif(labelName_Failed>0): 
        print('Fail: Guideline 2.5.3 Label in Name; Label has no Specified Name')
        Fcounter16=1; Pcounter16=0; NTcounter16=0; NDcounter16=0
        FLevelA8=1; PLevelA8=0; NTLevelA8=0; NDLevelA8=0
        ADLevelA8=1; VLevelA8=0; ETLevelA8=0

        FVisionImpairment16=1; PVisionImpairment16=0; NDVisionImpairment16=0; NTVisionImpairment16=0      
        FHearingDifficulty16=0; PHearingDifficulty16=0; NDHearingDifficulty16=0; NTHearingDifficulty16=0 
        FCognitiveDisability16=1; PCognitiveDisability16=0; NDCognitiveDisability16=0; NTCognitiveDisability16=0 
        FMotionDisability16=0; PMotionDisability16=0; NDMotionDisability16=0; NTMotionDisability16=0
        FLearningDisability16=0; PLearningDisability16=0; NDLearningDisability16=0; NTLearningDisability16=0
        
        Frame18=Frame(main_fm, bg='white', width=380, height=25) 
        Frame18.place(x=10, y=530, width=380, height=25)
        Lable18=Label(Frame18, text='Sc (2.5.3) Label in Name', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0) 
        Framee18=Frame(main_fm, bg='white', width=110, height=25)
        Framee18.place(x=400, y=530, width=110, height=25)
        Lablee18=Label(Framee18, text=lebelName_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee18.place(x=530, y=530, width=480, height=25)
        Lableee18=Label(Frameee18, text='Label has no Specified Name', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0)
        Frameeee18=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee18.place(x=1030, y=530, width=130, height=25) 
        Lableeee18=Label(Frameeee18,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee18.grid(row=0, column=0) 
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1180, y=530, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=labelName_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee18.place(x=1280, y=530, width=150, height=25)
        Lableeeeee18=Label(Frameeeeee18, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee18.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee18=Label(Frameeeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)
        Frameeeeeeee18=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee18.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee18=Label(Frameeeeeeee18, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee18.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 2.5.3 Label in Name; Webpage has no Specified Level')
        NDcounter16=1; Pcounter16=0; Fcounter16=0; NTcounter16=0
        NDLevelA8=1; PLevelA8=0; FLevelA8=0; NTLevelA8=0
        VLevelA8=1; ADLevelA8=0; ETLevelA8=0

        NDVisionImpairment16=1; PVisionImpairment16=0; FVisionImpairment16=0; NTVisionImpairment16=0     
        NDHearingDifficulty16=0; PHearingDifficulty16=0; FHearingDifficulty16=0; NTHearingDifficulty16=0 
        NDCognitiveDisability16=1; PCognitiveDisability16=0; FCognitiveDisability16=0; NTCognitiveDisability16=0 
        NDMotionDisability16=0; PMotionDisability16=0; FMotionDisability16=0; NTMotionDisability16=0
        NDLearningDisability16=0; PLearningDisability16=0; FLearningDisability16=0; NTLearningDisability16=0
        
        Frame18=Frame(main_fm, bg='white', width=380, height=25) 
        Frame18.place(x=10, y=530, width=380, height=25)
        Lable18=Label(Frame18, text='Sc (2.5.3) Label in Name', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0) 
        Framee18=Frame(main_fm, bg='white', width=110, height=25)
        Framee18.place(x=400, y=530, width=110, height=25)
        Lablee18=Label(Framee18, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee18.place(x=530, y=530, width=480, height=25)
        Lableee18=Label(Frameee18, text='Webpage has no Specified Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0) 
        Frameeee18=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee18.place(x=1030, y=530, width=130, height=25) 
        Lableeee18=Label(Frameeee18, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee18.grid(row=0, column=0) 
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1180, y=530, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee18.place(x=1280, y=530, width=150, height=25)
        Lableeeeee18=Label(Frameeeeee18, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee18.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee18=Label(Frameeeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)
        Frameeeeeeee18=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee18.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee18=Label(Frameeeeeeee18, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee18.grid(row=0, column=0)


      ####===========================Guideline 3.2.1 (level A)====================================####

      global option_totalCount

      DropDoownMenu_Object=1

      counter=0
      option_Passed=0
      for link in soup.find_all('label'):
        for link in soup.find_all('select'):
          for link in soup.find_all('option'):   
            if(link.get('value') != ''):
              counter+=1  
              option_Passed=counter                        
      print('Number of Passed Guideline for Dropdown Menu:', option_Passed)

      counter=0
      option_Failed=0
      for link in soup.find_all('label'):
        for link in soup.find_all('select'):
          for link in soup.find_all('option'):   
            if(link.get('value') == ''):
              counter+=1  
              option_Failed=counter                        
      print('Number of Failed Guideline for Dropdown Menu:', option_Failed)

      option_totalCount=option_Failed+option_Passed
      print('The total count of checked for Option:', option_totalCount)

      if(option_Failed<=0 and option_Passed>=1):
        print('Pass: Guideline 3.2.1 On Focus; Drop Down Menue is Identifiable and has no Missing Information')
       
        Frame19=Frame(main_fm, bg='white', width=380, height=25) 
        Frame19.place(x=10, y=555, width=380, height=25)
        Lable19=Label(Frame19, text='Sc (3.2.1) On Focus', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0)
        Framee19=Frame(main_fm, bg='white', width=110, height=25)
        Framee19.place(x=400, y=555, width=110, height=25)
        Lablee19=Label(Framee19, text=option_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee19.place(x=530, y=555, width=480, height=25)
        Lableee19=Label(Frameee19, text='Drop Down Menue is Identifiable and has no Missing Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0) 
        Frameeee19=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee19.place(x=1030, y=555, width=130, height=25) 
        Lableeee19=Label(Frameeee19, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee19.grid(row=0, column=0) 
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1180, y=555, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text=option_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee19.place(x=1280, y=555, width=150, height=25)
        Lableeeeee19=Label(Frameeeeee19, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee19.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee19=Label(Frameeeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)
        Frameeeeeeee19=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee19.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee19=Label(Frameeeeeeee19, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee19.grid(row=0, column=0)
      elif(option_Failed>0): 
        print('Fail: Guideline 3.2.1 On Focu; Drop Down Menue is Identifiable and has Missing Information') 
        
        Frame19=Frame(main_fm, bg='white', width=380, height=25) 
        Frame19.place(x=10, y=555, width=380, height=25)
        Lable19=Label(Frame19, text='Sc (3.2.1) On Focu', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0) 
        Framee19=Frame(main_fm, bg='white', width=110, height=25)
        Framee19.place(x=400, y=555, width=110, height=25)
        Lablee19=Label(Framee19, text=option_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee19.place(x=530, y=555, width=480, height=25)
        Lableee19=Label(Frameee19, text='Drop Down Menue is Identifiable and has Missing Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0)
        Frameeee19=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee19.place(x=1030, y=555, width=130, height=25) 
        Lableeee19=Label(Frameeee19,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee19.grid(row=0, column=0) 
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1180, y=555, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text=option_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee19.place(x=1280, y=555, width=150, height=25)
        Lableeeeee19=Label(Frameeeeee19, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee19.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee19=Label(Frameeeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)
        Frameeeeeeee19=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee19.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee19=Label(Frameeeeeeee19, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee19.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.1 On Focu; Webpage has no Drop Down Menue') 
        
        Frame19=Frame(main_fm, bg='white', width=380, height=25) 
        Frame19.place(x=10, y=555, width=380, height=25)
        Lable19=Label(Frame19, text='Sc (3.2.1) On Focu', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0) 
        Framee19=Frame(main_fm, bg='white', width=110, height=25)
        Framee19.place(x=400, y=555, width=110, height=25)
        Lablee19=Label(Framee19, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee19.place(x=530, y=555, width=480, height=25)
        Lableee19=Label(Frameee19, text='Webpage has no Drop Down Menue to Check its Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0) 
        Frameeee19=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee19.place(x=1030, y=555, width=130, height=25) 
        Lableeee19=Label(Frameeee19, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee19.grid(row=0, column=0) 
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1180, y=555, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee19.place(x=1280, y=555, width=150, height=25)
        Lableeeeee19=Label(Frameeeeee19, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee19.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee19=Label(Frameeeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)
        Frameeeeeeee19=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee19.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee19=Label(Frameeeeeeee19, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee19.grid(row=0, column=0)


            ###------------------------------------###

      global dialogbox_totalCount

      DialogBox_Object=1

      counter=0
      dialogbox_Passed=0
      inputfield1 = soup.find_all('dialog')
      for item in inputfield1:
        if(item.text() != ' '):
          counter+=1  
          dialogbox_Passed=counter                        
      print('Number of Passed Guideline for dialog Box:', dialogbox_Passed)

      counter=0
      dialogbox_Failed=0
      inputfield1 = soup.find_all('dialog')
      for item in inputfield1:
        if(item.text() == ' '):
          counter+=1  
          dialogbox_Failed=counter                        
      print('Number of Failed Guideline for dialog Box:', dialogbox_Failed)

      dialogbox_totalCount=dialogbox_Passed+dialogbox_Failed
      print('The total count of checked for DialogBox:', dialogbox_totalCount)

      if(dialogbox_Failed<=0 and dialogbox_Passed>=1):
        print('Pass: Guideline 3.2.1 On Focu; Webpage DialogBox have Proper Name and Value')
        Frame20=Frame(main_fm, bg='white', width=380, height=25) 
        Frame20.place(x=10, y=580, width=380, height=25)
        Lable20=Label(Frame20, text='Sc (3.2.1) On Focu', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0) 
        Framee20=Frame(main_fm, bg='white', width=110, height=25)
        Framee20.place(x=400, y=580, width=110, height=25)
        Lablee20=Label(Framee20, text=dialogbox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee20.place(x=530, y=580, width=480, height=25)
        Lableee20=Label(Frameee20, text='Webpage DialogBox have Proper Name and Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0)
        Frameeee20=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee20.place(x=1030, y=580, width=130, height=25) 
        Lableeee20=Label(Frameeee20, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee20.grid(row=0, column=0) 
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1180, y=580, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text=dialogbox_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0)
        Frameeeeee20=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee20.place(x=1280, y=580, width=150, height=25)
        Lableeeeee20=Label(Frameeeeee20, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee20.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee20=Label(Frameeeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)
        Frameeeeeeee20=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee20.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee20=Label(Frameeeeeeee20, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee20.grid(row=0, column=0)
      elif(dialogbox_Failed>=1):
        print('Fail: Guideline 3.2.1 On Focu;  Webpage DialoBox have Missing Name or Values') 
        Frame20=Frame(main_fm, bg='white', width=380, height=25) 
        Frame20.place(x=10, y=580, width=380, height=25)
        Lable20=Label(Frame20, text='Sc (3.2.1) On Focu', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0) 
        Framee20=Frame(main_fm, bg='white', width=110, height=25)
        Framee20.place(x=400, y=580, width=110, height=25)
        Lablee20=Label(Framee20, text=dialogbox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee20.place(x=530, y=580, width=480, height=25)
        Lableee20=Label(Frameee20, text='Webpage DialogBox have Missing Name or Values', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0) 
        Frameeee20=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee20.place(x=1030, y=580, width=130, height=25) 
        Lableeee20=Label(Frameeee20,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee20.grid(row=0, column=0)
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1180, y=580, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text=dialogbox_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0) 
        Frameeeeee20=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee20.place(x=1280, y=580, width=150, height=25)
        Lableeeeee20=Label(Frameeeeee20, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee20.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee20=Label(Frameeeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)
        Frameeeeeeee20=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee20.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee20=Label(Frameeeeeeee20, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee20.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.1 On Focu;  Webpage has no DialogBox') 
        Frame20=Frame(main_fm, bg='white', width=380, height=25) 
        Frame20.place(x=10, y=580, width=380, height=25)
        Lable20=Label(Frame20, text='Sc (3.2.1) On Focu', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0) 
        Framee20=Frame(main_fm, bg='white', width=110, height=25)
        Framee20.place(x=400, y=580, width=110, height=25)
        Lablee20=Label(Framee20, text=dialogbox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee20.place(x=530, y=580, width=480, height=25)
        Lableee20=Label(Frameee20, text='Webpage has no DialogBox to Check its Name and Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0) 
        Frameeee20=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee20.place(x=1030, y=580, width=130, height=25) 
        Lableeee20=Label(Frameeee20,text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee20.grid(row=0, column=0)
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1180, y=580, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0) 
        Frameeeeee20=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee20.place(x=1280, y=580, width=150, height=25)
        Lableeeeee20=Label(Frameeeeee20, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee20.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee20=Label(Frameeeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)
        Frameeeeeeee20=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee20.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee20=Label(Frameeeeeeee20, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee20.grid(row=0, column=0)

      if ((option_Failed<=0 and option_Passed>=1) and (dialogbox_Failed<=0 and dialogbox_Passed>=1)):
        print('Pass: Guideline 3.2.1 On Focus; Drop Down Menue and Dialog Box is Identifiable and has no missing information')
        Pcounter17=1; Fcounter17=0; NTcounter17=0; NDcounter17=0
        PLevelA9=1; FLevelA9=0; NTLevelA9=0; NDLevelA9=0
        VLevelA9=1; ADLevelA9=0; ETLevelA9=0

        PVisionImpairment17=1; FVisionImpairment17=0; NDVisionImpairment17=0; NTVisionImpairment17=0      
        PHearingDifficulty17=0; FHearingDifficulty17=0; NDHearingDifficulty17=0; NTHearingDifficulty17=0 
        PCognitiveDisability17=1; FCognitiveDisability17=0; NDCognitiveDisability17=0; NTCognitiveDisability17=0 
        PMotionDisability17=0; FMotionDisability17=0; NDMotionDisability17=0; NTMotionDisability17=0
        PLearningDisability17=0; FLearningDisability17=0; NDLearningDisability17=0; NTLearningDisability17=0
      elif ((option_Failed>0) or (dialogbox_Failed>0)): 
        print('Fail: Guideline 3.2.1 On Focu; Drop Down Menue and Dialog Box is Identifiable and has missing information') 
        Fcounter17=1; Pcounter17=0; NTcounter17=0; NDcounter17=0
        FLevelA9=1; PLevelA9=0; NTLevelA9=0; NDLevelA9=0
        ADLevelA9=1; VLevelA9=0; ETLevelA9=0

        FVisionImpairment17=1; PVisionImpairment17=0; NDVisionImpairment17=0; NTVisionImpairment17=0      
        FHearingDifficulty17=0; PHearingDifficulty17=0; NDHearingDifficulty17=0; NTHearingDifficulty17=0 
        FCognitiveDisability17=1; PCognitiveDisability17=0; NDCognitiveDisability17=0; NTCognitiveDisability17=0 
        FMotionDisability17=0; PMotionDisability17=0; NDMotionDisability17=0; NTMotionDisability17=0
        FLearningDisability17=0; PLearningDisability17=0; NDLearningDisability17=0; NTLearningDisability17=0
      else:
        print('Not Detected: Guideline 3.2.1 On Focu; Webpage has no Drop Down Menue and Dialog Box') 
        NDcounter17=1; Pcounter17=0; Fcounter17=0; NTcounter17=0
        NDLevelA9=1; PLevelA9=0; FLevelA9=0; NTLevelA9=0
        VLevelA9=1; ADLevelA9=0; ETLevelA9=0

        NDVisionImpairment17=1; PVisionImpairment17=0; FVisionImpairment17=0; NTVisionImpairment17=0     
        NDHearingDifficulty17=0; PHearingDifficulty17=0; FHearingDifficulty17=0; NTHearingDifficulty17=0 
        NDCognitiveDisability17=1; PCognitiveDisability17=0; FCognitiveDisability17=0; NTCognitiveDisability17=0 
        NDMotionDisability17=0; PMotionDisability17=0; FMotionDisability17=0; NTMotionDisability17=0
        NDLearningDisability17=0; PLearningDisability17=0; FLearningDisability17=0; NTLearningDisability17=0

      
      ####===========================Guideline 3.2.3 (level AA); 3.2.4 (level AA)====================================####
    
      global placeholderSearch_totalCount

      counter=0
      placeholderSearch_Passed=0
      for link in soup.find_all('input'):
        if(link.get('type') == 'search'):
          if(link.get('placeholder') != ''):
            counter+=1  
            placeholderSearch_Passed=counter                        
      print('Number of Passed Guideline for Placeholder in Search Field:', placeholderSearch_Passed)

      counter=0
      placeholderSearch_Failed=0
      for link in soup.find_all('input'):
        if(link.get('type') == 'search'):
          if(link.get('placeholder') != ''):
            counter+=1  
            placeholderSearch_Failed=counter                        
      print('Number of Failed Guideline for Placeholder in Search Field:', placeholderSearch_Failed)

      placeholderSearch_totalCount=placeholderSearch_Passed+placeholderSearch_Failed
      print('The total count of checked for Placeholder in Search Field:', placeholderSearch_totalCount)

      if(placeholderSearch_Failed<=0 and placeholderSearch_Passed>=1):
        print('Pass: Guideline 3.2.3 Consistent Navigation; Search Field is Understandable and Navigable')
        Pcounter18=1; Fcounter18=0; NTcounter18=0; NDcounter18=0
        PLevelAA4=1; FLevelAA4=0; NTLevelAA4=0; NDLevelAA4=0
        VLevelAA4=1; ADLevelAA4=0; ETLevelAA4=0

        PVisionImpairment18=1; FVisionImpairment18=0; NDVisionImpairment18=0; NTVisionImpairment18=0      
        PHearingDifficulty18=0; FHearingDifficulty18=0; NDHearingDifficulty18=0; NTHearingDifficulty18=0 
        PCognitiveDisability18=1; FCognitiveDisability18=0; NDCognitiveDisability18=0; NTCognitiveDisability18=0 
        PMotionDisability18=0; FMotionDisability18=0; NDMotionDisability18=0; NTMotionDisability18=0
        PLearningDisability18=0; FLearningDisability18=0; NDLearningDisability18=0; NTLearningDisability18=0
        
        Frame21=Frame(main_fm, bg='white', width=380, height=25) 
        Frame21.place(x=10, y=605, width=380, height=25)
        Lable21=Label(Frame21, text='Sc (3.2.3) Consistent Navigation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable21.grid(row=0, column=0) 
        Framee21=Frame(main_fm, bg='white', width=110, height=25)
        Framee21.place(x=400, y=605, width=110, height=25)
        Lablee21=Label(Framee21, text=placeholderSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee21.grid(row=0, column=0) 
        Frameee21=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee21.place(x=530, y=605, width=480, height=25)
        Lableee21=Label(Frameee21, text='Search Field is Understandable and Navigable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee21.grid(row=0, column=0) 
        Frameeee21=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee21.place(x=1030, y=605, width=130, height=25) 
        Lableeee21=Label(Frameeee21, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee21.grid(row=0, column=0) 
        Frameeeee21=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee21.place(x=1180, y=605, width=80, height=25)
        Lableeeee21=Label(Frameeeee21, text=placeholderSearch_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee21.grid(row=0, column=0)
        Frameeeeee21=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee21.place(x=1280, y=605, width=150, height=25)
        Lableeeeee21=Label(Frameeeeee21, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee21.grid(row=0, column=0)
        Frameeeeeee21=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee21.place(x=1450, y=605, width=210, height=25)
        Lableeeeeee21=Label(Frameeeeeee21, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee21.grid(row=0, column=0)
        Frameeeeeeee21=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee21.place(x=1680, y=605, width=230, height=25)   
        Lableeeeeeee21=Label(Frameeeeeeee21, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee21.grid(row=0, column=0)
        print('Pass: Guideline 3.2.4 Consistent Identification; Search Field is Identifiable') ##Low vision/Blind/Cognitive limitations/Intellectual disabilities 
        Pcounter19=1; Fcounter19=0; NTcounter19=0; NDcounter19=0
        PLevelAA5=1; FLevelAA5=0; NTLevelAA5=0; NDLevelAA5=0
        VLevelAA5=1; ADLevelAA5=0; ETLevelAA5=0

        PVisionImpairment19=1; FVisionImpairment19=0; NDVisionImpairment19=0; NTVisionImpairment19=0      
        PHearingDifficulty19=0; FHearingDifficulty19=0; NDHearingDifficulty19=0; NTHearingDifficulty19=0 
        PCognitiveDisability19=1; FCognitiveDisability19=0; NDCognitiveDisability19=0; NTCognitiveDisability19=0 
        PMotionDisability19=0; FMotionDisability19=0; NDMotionDisability19=0; NTMotionDisability19=0
        PLearningDisability19=0; FLearningDisability19=0; NDLearningDisability19=0; NTLearningDisability19=0
        
        Frame22=Frame(main_fm, bg='white', width=380, height=25) 
        Frame22.place(x=10, y=630, width=380, height=25)
        Lable22=Label(Frame22, text='Sc (3.2.4) Consistent Identification', fg='black', bg='white',font=("Arial", 11))
        Lable22.grid(row=0, column=0)
        Framee22=Frame(main_fm, bg='white', width=110, height=25)
        Framee22.place(x=400, y=630, width=110, height=25)
        Lablee22=Label(Framee22, text=placeholderSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee22.grid(row=0, column=0) 
        Frameee22=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee22.place(x=530, y=630, width=480, height=25)
        Lableee22=Label(Frameee22, text='Search Field is Identifiable', fg='black', bg='white',font=("Arial", 11))
        Lableee22.grid(row=0, column=0) 
        Frameeee22=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee22.place(x=1030, y=630, width=130, height=25) 
        Lableeee22=Label(Frameeee22, text='PASSED', fg='green', bg='white',font=("Arial", 11)) 
        Lableeee22.grid(row=0, column=0) 
        Frameeeee22=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee22.place(x=1180, y=630, width=80, height=25)
        Lableeeee22=Label(Frameeeee22, text=placeholderSearch_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee22.grid(row=0, column=0)
        Frameeeeee22=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee22.place(x=1280, y=630, width=150, height=25)
        Lableeeeee22=Label(Frameeeeee22, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee22.grid(row=0, column=0)
        Frameeeeeee22=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee22.place(x=1450, y=630, width=210, height=25)
        Lableeeeeee22=Label(Frameeeeeee22, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee22.grid(row=0, column=0)
        Frameeeeeeee22=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee22.place(x=1680, y=630, width=230, height=25)   
        Lableeeeeeee22=Label(Frameeeeeeee22, text='Verified', fg='black', bg='white',font=("Arial", 11)) 
        Lableeeeeeee22.grid(row=0, column=0)
      elif(placeholderSearch_Failed>0):
        print('Fail: Guideline 3.2.3 Consistent Navigation; Search Field is not Understandable and Navigable')
        Fcounter18=1; Pcounter18=0; NTcounter18=0; NDcounter18=0
        FLevelAA4=1; PLevelAA4=0; NTLevelAA4=0; NDLevelAA4=0
        ADLevelAA4=1; VLevelAA4=0; ETLevelAA4=0

        FVisionImpairment18=1; PVisionImpairment18=0; NDVisionImpairment18=0; NTVisionImpairment18=0      
        FHearingDifficulty18=0; PHearingDifficulty18=0; NDHearingDifficulty18=0; NTHearingDifficulty18=0 
        FCognitiveDisability18=1; PCognitiveDisability18=0; NDCognitiveDisability18=0; NTCognitiveDisability18=0 
        FMotionDisability18=0; PMotionDisability18=0; NDMotionDisability18=0; NTMotionDisability18=0
        FLearningDisability18=0; PLearningDisability18=0; NDLearningDisability18=0; NTLearningDisability18=0
        
        Frame21=Frame(main_fm, bg='white', width=380, height=25) 
        Frame21.place(x=10, y=605, width=380, height=25)
        Lable21=Label(Frame21, text='Success Criteria (3.2.3) Consistent Navigation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable21.grid(row=0, column=0) 
        Framee21=Frame(main_fm, bg='white', width=110, height=25)
        Framee21.place(x=400, y=605, width=110, height=25)
        Lablee21=Label(Framee21, text=placeholderSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee21.grid(row=0, column=0) 
        Frameee21=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee21.place(x=530, y=605, width=480, height=25)
        Lableee21=Label(Frameee21, text='Search Field is not Understandable and Navigable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee21.grid(row=0, column=0)
        Frameeee21=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee21.place(x=1030, y=605, width=130, height=25) 
        Lableeee21=Label(Frameeee21,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee21.grid(row=0, column=0) 
        Frameeeee21=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee21.place(x=1180, y=605, width=80, height=25)
        Lableeeee21=Label(Frameeeee21, text=placeholderSearch_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee21.grid(row=0, column=0)
        Frameeeeee21=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee21.place(x=1280, y=605, width=150, height=25)
        Lableeeeee21=Label(Frameeeeee21, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee21.grid(row=0, column=0)
        Frameeeeeee21=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee21.place(x=1450, y=605, width=210, height=25)
        Lableeeeeee21=Label(Frameeeeeee21, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee21.grid(row=0, column=0)
        Frameeeeeeee21=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee21.place(x=1680, y=605, width=230, height=25)   
        Lableeeeeeee21=Label(Frameeeeeeee21, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee21.grid(row=0, column=0)
        print('Fail: Guideline 3.2.4 Consistent Identification; Search Field is not Identifiable')
        Fcounter19=1; Pcounter19=0; NTcounter19=0; NDcounter19=0
        FLevelAA5=1; PLevelAA5=0; NTLevelAA5=0; NDLevelAA5=0
        ADLevelAA5=1; VLevelAA5=0; ETLevelAA5=0

        FVisionImpairment19=1; PVisionImpairment19=0; NDVisionImpairment19=0; NTVisionImpairment19=0      
        FHearingDifficulty19=0; PHearingDifficulty19=0; NDHearingDifficulty19=0; NTHearingDifficulty19=0 
        FCognitiveDisability19=1; PCognitiveDisability19=0; NDCognitiveDisability19=0; NTCognitiveDisability19=0 
        FMotionDisability19=0; PMotionDisability19=0; NDMotionDisability19=0; NTMotionDisability19=0
        FLearningDisability19=0; PLearningDisability19=0; NDLearningDisability19=0; NTLearningDisability19=0
        
        Frame22=Frame(main_fm, bg='white', width=380, height=25) 
        Frame22.place(x=10, y=630, width=380, height=25)
        Lable22=Label(Frame22, text='Sc (3.2.4) Consistent Identification', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable22.grid(row=0, column=0) 
        Framee22=Frame(main_fm, bg='white', width=110, height=25)
        Framee22.place(x=400, y=630, width=110, height=25)
        Lablee22=Label(Framee22, text=placeholderSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee22.grid(row=0, column=0) 
        Frameee22=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee22.place(x=530, y=630, width=480, height=25)
        Lableee22=Label(Frameee22, text='Search Field is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee22.grid(row=0, column=0)
        Frameeee22=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee22.place(x=1030, y=630, width=130, height=25) 
        Lableeee22=Label(Frameeee22,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee22.grid(row=0, column=0) 
        Frameeeee22=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee22.place(x=1180, y=630, width=80, height=25)
        Lableeeee22=Label(Frameeeee22, text=placeholderSearch_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee22.grid(row=0, column=0)
        Frameeeeee22=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee22.place(x=1280, y=630, width=150, height=25)
        Lableeeeee22=Label(Frameeeeee22, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee22.grid(row=0, column=0)
        Frameeeeeee22=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee22.place(x=1450, y=630, width=210, height=25)
        Lableeeeeee22=Label(Frameeeeeee22, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee22.grid(row=0, column=0)
        Frameeeeeeee22=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee22.place(x=1680, y=630, width=230, height=25)   
        Lableeeeeeee22=Label(Frameeeeeeee22, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee22.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.3 Consistent Navigation; Webpage has no Search Field')
        NDcounter18=1; Pcounter18=0; Fcounter18=0; NTcounter18=0
        NDLevelAA4=1; PLevelAA4=0; FLevelAA4=0; NTLevelAA4=0
        VLevelAA4=1; ADLevelAA4=0; ETLevelAA4=0

        NDVisionImpairment18=1; PVisionImpairment18=0; FVisionImpairment18=0; NTVisionImpairment18=0     
        NDHearingDifficulty18=0; PHearingDifficulty18=0; FHearingDifficulty18=0; NTHearingDifficulty18=0 
        NDCognitiveDisability18=1; PCognitiveDisability18=0; FCognitiveDisability18=0; NTCognitiveDisability18=0 
        NDMotionDisability18=0; PMotionDisability18=0; FMotionDisability18=0; NTMotionDisability18=0
        NDLearningDisability18=0; PLearningDisability18=0; FLearningDisability18=0; NTLearningDisability18=0
        
        Frame21=Frame(main_fm, bg='white', width=380, height=25) 
        Frame21.place(x=10, y=605, width=380, height=25)
        Lable21=Label(Frame21, text='Sc (3.2.3) Consistent Navigation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable21.grid(row=0, column=0) 
        Framee21=Frame(main_fm, bg='white', width=110, height=25)
        Framee21.place(x=400, y=605, width=110, height=25)
        Lablee21=Label(Framee21, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee21.grid(row=0, column=0) 
        Frameee21=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee21.place(x=530, y=605, width=480, height=25)
        Lableee21=Label(Frameee21, text='Webpage has no Search Field to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee21.grid(row=0, column=0)
        Frameeee21=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee21.place(x=1030, y=605, width=130, height=25) 
        Lableeee21=Label(Frameeee21, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee21.grid(row=0, column=0) 
        Frameeeee21=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee21.place(x=1180, y=605, width=80, height=25)
        Lableeeee21=Label(Frameeeee21, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee21.grid(row=0, column=0)
        Frameeeeee21=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee21.place(x=1280, y=605, width=150, height=25)
        Lableeeeee21=Label(Frameeeeee21, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee21.grid(row=0, column=0)
        Frameeeeeee21=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee21.place(x=1450, y=605, width=210, height=25)
        Lableeeeeee21=Label(Frameeeeeee21, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee21.grid(row=0, column=0)
        Frameeeeeeee21=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee21.place(x=1680, y=605, width=230, height=25)   
        Lableeeeeeee21=Label(Frameeeeeeee21, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee21.grid(row=0, column=0)
        print('Not Detected: Guideline 3.2.4 Consistent Identification; Webpage has no Search Field')
        NDcounter19=1; Pcounter19=0; Fcounter19=0; NTcounter19=0
        NDLevelAA5=1; PLevelAA5=0; FLevelAA5=0; NTLevelAA5=0
        VLevelAA5=1; ADLevelAA5=0; ETLevelAA5=0

        NDVisionImpairment19=1; PVisionImpairment19=0; FVisionImpairment19=0; NTVisionImpairment19=0     
        NDHearingDifficulty19=0; PHearingDifficulty19=0; FHearingDifficulty19=0; NTHearingDifficulty19=0 
        NDCognitiveDisability19=1; PCognitiveDisability19=0; FCognitiveDisability19=0; NTCognitiveDisability19=0 
        NDMotionDisability19=0; PMotionDisability19=0; FMotionDisability19=0; NTMotionDisability19=0
        NDLearningDisability19=0; PLearningDisability19=0; FLearningDisability19=0; NTLearningDisability19=0
        
        Frame22=Frame(main_fm, bg='white', width=380, height=25) 
        Frame22.place(x=10, y=630, width=380, height=25)
        Lable22=Label(Frame22, text='Sc (3.2.4) Consistent Identification', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable22.grid(row=0, column=0) 
        Framee22=Frame(main_fm, bg='white', width=110, height=25)
        Framee22.place(x=400, y=630, width=110, height=25)
        Lablee22=Label(Framee22, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee22.grid(row=0, column=0) 
        Frameee22=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee22.place(x=530, y=630, width=480, height=25)
        Lableee22=Label(Frameee22, text='Webpage has no Search Field to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee22.grid(row=0, column=0)
        Frameeee22=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee22.place(x=1030, y=630, width=130, height=25) 
        Lableeee22=Label(Frameeee22, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee22.grid(row=0, column=0) 
        Frameeeee22=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee22.place(x=1180, y=630, width=80, height=25)
        Lableeeee22=Label(Frameeeee22, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee22.grid(row=0, column=0)
        Frameeeeee22=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee22.place(x=1280, y=630, width=150, height=25)
        Lableeeeee22=Label(Frameeeeee22, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee22.grid(row=0, column=0)
        Frameeeeeee22=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee22.place(x=1450, y=630, width=210, height=25)
        Lableeeeeee22=Label(Frameeeeeee22, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee22.grid(row=0, column=0)
        Frameeeeeeee22=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee22.place(x=1680, y=630, width=230, height=25)   
        Lableeeeeeee22=Label(Frameeeeeeee22, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee22.grid(row=0, column=0)

            ####===========================Guideline 3.2.5 (level AAA)====================================####530

      global form_totalCount

      Form_Object=1

      counter=0
      form_total=0
      formList = soup.find_all('form')      
      if(formList !=[]):           
        counter+=1  
        form_total=counter                       
      print('Number of Form:', form_total)

      counter=0
      form_ActionPassed=0
      formList = soup.find_all('form')    
      if(formList !=[]):           
        for item in formList:
          if ('action' != ''):
            counter+=1  
            form_ActionPassed=counter                       
      print('Number of Passed Guideline for Form Action:', form_ActionPassed)

      counter=0
      form_ActionFailed=0
      formList = soup.find_all('form')
      if(formList !=[]):           
        for item in formList:
          if ('action'== ''):
            counter+=1  
            form_ActionFailed=counter                       
      print('Number of Failed Guideline for Form Action:', form_ActionFailed)

      
      counter=0
      Form_labelText_Passed=0
      formList=soup.find_all('form')
      if(formList !=[]):
        if('label' in formList):
          for item in formList:
            lableText=label.text
            #print(link.text)
            if(lableText != ' '):
              counter+=1  
              Form_labelText_Passed=counter
      print('Number of Passed Guideline for Label Name in Form:', Form_labelText_Passed)

      counter=0
      Form_labelText_Failed=0
      formList=soup.find_all('form')
      if(formList !=[]):
        if('label' in formList):
          for item in formList:
            lableText=label.text
            #print(link.text)
            if(lableText == ' '):
              counter+=1  
              Form_labelText_Failed=counter
      print('Number of Failed Guideline for Label Name in Form:', Form_labelText_Failed)


      form_totalCount=form_total
      print('The total count of checked for Form:', form_totalCount)

      if(((form_ActionPassed>=1 and form_ActionFailed<=0) and (Form_labelText_Passed>=1 and Form_labelText_Failed<=0)) or ((form_ActionPassed>=1 and form_ActionFailed<=0) or (Form_labelText_Passed>=1 and Form_labelText_Failed<=0))):
        print('Not Tested: Guideline 3.2.5 Change on Request; Webpage has Form but Change on Request is Not Identifiable')
        NTcounter20=1; Pcounter20=0; Fcounter20=0; NDcounter20=0
        NTLevelAAA6=1; PLevelAAA6=0; FLevelAAA6=0; NDLevelAAA6=0
        ETLevelAAA6=1; VLevelAAA6=0; ADLevelAAA6=0

        PVisionImpairment20=1; FVisionImpairment20=0; NDVisionImpairment20=0; NTVisionImpairment20=0      
        PHearingDifficulty20=0; FHearingDifficulty20=0; NDHearingDifficulty20=0; NTHearingDifficulty20=0 
        PCognitiveDisability20=1; FCognitiveDisability20=0; NDCognitiveDisability20=0; NTCognitiveDisability20=0 
        PMotionDisability20=1; FMotionDisability20=0; NDMotionDisability20=0; NTMotionDisability20=0
        PLearningDisability20=0; FLearningDisability20=0; NDLearningDisability20=0; NTLearningDisability20=0
       
        Frame23=Frame(main_fm, bg='white', width=380, height=25) 
        Frame23.place(x=10, y=655, width=380, height=25)
        Lable23=Label(Frame23, text='Sc  (3.2.5) Change on Request', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable23.grid(row=0, column=0)
        Framee23=Frame(main_fm, bg='white', width=110, height=25)
        Framee23.place(x=400, y=655, width=110, height=25)
        Lablee23=Label(Framee23, text=form_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee23.grid(row=0, column=0) 
        Frameee23=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee23.place(x=530, y=655, width=480, height=25)
        Lableee23=Label(Frameee23, text='Webpage has Form but Change on Request is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee23.grid(row=0, column=0) 
        Frameeee23=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee23.place(x=1030, y=655, width=130, height=25) 
        Lableeee23=Label(Frameeee23, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee23.grid(row=0, column=0) 
        Frameeeee23=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee23.place(x=1180, y=655, width=80, height=25)
        Lableeeee23=Label(Frameeeee23, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee23.grid(row=0, column=0)
        Frameeeeee23=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee23.place(x=1280, y=655, width=150, height=25)
        Lableeeeee23=Label(Frameeeeee23, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee23.grid(row=0, column=0)
        Frameeeeeee23=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee23.place(x=1450, y=655, width=210, height=25)
        Lableeeeeee23=Label(Frameeeeeee23, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee23.grid(row=0, column=0)
        Frameeeeeeee23=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee23.place(x=1680, y=655, width=230, height=25)   
        Lableeeeeeee23=Label(Frameeeeeeee23, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee23.grid(row=0, column=0)
      elif((form_ActionFailed>0) or (Form_labelText_Failed>0)):
        print('Fail: Guideline 3.2.5 Change on Request; Webpage Form Action is not Specified/Missing')
        Fcounter20=1; Pcounter20=0; NTcounter20=0; NDcounter20=0
        FLevelAAA6=1; PLevelAAA6=0; NTLevelAAA6=0; NDLevelAAA6=0
        ADLevelAAA6=1; VLevelAAA6=0; ETLevelAAA6=0

        FVisionImpairment20=1; PVisionImpairment20=0; NDVisionImpairment20=0; NTVisionImpairment20=0      
        FHearingDifficulty20=0; PHearingDifficulty20=0; NDHearingDifficulty20=0; NTHearingDifficulty20=0 
        FCognitiveDisability20=1; PCognitiveDisability20=0; NDCognitiveDisability20=0; NTCognitiveDisability20=0 
        FMotionDisability20=1; PMotionDisability20=0; NDMotionDisability20=0; NTMotionDisability20=0
        FLearningDisability20=0; PLearningDisability20=0; NDLearningDisability20=0; NTLearningDisability20=0
        
        Frame23=Frame(main_fm, bg='white', width=380, height=25) 
        Frame23.place(x=10, y=655, width=380, height=25)
        Lable23=Label(Frame23, text='Sc (3.2.5) Change on Request', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable23.grid(row=0, column=0) 
        Framee23=Frame(main_fm, bg='white', width=110, height=25)
        Framee23.place(x=400, y=655, width=110, height=25)
        Lablee23=Label(Framee23, text=form_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee23.grid(row=0, column=0) 
        Frameee23=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee23.place(x=530, y=655, width=480, height=25)
        Lableee23=Label(Frameee23, text='Webpage Form Action is not Specified/Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee23.grid(row=0, column=0)
        Frameeee23=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee23.place(x=1030, y=655, width=130, height=25) 
        Lableeee23=Label(Frameeee23,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee23.grid(row=0, column=0) 
        Frameeeee23=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee23.place(x=1180, y=655, width=80, height=25)
        Lableeeee23=Label(Frameeeee23, text=form_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee23.grid(row=0, column=0)
        Frameeeeee23=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee23.place(x=1280, y=655, width=150, height=25)
        Lableeeeee23=Label(Frameeeeee23, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee23.grid(row=0, column=0)
        Frameeeeeee23=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee23.place(x=1450, y=655, width=210, height=25)
        Lableeeeeee23=Label(Frameeeeeee23, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee23.grid(row=0, column=0)
        Frameeeeeeee23=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee23.place(x=1680, y=655, width=230, height=25)   
        Lableeeeeeee23=Label(Frameeeeeeee23, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee23.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.5 Change on Request; Webpage has no Identifiable Form')
        NDcounter20=1; Pcounter20=0; Fcounter20=0; NTcounter20=0
        NDLevelAAA6=1; PLevelAAA6=0; FLevelAAA6=0; NTLevelAAA6=0
        VLevelAAA6=1; ADLevelAAA6=0; ETLevelAAA6=0

        NDVisionImpairment20=1; PVisionImpairment20=0; FVisionImpairment20=0; NTVisionImpairment20=0     
        NDHearingDifficulty20=0; PHearingDifficulty20=0; FHearingDifficulty20=0; NTHearingDifficulty20=0 
        NDCognitiveDisability20=1; PCognitiveDisability20=0; FCognitiveDisability20=0; NTCognitiveDisability20=0 
        NDMotionDisability20=1; PMotionDisability20=0; FMotionDisability20=0; NTMotionDisability20=0
        NDLearningDisability20=0; PLearningDisability20=0; FLearningDisability20=0; NTLearningDisability20=0
        
        Frame23=Frame(main_fm, bg='white', width=380, height=25) 
        Frame23.place(x=10, y=655, width=380, height=25)
        Lable23=Label(Frame23, text='Sc (3.2.5) Change on Request', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable23.grid(row=0, column=0) 
        Framee23=Frame(main_fm, bg='white', width=110, height=25)
        Framee23.place(x=400, y=655, width=110, height=25)
        Lablee23=Label(Framee23, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee23.grid(row=0, column=0) 
        Frameee23=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee23.place(x=530, y=655, width=480, height=25)
        Lableee23=Label(Frameee23, text='Webpage has no Identifiable Form to Check', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee23.grid(row=0, column=0)
        Frameeee23=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee23.place(x=1030, y=655, width=130, height=25) 
        Lableeee23=Label(Frameeee23, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee23.grid(row=0, column=0) 
        Frameeeee23=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee23.place(x=1180, y=655, width=80, height=25)
        Lableeeee23=Label(Frameeeee23, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee23.grid(row=0, column=0)
        Frameeeeee23=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee23.place(x=1280, y=655, width=150, height=25)
        Lableeeeee23=Label(Frameeeeee23, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee23.grid(row=0, column=0)
        Frameeeeeee23=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee23.place(x=1450, y=655, width=210, height=25)
        Lableeeeeee23=Label(Frameeeeeee23, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee23.grid(row=0, column=0)
        Frameeeeeeee23=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee23.place(x=1680, y=655, width=230, height=25)   
        Lableeeeeeee23=Label(Frameeeeeeee23, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee23.grid(row=0, column=0)


      ####===========================Guideline 3.2.6 (level A)====================================####

      print('Not Tested: Guideline 3.2.6 Consistent Help; Consistent Help is not Tested')
      NTcounter21=1; Pcounter21=0; Fcounter21=0; NDcounter21=0
      NTLevelA10=1; PLevelA10=0; FLevelA10=0; NDLevelA10=0
      ETLevelA10=1; VLevelA10=0; ADLevelA10=0

      NTVisionImpairment21=1; PVisionImpairment21=0; FVisionImpairment21=0; NDVisionImpairment21=0      
      NTHearingDifficulty21=0; PHearingDifficulty21=0; FHearingDifficulty21=0; NDHearingDifficulty21=0 
      NTCognitiveDisability21=1; PCognitiveDisability21=0; FCognitiveDisability21=0; NDCognitiveDisability21=0 
      NTMotionDisability21=1; PMotionDisability21=0; FMotionDisability21=0; NDMotionDisability21=0
      NTLearningDisability21=0; PLearningDisability21=0; FLearningDisability21=0; NDLearningDisability21=0
      
      Frame24=Frame(main_fm, bg='white', width=380, height=25)
      Frame24.place(x=10, y=680, width=380, height=25)
      Lable24=Label(Frame24, text='Sc (3.2.6) Consistent Help', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lable24.grid(row=0, column=0)
      Framee24=Frame(main_fm, bg='white', width=110, height=25)
      Framee24.place(x=400, y=680, width=110, height=25)
      Lablee24=Label(Framee24, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
      Lablee24.grid(row=0, column=0)
      Frameee24=Frame(main_fm, bg='white', width=480, height=25)
      Frameee24.place(x=530, y=680, width=480, height=25)
      Lableee24=Label(Frameee24, text='Consistent Help is not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableee24.grid(row=0, column=0)
      Frameeee24=Frame(main_fm, bg='white', width=130, height=25)
      Frameeee24.place(x=1030, y=680, width=130, height=25)
      Lableeee24=Label(Frameeee24, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold'))
      Lableeee24.grid(row=0, column=0)
      Frameeeee24=Frame(main_fm, bg='white', width=80, height=25)
      Frameeeee24.place(x=1180, y=680, width=80, height=25)
      Lableeeee24=Label(Frameeeee24, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
      Lableeeee24.grid(row=0, column=0)
      Frameeeeee24=Frame(main_fm, bg='white', width=150, height=25)
      Frameeeeee24.place(x=1280, y=680, width=150, height=25)
      Lableeeeee24=Label(Frameeeeee24, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeee24.grid(row=0, column=0)
      Frameeeeeee24=Frame(main_fm, bg='white', width=210, height=25)
      Frameeeeeee24.place(x=1450, y=680, width=210, height=25)
      Lableeeeeee24=Label(Frameeeeeee24, text='Cognitive/Vision/Motor', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeee24.grid(row=0, column=0)
      Frameeeeeeee24=Frame(main_fm, bg='white', width=230, height=25)
      Frameeeeeeee24.place(x=1680, y=680, width=230, height=25)
      Lableeeeeeee24=Label(Frameeeeeeee24, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeeee24.grid(row=0, column=0)


        ####===========================Guideline 3.3.1 (Level A)====================================####

      global aria_totalCount

      ErrorMessage_Object=1  

      counter=0
      aria_Passed=0
      for link in soup.find_all('input'):
        if(link.get('aria-invalid') != []):  
          if(link.get('aria-invalid') == 'true'):
            counter+=1  
            aria_Passed=counter                        
      print('Number of Passed Guideline for ErrorMessage:', aria_Passed)

      counter=0
      aria_Failed=0
      for link in soup.find_all('input'):
        if(link.get('aria-invalid') != []):  
          if(link.get('aria-invalid') != 'true'):
            counter+=1  
            aria_Failed=counter                        
      print('Number of Failed Guideline for ErrorMessage:', aria_Failed)

      aria_totalCount=aria_Passed+aria_Failed
      print('The total count of checked for Aria:', aria_totalCount)

      if(aria_Failed<=0 and aria_Passed>=1):
        print('Pass: Guideline 3.3.1 Error Identification; Webpage has properly defined Error Identification function')
        Pcounter22=1; Fcounter22=0; NTcounter22=0; NDcounter22=0
        PLevelA11=1; FLevelA11=0; NTLevelA11=0; NDLevelA11=0
        VLevelA11=1; ADLevelA11=0; ETLevelA11=0

        PVisionImpairment22=0; FVisionImpairment22=0; NDVisionImpairment22=0; NTVisionImpairment22=0      
        PHearingDifficulty22=0; FHearingDifficulty22=0; NDHearingDifficulty22=0; NTHearingDifficulty22=0 
        PCognitiveDisability22=1; FCognitiveDisability22=0; NDCognitiveDisability22=0; NTCognitiveDisability22=0 
        PMotionDisability22=0; FMotionDisability22=0; NDMotionDisability22=0; NTMotionDisability22=0
        PLearningDisability22=1; FLearningDisability22=0; NDLearningDisability22=0; NTLearningDisability22=0
        
        Frame25=Frame(main_fm, bg='white', width=380, height=25) 
        Frame25.place(x=10, y=705, width=380, height=25)
        Lable25=Label(Frame25, text='Sc  (3.3.1) Error Identification', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable25.grid(row=0, column=0)
        Framee25=Frame(main_fm, bg='white', width=110, height=25)
        Framee25.place(x=400, y=705, width=110, height=25)
        Lablee25=Label(Framee25, text=aria_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee25.grid(row=0, column=0) 
        Frameee25=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee25.place(x=530, y=705, width=480, height=25)
        Lableee25=Label(Frameee25, text='Webpage has Properly Defined Error Identification Function', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee25.grid(row=0, column=0) 
        Frameeee25=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee25.place(x=1030, y=705, width=130, height=25) 
        Lableeee25=Label(Frameeee25, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee25.grid(row=0, column=0) 
        Frameeeee25=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee25.place(x=1180, y=705, width=80, height=25)
        Lableeeee25=Label(Frameeeee25, text=aria_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee25.grid(row=0, column=0)
        Frameeeeee25=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee25.place(x=1280, y=705, width=150, height=25)
        Lableeeeee25=Label(Frameeeeee25, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee25.grid(row=0, column=0)
        Frameeeeeee25=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee25.place(x=1450, y=705, width=210, height=25)
        Lableeeeeee25=Label(Frameeeeeee25, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee25.grid(row=0, column=0)
        Frameeeeeeee25=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee25.place(x=1680, y=705, width=230, height=25)   
        Lableeeeeeee25=Label(Frameeeeeeee25, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee25.grid(row=0, column=0)
      elif(aria_Failed>0):
        print('Fail: Guideline 3.3.1 Error Identification; Webpage Error Identification function is not properly defined')
        Fcounter22=1; Pcounter22=0; NTcounter22=0; NDcounter22=0
        FLevelA11=1; PLevelA11=0; NTLevelA11=0; NDLevelA11=0
        ADLevelA11=1; VLevelA11=0; ETLevelA11=0

        FVisionImpairment22=0; PVisionImpairment22=0; NDVisionImpairment22=0; NTVisionImpairment22=0      
        FHearingDifficulty22=0; PHearingDifficulty22=0; NDHearingDifficulty22=0; NTHearingDifficulty22=0 
        FCognitiveDisability22=1; PCognitiveDisability22=0; NDCognitiveDisability22=0; NTCognitiveDisability22=0 
        FMotionDisability22=0; PMotionDisability22=0; NDMotionDisability22=0; NTMotionDisability22=0
        FLearningDisability22=1; PLearningDisability22=0; NDLearningDisability22=0; NTLearningDisability22=0
        
        Frame25=Frame(main_fm, bg='white', width=380, height=25) 
        Frame25.place(x=10, y=705, width=380, height=25)
        Lable25=Label(Frame25, text='Sc (3.3.1) Error Identification', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable25.grid(row=0, column=0) 
        Framee25=Frame(main_fm, bg='white', width=110, height=25)
        Framee25.place(x=400, y=705, width=110, height=25)
        Lablee25=Label(Framee25, text=aria_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee25.grid(row=0, column=0) 
        Frameee25=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee25.place(x=530, y=705, width=480, height=25)
        Lableee25=Label(Frameee25, text='Webpage Error Identification Function is not Properly Defined', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee25.grid(row=0, column=0)
        Frameeee25=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee25.place(x=1030, y=705, width=130, height=25) 
        Lableeee25=Label(Frameeee25,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee25.grid(row=0, column=0) 
        Frameeeee25=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee25.place(x=1180, y=705, width=80, height=25)
        Lableeeee25=Label(Frameeeee25, text=aria_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee25.grid(row=0, column=0)
        Frameeeeee25=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee25.place(x=1280, y=705, width=150, height=25)
        Lableeeeee25=Label(Frameeeeee25, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee25.grid(row=0, column=0)
        Frameeeeeee25=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee25.place(x=1450, y=705, width=210, height=25)
        Lableeeeeee25=Label(Frameeeeeee25, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee25.grid(row=0, column=0)
        Frameeeeeeee25=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee25.place(x=1680, y=705, width=230, height=25)   
        Lableeeeeeee25=Label(Frameeeeeeee25, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee25.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.3.1 Error Identification; Webpage has no Error Identification function')
        NDcounter22=1; Pcounter22=0; Fcounter22=0; NTcounter22=0
        NDLevelA11=1; PLevelA11=0; FLevelA11=0; NTLevelA11=0
        VLevelA11=1; ADLevelA11=0; ETLevelA11=0

        NDVisionImpairment22=0; PVisionImpairment22=0; FVisionImpairment22=0; NTVisionImpairment22=0     
        NDHearingDifficulty22=0; PHearingDifficulty22=0; FHearingDifficulty22=0; NTHearingDifficulty22=0 
        NDCognitiveDisability22=1; PCognitiveDisability22=0; FCognitiveDisability22=0; NTCognitiveDisability22=0 
        NDMotionDisability22=0; PMotionDisability22=0; FMotionDisability22=0; NTMotionDisability22=0
        NDLearningDisability22=1; PLearningDisability22=0; FLearningDisability22=0; NTLearningDisability22=0
        
        Frame25=Frame(main_fm, bg='white', width=380, height=25) 
        Frame25.place(x=10, y=705, width=380, height=25)
        Lable25=Label(Frame25, text='Sc (3.3.1) Error Identification', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable25.grid(row=0, column=0) 
        Framee25=Frame(main_fm, bg='white', width=110, height=25)
        Framee25.place(x=400, y=705, width=110, height=25)
        Lablee25=Label(Framee25, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee25.grid(row=0, column=0) 
        Frameee25=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee25.place(x=530, y=705, width=480, height=25)
        Lableee25=Label(Frameee25, text='Webpage has no Error Identification Function', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee25.grid(row=0, column=0)
        Frameeee25=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee25.place(x=1030, y=705, width=130, height=25) 
        Lableeee25=Label(Frameeee25, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee25.grid(row=0, column=0) 
        Frameeeee25=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee25.place(x=1180, y=705, width=80, height=25)
        Lableeeee25=Label(Frameeeee25, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee25.grid(row=0, column=0)
        Frameeeeee25=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee25.place(x=1280, y=705, width=150, height=25)
        Lableeeeee25=Label(Frameeeeee25, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee25.grid(row=0, column=0)
        Frameeeeeee25=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee25.place(x=1450, y=705, width=210, height=25)
        Lableeeeeee25=Label(Frameeeeeee25, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee25.grid(row=0, column=0)
        Frameeeeeeee25=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee25.place(x=1680, y=705, width=230, height=25)   
        Lableeeeeeee25=Label(Frameeeeeeee25, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee25.grid(row=0, column=0)


            ####===========================Guideline 3.3.2 (level A)====================================####

      counter=0
      labelText_Failed=0
      for link in soup.find_all('label'):
        lableText=link.text
        #print(link.text)
        if(lableText == ''):
          counter+=1  
          labelText_Failed=counter
      print('Number of Failed Guideline for Label Name:', labelText_Failed)

      counter=0
      labelText_Passed=0
      for link in soup.find_all('label'):
        lableText=link.text
        #print(link.text)
        if(lableText != ''):
          counter+=1  
          labelText_Passed=counter
      print('Number of Passed Guideline for Label Name:', labelText_Passed)

      lebelText_totalCount=labelText_Passed + labelText_Failed
      print('The total count of checked for Lebel:', lebelText_totalCount)

      if(labelText_Failed<=0 and labelText_Passed>=1):
        print('Pass: Guideline 3.3.2 Labels or Instructions; Labels/Instructions has Specified')
        Frame26=Frame(main_fm, bg='white', width=380, height=25) 
        Frame26.place(x=10, y=730, width=380, height=25)
        Lable26=Label(Frame26, text='Sc (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable26.grid(row=0, column=0)
        Framee26=Frame(main_fm, bg='white', width=110, height=25)
        Framee26.place(x=400, y=730, width=110, height=25)
        Lablee26=Label(Framee26, text=lebelText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee26.grid(row=0, column=0)
        Frameee26=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee26.place(x=530, y=730, width=480, height=25)
        Lableee26=Label(Frameee26, text='Labels/Instructions has Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee26.grid(row=0, column=0) 
        Frameeee26=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee26.place(x=1030, y=730, width=130, height=25) 
        Lableeee26=Label(Frameeee26, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee26.grid(row=0, column=0) 
        Frameeeee26=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee26.place(x=1180, y=730, width=80, height=25)
        Lableeeee26=Label(Frameeeee26, text=labelText_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee26.grid(row=0, column=0)
        Frameeeeee26=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee26.place(x=1280, y=730, width=150, height=25)
        Lableeeeee26=Label(Frameeeeee26, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee26.grid(row=0, column=0)
        Frameeeeeee26=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee26.place(x=1450, y=730, width=210, height=25)
        Lableeeeeee26=Label(Frameeeeeee26, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee26.grid(row=0, column=0)
        Frameeeeeeee26=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee26.place(x=1680, y=730, width=230, height=25)   
        Lableeeeeeee26=Label(Frameeeeeeee26, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee26.grid(row=0, column=0)
      elif(labelText_Failed>0): 
        print('Fail: Guideline 3.3.2 Labels or Instructions; Labels/Instructions are not Specified')
        Frame26=Frame(main_fm, bg='white', width=380, height=25) 
        Frame26.place(x=10, y=730, width=380, height=25)
        Lable26=Label(Frame26, text='Sc (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable26.grid(row=0, column=0) 
        Framee26=Frame(main_fm, bg='white', width=110, height=25)
        Framee26.place(x=400, y=730, width=110, height=25)
        Lablee26=Label(Framee26, text=lebelText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee26.grid(row=0, column=0)
        Frameee26=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee26.place(x=530, y=730, width=480, height=25)
        Lableee26=Label(Frameee26, text='Labels/Instructions are not Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee26.grid(row=0, column=0)
        Frameeee26=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee26.place(x=1030, y=730, width=130, height=25) 
        Lableeee26=Label(Frameeee26,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee26.grid(row=0, column=0) 
        Frameeeee26=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee26.place(x=1180, y=730, width=80, height=25)
        Lableeeee26=Label(Frameeeee26, text=labelText_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee26.grid(row=0, column=0)
        Frameeeeee26=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee26.place(x=1280, y=730, width=150, height=25)
        Lableeeeee26=Label(Frameeeeee26, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee26.grid(row=0, column=0)
        Frameeeeeee26=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee26.place(x=1450, y=730, width=210, height=25)
        Lableeeeeee26=Label(Frameeeeeee26, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee26.grid(row=0, column=0)
        Frameeeeeeee26=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee26.place(x=1680, y=730, width=230, height=25)   
        Lableeeeeeee26=Label(Frameeeeeeee26, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee26.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.3.2 Labels or Instructions; Webpage has no Specified Levels/Instructions')
        Frame26=Frame(main_fm, bg='white', width=380, height=25) 
        Frame26.place(x=10, y=730, width=380, height=25)
        Lable26=Label(Frame26, text='Sc (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable26.grid(row=0, column=0) 
        Framee26=Frame(main_fm, bg='white', width=110, height=25)
        Framee26.place(x=400, y=730, width=110, height=25)
        Lablee26=Label(Framee26, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee26.grid(row=0, column=0)
        Frameee26=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee26.place(x=530, y=730, width=480, height=25)
        Lableee26=Label(Frameee26, text='Webpage has no Specified Labels/Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee26.grid(row=0, column=0) 
        Frameeee26=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee26.place(x=1030, y=730, width=130, height=25) 
        Lableeee26=Label(Frameeee26, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee26.grid(row=0, column=0) 
        Frameeeee26=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee26.place(x=1180, y=730, width=80, height=25)
        Lableeeee26=Label(Frameeeee26, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee26.grid(row=0, column=0)
        Frameeeeee26=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee26.place(x=1280, y=730, width=150, height=25)
        Lableeeeee26=Label(Frameeeeee26, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee26.grid(row=0, column=0)
        Frameeeeeee26=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee26.place(x=1450, y=730, width=210, height=25)
        Lableeeeeee26=Label(Frameeeeeee26, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee26.grid(row=0, column=0)
        Frameeeeeeee26=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee26.place(x=1680, y=730, width=230, height=25)   
        Lableeeeeeee26=Label(Frameeeeeeee26, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee26.grid(row=0, column=0)



      ####================================####
    
      counter=0
      placeholdersSearch_Passed=0
      for link in soup.find_all('input'):
        if(link.get('type') == 'search'):
          if(link.get('placeholder') != ''):
            counter+=1  
            placeholdersSearch_Passed=counter                        
      print('Number of Passed Guideline for Placeholder:', placeholdersSearch_Passed)

      counter=0
      placeholdersSearch_Failed=0
      for link in soup.find_all('input'):
        if(link.get('type') == 'search'):
          if(link.get('placeholder') != ''):
            counter+=1  
            placeholdersSearch_Failed=counter                        
      print('Number of Failed Guideline for Placeholder:',placeholdersSearch_Failed)

      placeholdersSearch_totalCount=placeholdersSearch_Passed+placeholdersSearch_Failed
      print('The total count of checked for Placeholder:', placeholdersSearch_totalCount)

      if(placeholdersSearch_Failed<=0 and placeholdersSearch_Passed>=1):
        print('Pass: Guideline 3.3.2 Labels or Instructions; Search Field has Labels or Instructions')  
        Frame27=Frame(main_fm, bg='white', width=380, height=25) 
        Frame27.place(x=10, y=755, width=380, height=25)
        Lable27=Label(Frame27, text='Sc  (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable27.grid(row=0, column=0) 
        Framee27=Frame(main_fm, bg='white', width=110, height=25)
        Framee27.place(x=400, y=755, width=110, height=25)
        Lablee27=Label(Framee27, text=placeholdersSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee27.grid(row=0, column=0) 
        Frameee27=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee27.place(x=530, y=755, width=480, height=25)
        Lableee27=Label(Frameee27, text='Search Field has Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee27.grid(row=0, column=0) 
        Frameeee27=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee27.place(x=1030, y=755, width=130, height=25) 
        Lableeee27=Label(Frameeee27, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee27.grid(row=0, column=0) 
        Frameeeee27=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee27.place(x=1180, y=755, width=80, height=25)
        Lableeeee27=Label(Frameeeee27, text=placeholdersSearch_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee27.grid(row=0, column=0)
        Frameeeeee27=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee27.place(x=1280, y=755, width=150, height=25)
        Lableeeeee27=Label(Frameeeeee27, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee27.grid(row=0, column=0)
        Frameeeeeee27=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee27.place(x=1450, y=755, width=210, height=25)
        Lableeeeeee27=Label(Frameeeeeee27, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee27.grid(row=0, column=0)
        Frameeeeeeee27=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee27.place(x=1680, y=755, width=230, height=25)   
        Lableeeeeeee27=Label(Frameeeeeeee27, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee27.grid(row=0, column=0)
        #break
      elif(placeholdersSearch_Failed>0):
        print('Fail: Guideline 3.3.2 Labels or Instructions; Search Field has no Labels or Instructions')
        Frame27=Frame(main_fm, bg='white', width=380, height=25) 
        Frame27.place(x=10, y=755, width=380, height=25)
        Lable27=Label(Frame27, text='Sc (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable27.grid(row=0, column=0) 
        Framee27=Frame(main_fm, bg='white', width=110, height=25)
        Framee27.place(x=400, y=755, width=110, height=25)
        Lablee27=Label(Framee27, text=placeholdersSearch_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee27.grid(row=0, column=0) 
        Frameee27=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee27.place(x=530, y=755, width=480, height=25)
        Lableee27=Label(Frameee27, text='Search Field has no Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee27.grid(row=0, column=0)
        Frameeee27=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee27.place(x=1030, y=755, width=130, height=25) 
        Lableeee27=Label(Frameeee27,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee27.grid(row=0, column=0) 
        Frameeeee27=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee27.place(x=1180, y=755, width=80, height=25)
        Lableeeee27=Label(Frameeeee27, text=placeholdersSearch_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee27.grid(row=0, column=0)
        Frameeeeee27=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee27.place(x=1280, y=755, width=150, height=25)
        Lableeeeee27=Label(Frameeeeee27, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee27.grid(row=0, column=0)
        Frameeeeeee27=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee27.place(x=1450, y=755, width=210, height=25)
        Lableeeeeee27=Label(Frameeeeeee27, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee27.grid(row=0, column=0)
        Frameeeeeeee27=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee27.place(x=1680, y=755, width=230, height=25)   
        Lableeeeeeee27=Label(Frameeeeeeee27, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee27.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.3.2 Labels or Instructions; Webpage has no Search Field')
        Frame27=Frame(main_fm, bg='white', width=380, height=25) 
        Frame27.place(x=10, y=755, width=380, height=25)
        Lable27=Label(Frame27, text='Sc (3.3.2) Labels or Instructions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable27.grid(row=0, column=0) 
        Framee27=Frame(main_fm, bg='white', width=110, height=25)
        Framee27.place(x=400, y=755, width=110, height=25)
        Lablee27=Label(Framee27, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee27.grid(row=0, column=0) 
        Frameee27=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee27.place(x=530, y=755, width=480, height=25)
        Lableee27=Label(Frameee27, text='Webpage has no Search Field', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee27.grid(row=0, column=0) 
        Frameeee27=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee27.place(x=1030, y=755, width=130, height=25) 
        Lableeee27=Label(Frameeee27, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee27.grid(row=0, column=0) 
        Frameeeee27=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee27.place(x=1180, y=755, width=80, height=25)
        Lableeeee27=Label(Frameeeee27, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee27.grid(row=0, column=0)
        Frameeeeee27=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee27.place(x=1280, y=755, width=150, height=25)
        Lableeeeee27=Label(Frameeeeee27, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee27.grid(row=0, column=0)
        Frameeeeeee27=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee27.place(x=1450, y=755, width=210, height=25)
        Lableeeeeee27=Label(Frameeeeeee27, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee27.grid(row=0, column=0)
        Frameeeeeeee27=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee27.place(x=1680, y=755, width=230, height=25)   
        Lableeeeeeee27=Label(Frameeeeeeee27, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee27.grid(row=0, column=0)


      if((labelText_Failed<=0 and labelText_Passed>=1) and (placeholder_Failed<=0 and placeholder_Passed>=1)):
        print('Pass: Guideline 3.3.2 Labels or Instructions; Labels/Instruction has Specified')
        Pcounter23=1; Fcounter23=0; NTcounter23=0; NDcounter23=0
        PLevelA12=1; FLevelA12=0; NTLevelA12=0; NDLevelA12=0
        VLevelA12=1; ADLevelA12=0; ETLevelA12=0

        PVisionImpairment23=0; FVisionImpairment23=0; NDVisionImpairment23=0; NTVisionImpairment23=0      
        PHearingDifficulty23=0; FHearingDifficulty23=0; NDHearingDifficulty23=0; NTHearingDifficulty23=0 
        PCognitiveDisability23=1; FCognitiveDisability23=0; NDCognitiveDisability23=0; NTCognitiveDisability23=0 
        PMotionDisability23=0; FMotionDisability23=0; NDMotionDisability23=0; NTMotionDisability23=0
        PLearningDisability23=1; FLearningDisability23=0; NDLearningDisability23=0; NTLearningDisability23=0
      elif ((labelText_Failed>0 and placeholder_Failed>0) or (labelText_Failed>0 or placeholder_Failed>0)): 
        print('Fail: Guideline 3.3.2 Labels or Instructions; Labels/Instructions are not Specified')
        Fcounter23=1; Pcounter23=0; NTcounter23=0; NDcounter23=0
        FLevelA12=1; PLevelA12=0; NTLevelA12=0; NDLevelA12=0
        ADLevelA12=1; VLevelA12=0; ETLevelA12=0

        FVisionImpairment23=0; PVisionImpairment23=0; NDVisionImpairment23=0; NTVisionImpairment23=0      
        FHearingDifficulty23=0; PHearingDifficulty23=0; NDHearingDifficulty23=0; NTHearingDifficulty23=0 
        FCognitiveDisability23=1; PCognitiveDisability23=0; NDCognitiveDisability23=0; NTCognitiveDisability23=0 
        FMotionDisability23=1; PMotionDisability23=0; NDMotionDisability23=0; NTMotionDisability23=0
        FLearningDisability23=0; PLearningDisability23=0; NDLearningDisability23=0; NTLearningDisability23=0
      else:
        print('Not Detected: Guideline 3.3.2 Labels or Instructions; Webpage has no Specified Levels/Instructions')
        NDcounter23=1; Pcounter23=0; Fcounter23=0; NTcounter23=0
        NDLevelA12=1; PLevelA12=0; FLevelA12=0; NTLevelA12=0
        VLevelA12=1; ADLevelA12=0; ETLevelA12=0

        NDVisionImpairment23=0; PVisionImpairment23=0; FVisionImpairment23=0; NTVisionImpairment23=0     
        NDHearingDifficulty23=0; PHearingDifficulty23=0; FHearingDifficulty23=0; NTHearingDifficulty23=0 
        NDCognitiveDisability23=1; PCognitiveDisability23=0; FCognitiveDisability23=0; NTCognitiveDisability23=0 
        NDMotionDisability23=1; PMotionDisability23=0; FMotionDisability23=0; NTMotionDisability23=0
        NDLearningDisability23=0; PLearningDisability23=0; FLearningDisability23=0; NTLearningDisability23=0

            ####===========================Guideline 3.3.3 (level AA)====================================####

      global ariaInvalid_totalCount

      ErrorSuggestion_Object=1

      counter=0
      ariaInvalid_Passed=0
      for link in soup.find_all('input'):
        if(link.get('aria-invalid') != []):     
          if(link.get('aria-invalid') == 'true'):
            if(link.get('span') != ' '):
              counter+=1  
              ariaInvalid_Passed=counter                        
      print('Number of Passed Guideline for Aria Invalid:', ariaInvalid_Passed)

      counter=0
      ariaInvalid_Failed=0
      for link in soup.find_all('input'):
        if(link.get('aria-invalid') != []):     
          if(link.get('aria-invalid') == 'true'):
            if(link.get('span') == ' '):
              counter+=1  
              ariaInvalid_Failed=counter                        
      print('Number of Failed Guideline for Aria Invalid:', ariaInvalid_Failed)

      ariaInvalid_totalCount=ariaInvalid_Passed+ariaInvalid_Failed
      print('The total count of checked for Aria Invalid:', ariaInvalid_totalCount)
      
      if(ariaInvalid_Failed<=0 and ariaInvalid_Passed>=1):
        print('Pass: Guideline 3.3.3 Error Suggestion; Webpage has properly defined Error Suggestions')
        Pcounter24=1; Fcounter24=0; NTcounter24=0; NDcounter24=0
        PLevelAA6=1; FLevelAA6=0; NTLevelAA6=0; NDLevelAA6=0
        VLevelAA6=1; ADLevelAA6=0; ETLevelAA6=0

        PVisionImpairment24=1; FVisionImpairment24=0; NDVisionImpairment24=0; NTVisionImpairment24=0      
        PHearingDifficulty24=0; FHearingDifficulty24=0; NDHearingDifficulty24=0; NTHearingDifficulty24=0 
        PCognitiveDisability24=0; FCognitiveDisability24=0; NDCognitiveDisability24=0; NTCognitiveDisability24=0 
        PMotionDisability24=1; FMotionDisability24=0; NDMotionDisability24=0; NTMotionDisability24=0
        PLearningDisability24=1; FLearningDisability24=0; NDLearningDisability24=0; NTLearningDisability24=0
        
        Frame28=Frame(main_fm, bg='white', width=380, height=25) 
        Frame28.place(x=10, y=780, width=380, height=25)
        Lable28=Label(Frame28, text='Sc  (3.3.3) Error Suggestion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable28.grid(row=0, column=0) 
        Framee28=Frame(main_fm, bg='white', width=110, height=25)
        Framee28.place(x=400, y=780, width=110, height=25)
        Lablee28=Label(Framee28, text=ariaInvalid_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee28.grid(row=0, column=0) 
        Frameee28=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee28.place(x=530, y=780, width=480, height=25)
        Lableee28=Label(Frameee28, text='Webpage has Properly Defined Error Suggestions', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee28.grid(row=0, column=0)
        Frameeee28=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee28.place(x=1030, y=780, width=130, height=25) 
        Lableeee28=Label(Frameeee28, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee28.grid(row=0, column=0) 
        Frameeeee28=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee28.place(x=1180, y=780, width=80, height=25)
        Lableeeee28=Label(Frameeeee28, text=ariaInvalid_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee28.grid(row=0, column=0)
        Frameeeeee28=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee28.place(x=1280, y=780, width=150, height=25)
        Lableeeeee28=Label(Frameeeeee28, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee28.grid(row=0, column=0)
        Frameeeeeee28=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee28.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee28=Label(Frameeeeeee28, text='Vision/Motion/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee28.grid(row=0, column=0)
        Frameeeeeeee28=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee28.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee28=Label(Frameeeeeeee28, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee28.grid(row=0, column=0)
      elif(ariaInvalid_Failed>0):
        print('Fail: Guideline 3.3.3 Error Suggestion; Webpage Error Suggestion Function is not Properly Defined')
        Fcounter24=1; Pcounter24=0; NTcounter24=0; NDcounter24=0
        FLevelAA6=1; PLevelAA6=0; NTLevelAA6=0; NDLevelAA6=0
        ADLevelAA6=1; VLevelAA6=0; ETLevelAA6=0

        FVisionImpairment24=1; PVisionImpairment24=0; NDVisionImpairment24=0; NTVisionImpairment24=0      
        FHearingDifficulty24=0; PHearingDifficulty24=0; NDHearingDifficulty24=0; NTHearingDifficulty24=0 
        FCognitiveDisability24=0; PCognitiveDisability24=0; NDCognitiveDisability24=0; NTCognitiveDisability24=0 
        FMotionDisability24=1; PMotionDisability24=0; NDMotionDisability24=0; NTMotionDisability24=0
        FLearningDisability24=1; PLearningDisability24=0; NDLearningDisability24=0; NTLearningDisability24=0
        
        Frame28=Frame(main_fm, bg='white', width=380, height=25) 
        Frame28.place(x=10, y=780, width=380, height=25)
        Lable28=Label(Frame28, text='Sc (3.3.3) Error Suggestion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable28.grid(row=0, column=0) 
        Framee28=Frame(main_fm, bg='white', width=110, height=25)
        Framee28.place(x=400, y=780, width=110, height=25)
        Lablee28=Label(Framee28, text=ariaInvalid_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee28.grid(row=0, column=0) 
        Frameee28=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee28.place(x=530, y=780, width=480, height=25)
        Lableee28=Label(Frameee28, text='Webpage Error Suggestion Function is not Properly Defined', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee28.grid(row=0, column=0)
        Frameeee28=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee28.place(x=1030, y=780, width=130, height=25) 
        Lableeee28=Label(Frameeee28,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee28.grid(row=0, column=0) 
        Frameeeee28=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee28.place(x=1180, y=780, width=80, height=25)
        Lableeeee28=Label(Frameeeee28, text=ariaInvalid_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee28.grid(row=0, column=0)
        Frameeeeee28=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee28.place(x=1280, y=780, width=150, height=25)
        Lableeeeee28=Label(Frameeeeee28, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee28.grid(row=0, column=0)
        Frameeeeeee28=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee28.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee28=Label(Frameeeeeee28, text='Vision/Motion/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee28.grid(row=0, column=0)
        Frameeeeeeee28=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee28.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee28=Label(Frameeeeeeee28, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee28.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.3.3 Error Suggestion; Webpage has no Error Suggestion function')
        NDcounter24=1; Pcounter24=0; Fcounter24=0; NTcounter24=0
        NDLevelAA6=1; PLevelAA6=0; FLevelAA6=0; NTLevelAA6=0
        VLevelAA6=1; ADLevelAA6=0; ETLevelAA6=0

        NDVisionImpairment24=1; PVisionImpairment24=0; FVisionImpairment24=0; NTVisionImpairment24=0    
        NDHearingDifficulty24=0; PHearingDifficulty24=0; FHearingDifficulty24=0; NTHearingDifficulty24=0 
        NDCognitiveDisability24=0; PCognitiveDisability24=0; FCognitiveDisability24=0; NTCognitiveDisability24=0 
        NDMotionDisability24=1; PMotionDisability24=0; FMotionDisability24=0; NTMotionDisability24=0
        NDLearningDisability24=1; PLearningDisability24=0; FLearningDisability24=0; NTLearningDisability24=0
        
        Frame28=Frame(main_fm, bg='white', width=380, height=25) 
        Frame28.place(x=10, y=780, width=380, height=25)
        Lable28=Label(Frame28, text='Sc (3.3.3) Error Suggestion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable28.grid(row=0, column=0) 
        Framee28=Frame(main_fm, bg='white', width=110, height=25)
        Framee28.place(x=400, y=780, width=110, height=25)
        Lablee28=Label(Framee28, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee28.grid(row=0, column=0)
        Frameee28=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee28.place(x=530, y=780, width=480, height=25)
        Lableee28=Label(Frameee28, text='Webpage has no Error Suggestion Function', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee28.grid(row=0, column=0)
        Frameeee28=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee28.place(x=1030, y=780, width=130, height=25) 
        Lableeee28=Label(Frameeee28, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee28.grid(row=0, column=0) 
        Frameeeee28=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee28.place(x=1180, y=780, width=80, height=25)
        Lableeeee28=Label(Frameeeee28, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee28.grid(row=0, column=0)
        Frameeeeee28=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee28.place(x=1280, y=780, width=150, height=25)
        Lableeeeee28=Label(Frameeeeee28, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee28.grid(row=0, column=0)
        Frameeeeeee28=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee28.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee28=Label(Frameeeeeee28, text='Vision/Motion/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee28.grid(row=0, column=0)
        Frameeeeeeee28=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee28.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee28=Label(Frameeeeeeee28, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee28.grid(row=0, column=0)


            ####===========================Guideline 3.3.5 (level AAA)====================================####

      print('Not Tested: Guideline 3.3.5 Help; Helping Suggestions of Context sensitive content is not Tested')
      NTcounter25=1; Pcounter25=0; Fcounter25=0; NDcounter25=0
      NTLevelAAA7=1; PLevelAAA7=0; FLevelAAA7=0; NDLevelAAA7=0
      ETLevelAAA7=1; VLevelAAA7=0; ADLevelAAA7=0

      NTVisionImpairment25=0; PVisionImpairment25=0; FVisionImpairment25=0; NDVisionImpairment25=0      
      NTHearingDifficulty25=0; PHearingDifficulty25=0; FHearingDifficulty25=0; NDHearingDifficulty25=0 
      NTCognitiveDisability25=1; PCognitiveDisability25=0; FCognitiveDisability25=0; NDCognitiveDisability25=0 
      NTMotionDisability25=0; PMotionDisability25=0; FMotionDisability25=0; NDMotionDisability25=0
      NTLearningDisability25=1; PLearningDisability25=0; FLearningDisability25=0; NDLearningDisability25=0
      
      Frame29=Frame(main_fm, bg='white', width=380, height=25)
      Frame29.place(x=10, y=805, width=380, height=25)
      Lable29=Label(Frame29, text='Sc (3.3.5) Help', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lable29.grid(row=0, column=0)
      Framee29=Frame(main_fm, bg='white', width=110, height=25)
      Framee29.place(x=400, y=805, width=110, height=25)
      Lablee29=Label(Framee29, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
      Lablee29.grid(row=0, column=0)
      Frameee29=Frame(main_fm, bg='white', width=480, height=25)   
      Frameee29.place(x=530, y=805, width=480, height=25)
      Lableee29=Label(Frameee29, text='Helping Suggestions of Context Sensitive Content is not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableee29.grid(row=0, column=0)
      Frameeee29=Frame(main_fm, bg='white', width=130, height=25)
      Frameeee29.place(x=1030, y=805, width=130, height=25)
      Lableeee29=Label(Frameeee29, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold'))
      Lableeee29.grid(row=0, column=0)
      Frameeeee29=Frame(main_fm, bg='white', width=80, height=25)
      Frameeeee29.place(x=1180, y=805, width=80, height=25)
      Lableeeee29=Label(Frameeeee29, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
      Lableeeee29.grid(row=0, column=0)
      Frameeeeee29=Frame(main_fm, bg='white', width=150, height=25)
      Frameeeeee29.place(x=1280, y=805, width=150, height=25)
      Lableeeeee29=Label(Frameeeeee29, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeee29.grid(row=0, column=0)
      Frameeeeeee29=Frame(main_fm, bg='white', width=210, height=25)
      Frameeeeeee29.place(x=1450, y=805, width=210, height=25)
      Lableeeeeee29=Label(Frameeeeeee29, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeee29.grid(row=0, column=0)
      Frameeeeeeee29=Frame(main_fm, bg='white', width=230, height=25)
      Frameeeeeeee29.place(x=1680, y=805, width=230, height=25)
      Lableeeeeeee29=Label(Frameeeeeeee29, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeeee29.grid(row=0, column=0)


        ####===========================Guideline 4.1.2 (level A)====================================####
      counter=0
      linkhref_Passed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('href' != ' '):
            counter+=1  
            linkhref_Passed=counter                        
      print('Number of Passed Guideline for Link href:', linkhref_Passed)

      counter=0
      linkhref_Failed=0
      link = soup.find_all('a')
      if(link !=[]):                    
        for item in link:
          if('href' == ' '):
            counter+=1  
            linkhref_Failed=counter                         
      print('Number of Failed Guideline for Link href:', linkhref_Failed)

      linkhref_totalCount=linkhref_Passed+linkhref_Failed
      print('The total count of checked for Link href:', linkhref_totalCount)

    #####-----------------------------------------------------###

      global linkTitleText_totalCount

      counter=0
      linkTitleText_Passed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('title' in item):
            linkTitleText=item.text
            #print(altText)
            if(linkTitleText != ' '):
              counter+=1  
              linkTitleText_Passed=counter                       
      print('Number of Passed Guideline for Title Text:', linkTitleText_Passed)

      counter=0
      linkTitleText_Failed=0
      link = soup.find_all('a')
      if(link !=[]):                   
        for item in link:
          if('title' in item):
            linkTitleText=item.text
            #print(altText)
            if(linkTitleText == ' '):
              counter+=1  
              linkTitleText_Failed=counter                       
      print('Number of Failed Guideline for Title Text:', linkTitleText_Failed)

      linkTitleText_totalCount=linkTitleText_Passed+linkTitleText_Failed
      print('The total count of checked for Link Title Text:', linkTitleText_totalCount)

      linkNameRoleValue_totalCount_Passed=link_Passed+linkhref_Passed+linkTitleText_Passed
      print('The total count of Passed guidelines for Link, href, title:', linkNameRoleValue_totalCount_Passed)

      linkNameRoleValue_totalCount_Failed=link_Failed+linkhref_Failed+linkTitleText_Failed
      print('The total count of Failed guidelines for Link, href, title:', linkNameRoleValue_totalCount_Failed)


      if((link_Failed<=0 and linkhref_Failed<=0 and linkTitleText_Failed<=0) and (link_Passed>=1 and linkhref_Passed>=1 and linkTitleText_Passed>=1)):
        print('Passed: Guideline 4.1.2 Name, Role, Value; All Links has Assigned Name, Role, Value') 
        Frame30=Frame(main_fm, bg='white', width=380, height=25)
        Frame30.place(x=10, y=830, width=380, height=25)
        Lable30=Label(Frame30, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable30.grid(row=0, column=0)
        Framee30=Frame(main_fm, bg='white', width=110, height=25)
        Framee30.place(x=400, y=830, width=110, height=25)
        Lablee30=Label(Framee30, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee30.grid(row=0, column=0)
        Frameee30=Frame(main_fm, bg='white', width=480, height=25)
        Frameee30.place(x=530, y=830, width=480, height=25)
        Lableee30=Label(Frameee30, text='All Links has Assigned Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee30.grid(row=0, column=0)
        Frameeee30=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee30.place(x=1030, y=830, width=130, height=25)
        Lableeee30=Label(Frameeee30, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee30.grid(row=0, column=0)
        Frameeeee30=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee30.place(x=1180, y=830, width=80, height=25)
        Lableeeee30=Label(Frameeeee30, text=linkNameRoleValue_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee30.grid(row=0, column=0)
        Frameeeeee30=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee30.place(x=1280, y=830, width=150, height=25)
        Lableeeeee30=Label(Frameeeeee30, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee30.grid(row=0, column=0)
        Frameeeeeee30=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee30.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee30=Label(Frameeeeeee30, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee30.grid(row=0, column=0)
        Frameeeeeeee30=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee30.place(x=1680, y=830, width=230, height=25)
        Lableeeeeeee30=Label(Frameeeeeeee30, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee30.grid(row=0, column=0)
      elif ((link_Failed>0 and linkhref_Failed>0 and linkTitleText_Failed>0) or (link_Failed>0 or linkhref_Failed>0 or linkTitleText_Failed>0)):
        print('Failed: Guideline 4.1.2 Name, Role, Value; Name, Role, Value of Some Links are Missing')
        Frame30=Frame(main_fm, bg='white', width=380, height=25)
        Frame30.place(x=10, y=830, width=380, height=25)
        Lable30=Label(Frame30, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable30.grid(row=0, column=0)
        Framee30=Frame(main_fm, bg='white', width=110, height=25)
        Framee30.place(x=400, y=830, width=110, height=25)
        Lablee30=Label(Framee30, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee30.grid(row=0, column=0)
        Frameee30=Frame(main_fm, bg='white', width=480, height=25)
        Frameee30.place(x=530, y=830, width=480, height=25)
        Lableee30=Label(Frameee30, text='Name, Role, Value of Some Links are Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee30.grid(row=0, column=0)
        Frameeee30=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee30.place(x=1030, y=830, width=130, height=25)
        Lableeee30=Label(Frameeee30, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee30.grid(row=0, column=0)
        Frameeeee30=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee30.place(x=1180, y=830, width=80, height=25)
        Lableeeee30=Label(Frameeeee30, text=linkNameRoleValue_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee30.grid(row=0, column=0)
        Frameeeeee30=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee30.place(x=1280, y=830, width=150, height=25)
        Lableeeeee30=Label(Frameeeeee30, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee30.grid(row=0, column=0)
        Frameeeeeee30=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee30.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee30=Label(Frameeeeeee30, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee30.grid(row=0, column=0)
        Frameeeeeeee30=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee30.place(x=1680, y=830, width=230, height=25)
        Lableeeeeeee30=Label(Frameeeeeeee30, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee30.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 4.1.2 Name, Role, Value; webpage has no Links')
        Frame30=Frame(main_fm, bg='white', width=380, height=25)
        Frame30.place(x=10, y=830, width=380, height=25)
        Lable30=Label(Frame30, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable30.grid(row=0, column=0)
        Framee30=Frame(main_fm, bg='white', width=110, height=25)
        Framee30.place(x=400, y=830, width=110, height=25)
        Lablee30=Label(Framee30, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee30.grid(row=0, column=0)
        Frameee30=Frame(main_fm, bg='white', width=480, height=25)
        Frameee30.place(x=530, y=830, width=480, height=25)
        Lableee30=Label(Frameee30, text='Webpage has no Links to Check their Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee30.grid(row=0, column=0)
        Frameeee30=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee30.place(x=1030, y=830, width=130, height=25)
        Lableeee30=Label(Frameeee30, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee30.grid(row=0, column=0)
        Frameeeee30=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee30.place(x=1180, y=830, width=80, height=25)
        Lableeeee30=Label(Frameeeee30, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee30.grid(row=0, column=0)
        Frameeeeee30=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee30.place(x=1280, y=830, width=150, height=25)
        Lableeeeee30=Label(Frameeeeee30, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee30.grid(row=0, column=0)
        Frameeeeeee30=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee30.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee30=Label(Frameeeeeee30, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee30.grid(row=0, column=0)
        Frameeeeeeee30=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee30.place(x=1680, y=830, width=230, height=25)
        Lableeeeeeee30=Label(Frameeeeeeee30, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee30.grid(row=0, column=0)


            ####====================================####

      global inputTypeAltTitle_totalCount

      counter=0
      inputType_Passed=0
      inputfield1 = soup.find_all('input')
      for item in inputfield1:
        if('type'!= ' '):
          counter+=1  
          inputType_Passed=counter                        
      print('Number of Passed Guideline for Input Type:', inputType_Passed)

      counter=0
      inputType_Failed=0
      inputfield1 = soup.find_all('input')
      for item in inputfield1:
        if('type'== ' '):
          counter+=1  
          inputType_Failed=counter                         
      print('Number of Failed Guideline for Input Type:', inputType_Failed)

      ###------------------### 

      counter=0
      inputAlt_Passed=0
      inputfield1 = soup.find_all('input')
      #if(inputfield1 !=[]):         
      for item in inputfield1:
        if('alt'!= ''):
          counter+=1  
          inputAlt_Passed=counter                        
      print('Number of Passed Guideline for Input ALT:', inputAlt_Passed)

      counter=0
      inputAlt_Failed=0
      inputfield1 = soup.find_all('input')
      #if(inputfield1 !=[]):       
      for item in inputfield1:
        if('alt'== ''):
          counter+=1  
          inputAlt_Failed=counter                         
      print('Number of Failed Guideline for Input ALT:', inputAlt_Failed)

      ###--------------###

      counter=0
      inputTitle_Passed=0
      inputfield1 = soup.find_all('input')
      #if(inputfield1 !=[]):         
      for item in inputfield1:
        if('title'!= ''):
          counter+=1  
          inputTitle_Passed=counter                        
      print('Number of Passed Guideline for Input Title:', inputTitle_Passed)

      counter=0
      inputTitle_Failed=0
      inputfield1 = soup.find_all('input')
      #if(inputfield1 !=[]):       
      for item in inputfield1:
        if('title'== ''):
          counter+=1  
          inputTitle_Failed=counter                         
      print('Number of Failed Guideline for Input Title:', inputTitle_Failed)

      inputTypeAltTitle_totalCount_Passed= inputType_Passed+inputAlt_Passed+inputTitle_Passed
      print('The total count of Passed for Input:', inputTypeAltTitle_totalCount_Passed)

      inputTypeAltTitle_totalCount_Failed= inputType_Failed+inputAlt_Failed+inputTitle_Failed
      print('The total count of Failed for Input:', inputTypeAltTitle_totalCount_Failed)

      inputTypeAltTitle_totalCount= inputType_Passed+inputType_Failed+inputAlt_Passed+inputAlt_Failed+inputTitle_Passed+inputTitle_Failed
      print('The total count of checked for Input:', inputTypeAltTitle_totalCount)


      if ((inputType_Failed>0 and inputAlt_Failed>0 and inputTitle_Failed>0) or (inputType_Failed>0 or inputAlt_Failed>0 or inputTitle_Failed>0)): 
        print('Fail: Guideline 4.1.2 Name, Role, Value; Input Name/Role/Value is Missing') 
        Frame31=Frame(main_fm, bg='white', width=380, height=25) 
        Frame31.place(x=10, y=855, width=380, height=25)
        Lable31=Label(Frame31, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable31.grid(row=0, column=0) 
        Framee31=Frame(main_fm, bg='white', width=110, height=25)
        Framee31.place(x=400, y=855, width=110, height=25)
        Lablee31=Label(Framee31, text=inputTypeAltTitle_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee31.grid(row=0, column=0)
        Frameee31=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee31.place(x=530, y=855, width=480, height=25)
        Lableee31=Label(Frameee31, text='Input Name/Role/Value is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee31.grid(row=0, column=0)
        Frameeee31=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee31.place(x=1030, y=855, width=130, height=25) 
        Lableeee31=Label(Frameeee31, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee31.grid(row=0, column=0) 
        Frameeeee31=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee31.place(x=1180, y=855, width=80, height=25)
        Lableeeee31=Label(Frameeeee31, text=inputTypeAltTitle_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee31.grid(row=0, column=0)
        Frameeeeee31=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee31.place(x=1280, y=855, width=150, height=25)
        Lableeeeee31=Label(Frameeeeee31, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee31.grid(row=0, column=0)
        Frameeeeeee31=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee31.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee31=Label(Frameeeeeee31, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee31.grid(row=0, column=0)
        Frameeeeeeee31=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee31.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee31=Label(Frameeeeeeee31, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee31.grid(row=0, column=0)
      elif((inputType_Passed>=1 and inputAlt_Passed>=1 and inputTitle_Passed>=1) and (inputType_Failed<=0 and inputAlt_Failed<=0 and inputTitle_Failed<=0)):
        print('Pass: Guideline 4.1.2 Name, Role, Value; Input Name, Role, Value is Specified')
        Frame31=Frame(main_fm, bg='white', width=380, height=25) 
        Frame31.place(x=10, y=855, width=380, height=25)
        Lable31=Label(Frame31, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable31.grid(row=0, column=0) 
        Framee31=Frame(main_fm, bg='white', width=110, height=25)
        Framee31.place(x=400, y=855, width=110, height=25)
        Lablee31=Label(Framee31, text=inputTypeAltTitle_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee31.grid(row=0, column=0)
        Frameee31=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee31.place(x=530, y=855, width=480, height=25)
        Lableee31=Label(Frameee31, text='Input Name, Role, Value is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee31.grid(row=0, column=0)
        Frameeee31=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee31.place(x=1030, y=855, width=130, height=25) 
        Lableeee31=Label(Frameeee31, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee31.grid(row=0, column=0) 
        Frameeeee31=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee31.place(x=1180, y=855, width=80, height=25)
        Lableeeee31=Label(Frameeeee31, text=inputTypeAltTitle_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee31.grid(row=0, column=0)
        Frameeeeee31=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee31.place(x=1280, y=855, width=150, height=25)
        Lableeeeee31=Label(Frameeeeee31, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee31.grid(row=0, column=0)
        Frameeeeeee31=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee31.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee31=Label(Frameeeeeee31, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee31.grid(row=0, column=0)
        Frameeeeeeee31=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee31.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee31=Label(Frameeeeeeee31, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee31.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 4.1.2 Name, Role, Value; Webpage has no Input')
        Frame31=Frame(main_fm, bg='white', width=380, height=25) 
        Frame31.place(x=10, y=855, width=380, height=25)
        Lable31=Label(Frame31, text='Sc (4.1.2) Name, Role, Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable31.grid(row=0, column=0) 
        Framee31=Frame(main_fm, bg='white', width=110, height=25)
        Framee31.place(x=400, y=855, width=110, height=25)
        Lablee31=Label(Framee31, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee31.grid(row=0, column=0)
        Frameee31=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee31.place(x=530, y=855, width=480, height=25)
        Lableee31=Label(Frameee31, text='Webpage has no Input to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee31.grid(row=0, column=0)
        Frameeee31=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee31.place(x=1030, y=855, width=130, height=25) 
        Lableeee31=Label(Frameeee31, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee31.grid(row=0, column=0) 
        Frameeeee31=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee31.place(x=1180, y=855, width=80, height=25)
        Lableeeee31=Label(Frameeeee31, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee31.grid(row=0, column=0)
        Frameeeeee31=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee31.place(x=1280, y=855, width=150, height=25)
        Lableeeeee31=Label(Frameeeeee31, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee31.grid(row=0, column=0)
        Frameeeeeee31=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee31.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee31=Label(Frameeeeeee31, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee31.grid(row=0, column=0)
        Frameeeeeeee31=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee31.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee31=Label(Frameeeeeeee31, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee31.grid(row=0, column=0)



      if (((link_Failed<=0 and linkhref_Failed<=0 and linkTitleText_Failed<=0) and (link_Passed>=1 and linkhref_Passed>=1 and linkTitleText_Passed>=1)) and ((inputType_Failed<=0 and inputAlt_Failed<=0 and inputTitle_Failed<=0) and (inputType_Passed>=1 and inputAlt_Passed>=1 and inputTitle_Passed>=1))):
        print('Passed: Guideline 4.1.2 Name, Role, Value; All Links has Assigned Name, Role, Value')
        Pcounter26=1; Fcounter26=0; NTcounter26=0; NDcounter26=0
        PLevelA13=1; FLevelA13=0; NTLevelA13=0; NDLevelA13=0
        VLevelA13=1; ADLevelA13=0; ETLevelA13=0

        PVisionImpairment26=1; FVisionImpairment26=0; NDVisionImpairment26=0; NTVisionImpairment26=0    
        PHearingDifficulty26=0; FHearingDifficulty26=0; NDHearingDifficulty26=0; NTHearingDifficulty26=0 
        PCognitiveDisability26=0; FCognitiveDisability26=0; NDCognitiveDisability26=0; NTCognitiveDisability26=0
        PMotionDisability26=0; FMotionDisability26=0; NDMotionDisability26=0; NTMotionDisability26=0
        PLearningDisability26=0; FLearningDisability26=0; NDLearningDisability26=0; NTLearningDisability26=0

      elif (((link_Failed>0 and linkhref_Failed>0 and linkTitleText_Failed>0) or (link_Failed>0 or linkhref_Failed>0 or linkTitleText_Failed>0)) and ((inputType_Failed>0 and inputAlt_Failed>0 and inputTitle_Failed>0) or (inputType_Failed>0 or inputAlt_Failed>0 or inputTitle_Failed>0))):
        print('Failed: Guideline 4.1.2 Name, Role, Value; Name, Role, Value of Some Links are Missing')
        Fcounter26=1; Pcounter26=0; NTcounter26=0; NDcounter26=0
        FLevelA13=1; PLevelA13=0; NTLevelA13=0; NDLevelA13=0
        ADLevelA13=1; VLevelA13=0; ETLevelA13=0

        FVisionImpairment26=1; PVisionImpairment26=0; NDVisionImpairment26=0; NTVisionImpairment26=0    
        FHearingDifficulty26=0; PHearingDifficulty26=0; NDHearingDifficulty26=0; NTHearingDifficulty26=0 
        FCognitiveDisability26=0; PCognitiveDisability26=0; NDCognitiveDisability26=0; NTCognitiveDisability26=0
        FMotionDisability26=0; PMotionDisability26=0; NDMotionDisability26=0; NTMotionDisability26=0
        FLearningDisability26=0; PLearningDisability26=0; NDLearningDisability26=0; NTLearningDisability26=0

      else:
        print('Not Detected: Guideline 4.1.2 Name, Role, Value; webpage has no Links')
        NDcounter26=1; Pcounter26=0; Fcounter26=0; NTcounter26=0
        NDLevelA13=1; PLevelA13=0; FLevelA13=0; NTLevelA13=0
        VLevelA13=1; ADLevelA13=0; ETLevelA13=0

        NDVisionImpairment26=1; PVisionImpairment26=0; FVisionImpairment26=0; NTVisionImpairment26=0     
        NDHearingDifficulty26=0; PHearingDifficulty26=0; FHearingDifficulty26=0; NTHearingDifficulty26=0 
        NDCognitiveDisability26=0; PCognitiveDisability26=0; FCognitiveDisability26=0; NTCognitiveDisability26=0
        NDMotionDisability26=0; PMotionDisability26=0; FMotionDisability26=0; NTMotionDisability26=0
        NDLearningDisability26=0; PLearningDisability26=0; FLearningDisability26=0; NTLearningDisability26=0


             ####===========================Guideline 4.1.3 (level AA)====================================####650

      global messageBoxSearchField_totalCount

      MessagesBox_Object=1

      counter=0
      messageBoxSearchField_Passed=0
      messageBoxSearchField= soup.find_all('input') 
      for item in messageBoxSearchField:  
        if('type' == 'search'):
          if('role' == 'status'):
            counter+=1  
            messageBoxSearchField_Passed=counter                        
      print('Number of Passed Guideline for Status Message of Search Field:', messageBoxSearchField_Passed)

      counter=0
      messageBoxSearchField_Failed=0
      messageBoxSearchField= soup.find_all('input') 
      for item in messageBoxSearchField:  
        if('type' == 'search'):
          if('role' != 'status'):
            counter+=1  
            messageBoxSearchField_Failed=counter                        
      print('Number of Failed Guideline for Status Message of Search Field:', messageBoxSearchField_Failed)

      messageBoxSearchField_totalCount=messageBoxSearchField_Passed+messageBoxSearchField_Failed
      print('The total count of checked for Status Message of Search Field:', messageBoxSearchField_totalCount)

      if(messageBoxSearchField_Failed<=0 and messageBoxSearchField_Passed>=1):
        print('Pass: Guideline 4.1.3 Status Messages; All the Necessary Status Messages of Search Field is Specified')
        Frame32=Frame(main_fm, bg='white', width=380, height=25) 
        Frame32.place(x=10, y=880, width=380, height=25)
        Lable32=Label(Frame32, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable32.grid(row=0, column=0) 
        Framee32=Frame(main_fm, bg='white', width=110, height=25)
        Framee32.place(x=400, y=880, width=110, height=25)
        Lablee32=Label(Framee32, text=messageBoxSearchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee32.grid(row=0, column=0) 
        Frameee32=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee32.place(x=530, y=880, width=480, height=25)
        Lableee32=Label(Frameee32, text='All the Necessary Status Messages of Search Field is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee32.grid(row=0, column=0)
        Frameeee32=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee32.place(x=1030, y=880, width=130, height=25) 
        Lableeee32=Label(Frameeee32, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee32.grid(row=0, column=0) 
        Frameeeee32=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee32.place(x=1180, y=880, width=80, height=25)
        Lableeeee32=Label(Frameeeee32, text=messageBoxSearchField_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee32.grid(row=0, column=0)
        Frameeeeee32=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee32.place(x=1280, y=880, width=150, height=25)
        Lableeeeee32=Label(Frameeeeee32, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee32.grid(row=0, column=0)
        Frameeeeeee32=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee32.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee32=Label(Frameeeeeee32, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee32.grid(row=0, column=0)
        Frameeeeeeee32=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee32.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee32=Label(Frameeeeeeee32, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee32.grid(row=0, column=0)
      elif(messageBoxSearchField_Failed>0):
        print('Fail: Guideline 4.1.3 Status Messages; Necessary Status Messages for Search Field is Missing') 
        Frame32=Frame(main_fm, bg='white', width=380, height=25) 
        Frame32.place(x=10, y=880, width=380, height=25)
        Lable32=Label(Frame32, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable32.grid(row=0, column=0) 
        Framee32=Frame(main_fm, bg='white', width=110, height=25)
        Framee32.place(x=400, y=880, width=110, height=25)
        Lablee32=Label(Framee32, text=messageBoxSearchField_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee32.grid(row=0, column=0) 
        Frameee32=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee32.place(x=530, y=880, width=480, height=25)
        Lableee32=Label(Frameee32, text='Necessary Status Messages for Search Field is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee32.grid(row=0, column=0)
        Frameeee32=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee32.place(x=1030, y=880, width=130, height=25) 
        Lableeee32=Label(Frameeee32,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee32.grid(row=0, column=0) 
        Frameeeee32=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee32.place(x=1180, y=880, width=80, height=25)
        Lableeeee32=Label(Frameeeee32, text=messageBoxSearchField_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee32.grid(row=0, column=0)
        Frameeeeee32=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee32.place(x=1280, y=880, width=150, height=25)
        Lableeeeee32=Label(Frameeeeee32, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee32.grid(row=0, column=0)
        Frameeeeeee32=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee32.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee32=Label(Frameeeeeee32, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee32.grid(row=0, column=0)
        Frameeeeeeee32=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee32.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee32=Label(Frameeeeeeee32, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee32.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 4.1.3 Status Messages; Webpage has no Search Field')
        Frame32=Frame(main_fm, bg='white', width=380, height=25) 
        Frame32.place(x=10, y=880, width=380, height=25)
        Lable32=Label(Frame32, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable32.grid(row=0, column=0) 
        Framee32=Frame(main_fm, bg='white', width=110, height=25)
        Framee32.place(x=400, y=880, width=110, height=25)
        Lablee32=Label(Framee32, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee32.grid(row=0, column=0)
        Frameee32=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee32.place(x=530, y=880, width=480, height=25)
        Lableee32=Label(Frameee32, text='Webpage has no Search Field to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee32.grid(row=0, column=0)
        Frameeee32=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee32.place(x=1030, y=880, width=130, height=25) 
        Lableeee32=Label(Frameeee32, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee32.grid(row=0, column=0) 
        Frameeeee32=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee32.place(x=1180, y=880, width=80, height=25)
        Lableeeee32=Label(Frameeeee32, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee32.grid(row=0, column=0)
        Frameeeeee32=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee32.place(x=1280, y=880, width=150, height=25)
        Lableeeeee32=Label(Frameeeeee32, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee32.grid(row=0, column=0)
        Frameeeeeee32=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee32.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee32=Label(Frameeeeeee32, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee32.grid(row=0, column=0)
        Frameeeeeeee32=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee32.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee32=Label(Frameeeeeeee32, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee32.grid(row=0, column=0)


            ####-----------------------------------####
      
      global messageBoxForm_totalCount


      counter=0
      messageBoxForm_Passed=0
      messageBoxForm= soup.find_all('form') 
      for item in messageBoxForm:  
        #if('type' == ''):
          if('role' == 'status'):
            counter+=1  
            messageBoxForm_Passed=counter                        
      print('Number of Passed Guideline for Message Box of Form:', messageBoxForm_Passed)

      counter=0
      messageBoxForm_Failed=0
      messageBox= soup.find_all('form') 
      for item in messageBox:  
        #if('type' == 'search'):
          if('role' != 'status'):
            counter+=1  
            messageBoxForm_Failed=counter                        
      print('Number of Failed Guideline for Message Box of Form:', messageBoxForm_Failed)

      messageBoxForm_totalCount=messageBoxForm_Passed+messageBoxForm_Failed
      print('The total count of checked for Message Box of Form:', messageBoxForm_totalCount)

      if(messageBoxForm_Failed<=0 and messageBoxForm_Passed>=1):
        print('Pass: Guideline 4.1.3 Status Messages; All the Necessary Status Messages for Form is Specified') 
        Frame33=Frame(main_fm, bg='white', width=380, height=25) 
        Frame33.place(x=10, y=905, width=380, height=25)
        Lable33=Label(Frame33, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable33.grid(row=0, column=0) 
        Framee33=Frame(main_fm, bg='white', width=110, height=25)
        Framee33.place(x=400, y=905, width=110, height=25)
        Lablee33=Label(Framee33, text=messageBoxForm_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee33.grid(row=0, column=0) 
        Frameee33=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee33.place(x=530, y=905, width=480, height=25)
        Lableee33=Label(Frameee33, text='All the Necessary Status Messages for Form is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee33.grid(row=0, column=0)
        Frameeee33=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee33.place(x=1030, y=905, width=130, height=25) 
        Lableeee33=Label(Frameeee33, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee33.grid(row=0, column=0) 
        Frameeeee33=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee33.place(x=1180, y=905, width=80, height=25)
        Lableeeee33=Label(Frameeeee33, text=messageBoxForm_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee33.grid(row=0, column=0)
        Frameeeeee33=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee33.place(x=1280, y=905, width=150, height=25)
        Lableeeeee33=Label(Frameeeeee33, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee33.grid(row=0, column=0)
        Frameeeeeee33=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee33.place(x=1450, y=905, width=210, height=25)
        Lableeeeeee33=Label(Frameeeeeee33, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee33.grid(row=0, column=0)
        Frameeeeeeee33=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee33.place(x=1680, y=905, width=230, height=25)   
        Lableeeeeeee33=Label(Frameeeeeeee33, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee33.grid(row=0, column=0)
      elif(messageBoxForm_Failed>0):
        print('Fail: Guideline 4.1.3 Status Messages; Few Necessary Status Messages of Form is Missing')
        Frame33=Frame(main_fm, bg='white', width=380, height=25) 
        Frame33.place(x=10, y=905, width=380, height=25)
        Lable33=Label(Frame33, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable33.grid(row=0, column=0) 
        Framee33=Frame(main_fm, bg='white', width=110, height=25)
        Framee33.place(x=400, y=905, width=110, height=25)
        Lablee33=Label(Framee33, text=messageBoxForm_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee33.grid(row=0, column=0) 
        Frameee33=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee33.place(x=530, y=905, width=480, height=25)
        Lableee33=Label(Frameee33, text='Few Necessary Status Messages of Form is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee33.grid(row=0, column=0)
        Frameeee33=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee33.place(x=1030, y=905, width=130, height=25) 
        Lableeee33=Label(Frameeee33,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee33.grid(row=0, column=0) 
        Frameeeee33=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee33.place(x=1180, y=905, width=80, height=25)
        Lableeeee33=Label(Frameeeee33, text=messageBoxForm_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee33.grid(row=0, column=0)
        Frameeeeee33=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee33.place(x=1280, y=905, width=150, height=25)
        Lableeeeee33=Label(Frameeeeee33, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee33.grid(row=0, column=0)
        Frameeeeeee33=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee33.place(x=1450, y=905, width=210, height=25)
        Lableeeeeee33=Label(Frameeeeeee33, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee33.grid(row=0, column=0)
        Frameeeeeeee33=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee33.place(x=1680, y=905, width=230, height=25)   
        Lableeeeeeee33=Label(Frameeeeeeee33, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee33.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 4.1.3 Status Messages; Webpage has no Form')
        Frame33=Frame(main_fm, bg='white', width=380, height=25) 
        Frame33.place(x=10, y=905, width=380, height=25)
        Lable33=Label(Frame33, text='Sc (4.1.3) Status Messages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable33.grid(row=0, column=0) 
        Framee33=Frame(main_fm, bg='white', width=110, height=25)
        Framee33.place(x=400, y=905, width=110, height=25)
        Lablee33=Label(Framee33, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee33.grid(row=0, column=0)
        Frameee33=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee33.place(x=530, y=905, width=480, height=25)
        Lableee33=Label(Frameee33, text='Webpage has no Form to Evaluate', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee33.grid(row=0, column=0)
        Frameeee33=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee33.place(x=1030, y=905, width=130, height=25) 
        Lableeee33=Label(Frameeee33, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee33.grid(row=0, column=0) 
        Frameeeee33=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee33.place(x=1180, y=905, width=80, height=25)
        Lableeeee33=Label(Frameeeee33, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee33.grid(row=0, column=0)
        Frameeeeee33=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee33.place(x=1280, y=905, width=150, height=25)
        Lableeeeee33=Label(Frameeeeee33, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee33.grid(row=0, column=0)
        Frameeeeeee33=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee33.place(x=1450, y=905, width=210, height=25)
        Lableeeeeee33=Label(Frameeeeeee33, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee33.grid(row=0, column=0)
        Frameeeeeeee33=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee33.place(x=1680, y=905, width=230, height=25)   
        Lableeeeeeee33=Label(Frameeeeeeee33, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee33.grid(row=0, column=0)

      if((messageBoxSearchField_Failed<=0 and messageBoxSearchField_Passed>=1) and (messageBoxForm_Failed<=0 and messageBoxForm_Passed>=1)):
        print('Pass: Guideline 4.1.3 Status Messages; All the Necessary Status Messages of Search Field is Specified')
        Pcounter27=1; Fcounter27=0; NTcounter27=0; NDcounter27=0
        PLevelAA7=1; FLevelAA7=0; NTLevelAA7=0; NDLevelAA7=0
        VLevelAA7=1; ADLevelAA7=0; ETLevelAA7=0

        PVisionImpairment27=0; FVisionImpairment27=0; NDVisionImpairment27=0; NTVisionImpairment27=0      
        PHearingDifficulty27=0; FHearingDifficulty27=0; NDHearingDifficulty27=0; NTHearingDifficulty27=0 
        PCognitiveDisability27=1; FCognitiveDisability27=0; NDCognitiveDisability27=0; NTCognitiveDisability27=0 
        PMotionDisability27=0; FMotionDisability27=0; NDMotionDisability27=0; NTMotionDisability27=0
        PLearningDisability27=0; FLearningDisability27=0; NDLearningDisability27=0; NTLearningDisability27=0
      elif ((messageBoxSearchField_Failed>0 and messageBoxForm_Failed>0) or (messageBoxSearchField_Failed>0 or messageBoxForm_Failed>0)):
        print('Fail: Guideline 4.1.3 Status Messages; Necessary Status Messages for Search Field is Missing')  
        Fcounter27=1; Pcounter27=0; NTcounter27=0; NDcounter27=0
        FLevelAA7=1; PLevelAA7=0; NTLevelAA7=0; NDLevelAA7=0
        ADLevelAA7=1; VLevelAA7=0; ETLevelAA7=0

        FVisionImpairment27=0; PVisionImpairment27=0; NDVisionImpairment27=0; NTVisionImpairment27=0      
        FHearingDifficulty27=0; PHearingDifficulty27=0; NDHearingDifficulty27=0; NTHearingDifficulty27=0 
        FCognitiveDisability27=1; PCognitiveDisability27=0; NDCognitiveDisability27=0; NTCognitiveDisability27=0 
        FMotionDisability27=0; PMotionDisability27=0; NDMotionDisability27=0; NTMotionDisability27=0
        FLearningDisability27=0; PLearningDisability27=0; NDLearningDisability27=0; NTLearningDisability27=0
      else:
        print('Not Detected: Guideline 4.1.3 Status Messages; Webpage has no Search Field')
        NDcounter27=1; Pcounter27=0; Fcounter27=0; NTcounter27=0
        NDLevelAA7=1; PLevelAA7=0; FLevelAA7=0; NTLevelAA7=0
        VLevelAA7=1; ADLevelAA7=0; ETLevelAA7=0

        NDVisionImpairment27=0; PVisionImpairment27=0; FVisionImpairment27=0; NTVisionImpairment27=0    
        NDHearingDifficulty27=0; PHearingDifficulty27=0; FHearingDifficulty27=0; NTHearingDifficulty27=0 
        NDCognitiveDisability27=1; PCognitiveDisability27=0; FCognitiveDisability27=0; NTCognitiveDisability27=0 
        NDMotionDisability27=0; PMotionDisability27=0; FMotionDisability27=0; NTMotionDisability27=0
        NDLearningDisability27=0; PLearningDisability27=0; FLearningDisability27=0; NTLearningDisability27=0



      ###------------------------------####

      global color_totalCount

      color_Object=1
      
      color_totalCount= headingColor_totalCount+headerColor_totalCount+paragraphColor_totalCount
        
      
      global nonSemanticObjects
      
      nonSemanticObjects= audio_Object+Links_Object+DisplayOrientation_Object+Input_Object+Button_Object+Headings_Object+color_Object+Header_Object+Paragraph_Object+BackgroundMusic_Object+KeyboardAccess_Object+KeyboardCharacterKeyShortcut_Object+SearchField_Object+Label_Object+DropDoownMenu_Object+DialogBox_Object+Form_Object+ErrorMessage_Object+ErrorSuggestion_Object+MessagesBox_Object 
      print('Totla Checked Objects for Non Aspects:', nonSemanticObjects)


      global nonSemantics_Pass
      global nonSemantics_Fail
      global nonSemantics_NotDetected
      global nonSemantics_NotTested

      nonSemantics_Pass=Pcounter1+Pcounter2+Pcounter3+Pcounter4+Pcounter5+Pcounter6+Pcounter7+Pcounter8+Pcounter9+Pcounter10+Pcounter11+Pcounter12+Pcounter13+Pcounter14+Pcounter15+Pcounter16+Pcounter17+Pcounter18+Pcounter19+Pcounter20+Pcounter21+Pcounter22+Pcounter23+Pcounter24+Pcounter25+Pcounter26+Pcounter27
      print('The number of Guideline has Passed:', nonSemantics_Pass)
      nonSemantics_Fail=Fcounter1+Fcounter2+Fcounter3+Fcounter4+Fcounter5+Fcounter6+Fcounter7+Fcounter8+Fcounter9+Fcounter10+Fcounter11+Fcounter12+Fcounter13+Fcounter14+Fcounter15+Fcounter16+Fcounter17+Fcounter18+Fcounter19+Fcounter20+Fcounter21+Fcounter22+Fcounter23+Fcounter24+Fcounter25+Fcounter26+Fcounter27
      print('The number of Guideline has Failed:', nonSemantics_Fail)
      nonSemantics_NotDetected= NDcounter1+NDcounter2+NDcounter3+NDcounter4+NDcounter5+NDcounter6+NDcounter7+NDcounter8+NDcounter9+NDcounter10+NDcounter11+NDcounter12+NDcounter13+NDcounter14+NDcounter15+NDcounter16+NDcounter17+NDcounter18+NDcounter19+NDcounter20+NDcounter21+NDcounter22+NDcounter23+NDcounter24+NDcounter25+NDcounter26+NDcounter27
      print('The number of Guideline has Not Detected:', nonSemantics_NotDetected)
      nonSemantics_NotTested= NTcounter1+NTcounter2+NTcounter3+NTcounter4+NTcounter5+NTcounter6+NTcounter7+NTcounter8+NTcounter9+NTcounter10+NTcounter11+NTcounter12+NTcounter13+NTcounter14+NTcounter15+NTcounter16+NTcounter17+NTcounter18+NTcounter19+NTcounter20+NTcounter21+NTcounter22+NTcounter23+NTcounter24+NTcounter25+NTcounter26+NTcounter27
      print('The number of has Not Tested:', nonSemantics_NotTested)

      global nonSemantics_PassLevelA
      global nonSemantics_FailLevelA
      global nonSemantics_NDLevelA
      global nonSemantics_NTLevelA

      nonSemantics_PassLevelA= PLevelA1+PLevelA2+PLevelA3+PLevelA4+PLevelA5+PLevelA6+PLevelA7+PLevelA8+PLevelA9+PLevelA10+PLevelA11+PLevelA12+PLevelA13
      print('The number of Guidelines under Level A have Passed:', nonSemantics_PassLevelA)
      nonSemantics_FailLevelA= FLevelA1+FLevelA2+FLevelA3+FLevelA4+FLevelA5+FLevelA6+FLevelA7+FLevelA8+FLevelA9+FLevelA10+FLevelA11+FLevelA12+FLevelA13
      print('The number of Guidelines under Level A have Failed:', nonSemantics_FailLevelA)
      nonSemantics_NDLevelA= NDLevelA1+NDLevelA2+NDLevelA3+NDLevelA4+NDLevelA5+NDLevelA6+NDLevelA7+NDLevelA8+NDLevelA9+NDLevelA10+NDLevelA11+NDLevelA12+NDLevelA13
      print('The number of Guidelines under Level A have Not Detected:', nonSemantics_NDLevelA)
      nonSemantics_NTLevelA= NTLevelA1 +NTLevelA2+NTLevelA3+NTLevelA4+NTLevelA5+NTLevelA6+NTLevelA7+NTLevelA8+NTLevelA9+NTLevelA10+NTLevelA11+NTLevelA12+NTLevelA13
      print('The number of Guidelines under Level A have Not Tested:', nonSemantics_NTLevelA)

      global nonSemantics_PassLevelAA
      global nonSemantics_FailLevelAA
      global nonSemantics_NDLevelAA
      global nonSemantics_NTLevelAA

      nonSemantics_PassLevelAA= PLevelAA1+PLevelAA2+PLevelAA3+PLevelAA4+PLevelAA5+PLevelAA6+PLevelAA7
      print('The number of Guidelines under Level AA have Passed:', nonSemantics_PassLevelAA)
      nonSemantics_FailLevelAA= FLevelAA1+FLevelAA2+FLevelAA3+FLevelAA4+FLevelAA5+FLevelAA6+FLevelAA7
      print('The number of Guidelines under Level AA have Failed:', nonSemantics_FailLevelAA)
      nonSemantics_NDLevelAA= NDLevelAA1+NDLevelAA2+NDLevelAA3+NDLevelAA4+NDLevelAA5+NDLevelAA6+NDLevelAA7
      print('The number of Guidelines under Level AA have Not Detected:', nonSemantics_NDLevelAA)
      nonSemantics_NTLevelAA= NTLevelAA1 +NTLevelAA2+NTLevelAA3+NTLevelAA4+NTLevelAA5+NTLevelAA6+NTLevelAA7
      print('The number of Guidelines under Level AA have Not Tested:', nonSemantics_NTLevelAA)

      global nonSemantics_PassLevelAAA
      global nonSemantics_FailLevelAAA
      global nonSemantics_NTLevelAAA
      global nonSemantics_NDLevelAAA

      nonSemantics_PassLevelAAA= PLevelAAA1+PLevelAAA2+PLevelAAA3+PLevelAAA4+PLevelAAA5+PLevelAAA6+PLevelAAA7
      print('The number of Guidelines under Level AAA have Passed:', nonSemantics_PassLevelAAA)
      nonSemantics_FailLevelAAA= FLevelAAA1+FLevelAAA2+FLevelAAA3+FLevelAAA4+FLevelAAA5+FLevelAAA6+FLevelAAA7
      print('The number of Guidelines under Level AAA have Failed:', nonSemantics_FailLevelAAA)
      nonSemantics_NTLevelAAA= NTLevelAAA1 +NTLevelAAA2+NTLevelAAA3+NTLevelAAA4+NTLevelAAA5+NTLevelAAA6+NTLevelAAA7
      print('The number of Guidelines under Level AAA have Not Tested:', nonSemantics_NTLevelAAA)
      nonSemantics_NDLevelAAA= NDLevelAAA1+NDLevelAAA2+NDLevelAAA3+NDLevelAAA4+NDLevelAAA5+NDLevelAAA6+NDLevelAAA7
      print('The number of Guidelines under Level AAA have Not Detected:', nonSemantics_NDLevelAAA)


      global nonSemantics_PassCognitiveDisability
      global nonSemantics_FailCognitiveDisability
      global nonSemantics_NotDetectedCognitiveDisability
      global nonSemantics_NotTestedCognitiveDisability

      nonSemantics_PassCognitiveDisability=PCognitiveDisability1+PCognitiveDisability2+PCognitiveDisability3+PCognitiveDisability4+PCognitiveDisability5+PCognitiveDisability6+PCognitiveDisability7+PCognitiveDisability8+PCognitiveDisability9+PCognitiveDisability10+PCognitiveDisability11+PCognitiveDisability12+PCognitiveDisability13+PCognitiveDisability14+PCognitiveDisability15+PCognitiveDisability16+PCognitiveDisability17+PCognitiveDisability18+PCognitiveDisability19+PCognitiveDisability20+PCognitiveDisability21+PCognitiveDisability22+PCognitiveDisability23+PCognitiveDisability24+PCognitiveDisability25+PCognitiveDisability26+PCognitiveDisability27
      print('The number of Guideline has Passed for Cognitive Disability:', nonSemantics_PassCognitiveDisability)
      nonSemantics_FailCognitiveDisability=FCognitiveDisability1+FCognitiveDisability2+FCognitiveDisability3+FCognitiveDisability4+FCognitiveDisability5+FCognitiveDisability6+FCognitiveDisability7+FCognitiveDisability8+FCognitiveDisability9+FCognitiveDisability10+FCognitiveDisability11+FCognitiveDisability12+FCognitiveDisability13+FCognitiveDisability14+FCognitiveDisability15+FCognitiveDisability16+FCognitiveDisability17+FCognitiveDisability18+FCognitiveDisability19+FCognitiveDisability20+FCognitiveDisability21+FCognitiveDisability22+FCognitiveDisability23+FCognitiveDisability24+FCognitiveDisability25+FCognitiveDisability26+FCognitiveDisability27
      print('The number of Guideline has Failed for Cognitive Disability:', nonSemantics_FailCognitiveDisability)
      nonSemantics_NotDetectedCognitiveDisability= NDCognitiveDisability1+NDCognitiveDisability2+NDCognitiveDisability3+NDCognitiveDisability4+NDCognitiveDisability5+NDCognitiveDisability6+NDCognitiveDisability7+NDCognitiveDisability8+NDCognitiveDisability9+NDCognitiveDisability10+NDCognitiveDisability11+NDCognitiveDisability12+NDCognitiveDisability13+NDCognitiveDisability14+NDCognitiveDisability15+NDCognitiveDisability16+NDCognitiveDisability17+NDCognitiveDisability18+NDCognitiveDisability19+NDCognitiveDisability20+NDCognitiveDisability21+NDCognitiveDisability22+NDCognitiveDisability23+NDCognitiveDisability24+NDCognitiveDisability25+NDCognitiveDisability26+NDCognitiveDisability27
      print('The number of Guideline has Not Detected for Cognitive Disability:', nonSemantics_NotDetectedCognitiveDisability)
      nonSemantics_NotTestedCognitiveDisability= NTCognitiveDisability1+NTCognitiveDisability2+NTCognitiveDisability3+NTCognitiveDisability4+NTCognitiveDisability5+NTCognitiveDisability6+NTCognitiveDisability7+NTCognitiveDisability8+NTCognitiveDisability9+NTCognitiveDisability10+NTCognitiveDisability11+NTCognitiveDisability12+NTCognitiveDisability13+NTCognitiveDisability14+NTCognitiveDisability15+NTCognitiveDisability16+NTCognitiveDisability17+NTCognitiveDisability18+NTCognitiveDisability19+NTCognitiveDisability20+NTCognitiveDisability21+NTCognitiveDisability22+NTCognitiveDisability23+NTCognitiveDisability24+NTCognitiveDisability25+NTCognitiveDisability26+NTCognitiveDisability27
      print('The number of has Not Tested for Cognitive DIsability:', nonSemantics_NotTestedCognitiveDisability)


      global nonSemantics_PassVisionImpairment
      global nonSemantics_FailVisionImpairment
      global nonSemantics_NotDetectedVisionImpairment
      global nonSemantics_NotTestedVisionImpairment

      nonSemantics_PassVisionImpairment=PVisionImpairment1+PVisionImpairment2+PVisionImpairment3+PVisionImpairment4+PVisionImpairment5+PVisionImpairment6+PVisionImpairment7+PVisionImpairment8+PVisionImpairment9+PVisionImpairment10+PVisionImpairment11+PVisionImpairment12+PVisionImpairment13+PVisionImpairment14+PVisionImpairment15+PVisionImpairment16+PVisionImpairment17+PVisionImpairment18+PVisionImpairment19+PVisionImpairment20+PVisionImpairment21+PVisionImpairment22+PVisionImpairment23+PVisionImpairment24+PVisionImpairment25+PVisionImpairment26+PVisionImpairment27
      print('The number of Guideline has Passed for Vision Impairment:', nonSemantics_PassVisionImpairment)
      nonSemantics_FailVisionImpairment=FVisionImpairment1+FVisionImpairment2+FVisionImpairment3+FVisionImpairment4+FVisionImpairment5+FVisionImpairment6+FVisionImpairment7+FVisionImpairment8+FVisionImpairment9+FVisionImpairment10+FVisionImpairment11+FVisionImpairment12+FVisionImpairment13+FVisionImpairment14+FVisionImpairment15+FVisionImpairment16+FVisionImpairment17+FVisionImpairment18+FVisionImpairment19+FVisionImpairment20+FVisionImpairment21+FVisionImpairment22+FVisionImpairment23+FVisionImpairment24+FVisionImpairment25+FVisionImpairment26+FVisionImpairment27
      print('The number of Guideline has Failed for Vision Impairment:', nonSemantics_FailVisionImpairment)
      nonSemantics_NotDetectedVisionImpairment= NDVisionImpairment1+NDVisionImpairment2+NDVisionImpairment3+NDVisionImpairment4+NDVisionImpairment5+NDVisionImpairment6+NDVisionImpairment7+NDVisionImpairment8+NDVisionImpairment9+NDVisionImpairment10+NDVisionImpairment11+NDVisionImpairment12+NDVisionImpairment13+NDVisionImpairment14+NDVisionImpairment15+NDVisionImpairment16+NDVisionImpairment17+NDVisionImpairment18+NDVisionImpairment19+NDVisionImpairment20+NDVisionImpairment21+NDVisionImpairment22+NDVisionImpairment23+NDVisionImpairment24+NDVisionImpairment25+NDVisionImpairment26+NDVisionImpairment27
      print('The number of Guideline has Not Detected for Vision Impairment:', nonSemantics_NotDetectedVisionImpairment)
      nonSemantics_NotTestedVisionImpairment= NTVisionImpairment1+NTVisionImpairment2+NTVisionImpairment3+NTVisionImpairment4+NTVisionImpairment5+NTVisionImpairment6+NTVisionImpairment7+NTVisionImpairment8+NTVisionImpairment9+NTVisionImpairment10+NTVisionImpairment11+NTVisionImpairment12+NTVisionImpairment13+NTVisionImpairment14+NTVisionImpairment15+NTVisionImpairment16+NTVisionImpairment17+NTVisionImpairment18+NTVisionImpairment19+NTVisionImpairment20+NTVisionImpairment21+NTVisionImpairment22+NTVisionImpairment23+NTVisionImpairment24+NTVisionImpairment25+NTVisionImpairment26+NTVisionImpairment27
      print('The number of Guideline has Not Tested for Vision Impairment:', nonSemantics_NotTestedVisionImpairment)


      global nonSemantics_PassHearingDifficulty
      global nonSemantics_FailHearingDifficulty
      global nonSemantics_NotDetectedHearingDifficulty
      global nonSemantics_NotTestedHearingDifficulty

      nonSemantics_PassHearingDifficulty=PHearingDifficulty1+PHearingDifficulty2+PHearingDifficulty3+PHearingDifficulty4+PHearingDifficulty5+PHearingDifficulty6+PHearingDifficulty7+PHearingDifficulty8+PHearingDifficulty9+PHearingDifficulty10+PHearingDifficulty11+PHearingDifficulty12+PHearingDifficulty13+PHearingDifficulty14+PHearingDifficulty15+PHearingDifficulty16+PHearingDifficulty17+PHearingDifficulty18+PHearingDifficulty19+PHearingDifficulty20+PHearingDifficulty21+PHearingDifficulty22+PHearingDifficulty23+PHearingDifficulty24+PHearingDifficulty25+PHearingDifficulty26+PHearingDifficulty27
      print('The number of Guideline has Passed for Hearing Difficulty:', nonSemantics_PassHearingDifficulty)
      nonSemantics_FailHearingDifficulty=FHearingDifficulty1+FHearingDifficulty2+FHearingDifficulty3+FHearingDifficulty4+FHearingDifficulty5+FHearingDifficulty6+FHearingDifficulty7+FHearingDifficulty8+FHearingDifficulty9+FHearingDifficulty10+FHearingDifficulty11+FHearingDifficulty12+FHearingDifficulty13+FHearingDifficulty14+FHearingDifficulty15+FHearingDifficulty16+FHearingDifficulty17+FHearingDifficulty18+FHearingDifficulty19+FHearingDifficulty20+FHearingDifficulty21+FHearingDifficulty22+FHearingDifficulty23+FHearingDifficulty24+FHearingDifficulty25+FHearingDifficulty26+FHearingDifficulty27
      print('The number of Guideline has Failed for Hearing Difficulty:', nonSemantics_FailHearingDifficulty)
      nonSemantics_NotDetectedHearingDifficulty= NDHearingDifficulty1+NDHearingDifficulty2+NDHearingDifficulty3+NDHearingDifficulty4+NDHearingDifficulty5+NDHearingDifficulty6+NDHearingDifficulty7+NDHearingDifficulty8+NDHearingDifficulty9+NDHearingDifficulty10+NDHearingDifficulty11+NDHearingDifficulty12+NDHearingDifficulty13+NDHearingDifficulty14+NDHearingDifficulty15+NDHearingDifficulty16+NDHearingDifficulty17+NDHearingDifficulty18+NDHearingDifficulty19+NDHearingDifficulty20+NDHearingDifficulty21+NDHearingDifficulty22+NDHearingDifficulty23+NDHearingDifficulty24+NDHearingDifficulty25+NDHearingDifficulty26+NDHearingDifficulty27
      print('The number of Guideline has Not Detected for Hearing Difficulty:', nonSemantics_NotDetectedHearingDifficulty)
      nonSemantics_NotTestedHearingDifficulty= NTHearingDifficulty1+NTHearingDifficulty2+NTHearingDifficulty3+NTHearingDifficulty4+NTHearingDifficulty5+NTHearingDifficulty6+NTHearingDifficulty7+NTHearingDifficulty8+NTHearingDifficulty9+NTHearingDifficulty10+NTHearingDifficulty11+NTHearingDifficulty12+NTHearingDifficulty13+NTHearingDifficulty14+NTHearingDifficulty15+NTHearingDifficulty16+NTHearingDifficulty17+NTHearingDifficulty18+NTHearingDifficulty19+NTHearingDifficulty20+NTHearingDifficulty21+NTHearingDifficulty22+NTHearingDifficulty23+NTHearingDifficulty24+NTHearingDifficulty25+NTHearingDifficulty26+NTHearingDifficulty27
      print('The number of has Not Tested for Hearing Difficulty:', nonSemantics_NotTestedHearingDifficulty)

      global nonSemantics_PassMotionDisability
      global nonSemantics_FailMotionDisability
      global nonSemantics_NotDetectedMotionDisability
      global nonSemantics_NotTestedMotionDisability

      nonSemantics_PassMotionDisability=PMotionDisability1+PMotionDisability2+PMotionDisability3+PMotionDisability4+PMotionDisability5+PMotionDisability6+PMotionDisability7+PMotionDisability8+PMotionDisability9+PMotionDisability10+PMotionDisability11+PMotionDisability12+PMotionDisability13+PMotionDisability14+PMotionDisability15+PMotionDisability16+PMotionDisability17+PMotionDisability18+PMotionDisability19+PMotionDisability20+PMotionDisability21+PMotionDisability22+PMotionDisability23+PMotionDisability24+PMotionDisability25+PMotionDisability26+PMotionDisability27
      print('The number of Guideline has Passed for Motion Disability:', nonSemantics_PassMotionDisability)
      nonSemantics_FailMotionDisability=FMotionDisability1+FMotionDisability2+FMotionDisability3+FMotionDisability4+FMotionDisability5+FMotionDisability6+FMotionDisability7+FMotionDisability8+FMotionDisability9+FMotionDisability10+FMotionDisability11+FMotionDisability12+FMotionDisability13+FMotionDisability14+FMotionDisability15+FMotionDisability16+FMotionDisability17+FMotionDisability18+FMotionDisability19+FMotionDisability20+FMotionDisability21+FMotionDisability22+FMotionDisability23+FMotionDisability24+FMotionDisability25+FMotionDisability26+FMotionDisability27
      print('The number of Guideline has Failed for Motion Disability:', nonSemantics_FailMotionDisability)
      nonSemantics_NotDetectedMotionDisability= NDMotionDisability1+NDMotionDisability2+NDMotionDisability3+NDMotionDisability4+NDMotionDisability5+NDMotionDisability6+NDMotionDisability7+NDMotionDisability8+NDMotionDisability9+NDMotionDisability10+NDMotionDisability11+NDMotionDisability12+NDMotionDisability13+NDMotionDisability14+NDMotionDisability15+NDMotionDisability16+NDMotionDisability17+NDMotionDisability18+NDMotionDisability19+NDMotionDisability20+NDMotionDisability21+NDMotionDisability22+NDMotionDisability23+NDMotionDisability24+NDMotionDisability25+NDMotionDisability26+NDMotionDisability27
      print('The number of Guideline has Not Detected for Motion Disability:', nonSemantics_NotDetectedMotionDisability)
      nonSemantics_NotTestedMotionDisability= NTMotionDisability1+NTMotionDisability2+NTMotionDisability3+NTMotionDisability4+NTMotionDisability5+NTMotionDisability6+NTMotionDisability7+NTMotionDisability8+NTMotionDisability9+NTMotionDisability10+NTMotionDisability11+NTMotionDisability12+NTMotionDisability13+NTMotionDisability14+NTMotionDisability15+NTMotionDisability16+NTMotionDisability17+NTMotionDisability18+NTMotionDisability19+NTMotionDisability20+NTMotionDisability21+NTMotionDisability22+NTMotionDisability23+NTMotionDisability24+NTMotionDisability25+NTMotionDisability26+NTMotionDisability27
      print('The number of has Not Tested for Motion Disability:', nonSemantics_NotTestedMotionDisability)

        
      global nonSemantics_PassLearningDisability
      global nonSemantics_FailLearningDisability
      global nonSemantics_NotDetectedLearningDisability
      global nonSemantics_NotTestedLearningDisability

      nonSemantics_PassLearningDisability=PLearningDisability1+PLearningDisability2+PLearningDisability3+PLearningDisability4+PLearningDisability5+PLearningDisability6+PLearningDisability7+PLearningDisability8+PLearningDisability9+PLearningDisability10+PLearningDisability11+PLearningDisability12+PLearningDisability13+PLearningDisability14+PLearningDisability15+PLearningDisability16+PLearningDisability17+PLearningDisability18+PLearningDisability19+PLearningDisability20+PLearningDisability21+PLearningDisability22+PLearningDisability23+PLearningDisability24+PLearningDisability25+PLearningDisability26+PLearningDisability27
      print('The number of Guideline has Passed for Learning Disability:', nonSemantics_PassLearningDisability)
      nonSemantics_FailLearningDisability=FLearningDisability1+FLearningDisability2+FLearningDisability3+FLearningDisability4+FLearningDisability5+FLearningDisability6+FLearningDisability7+FLearningDisability8+FLearningDisability9+FLearningDisability10+FLearningDisability11+FLearningDisability12+FLearningDisability13+FLearningDisability14+FLearningDisability15+FLearningDisability16+FLearningDisability17+FLearningDisability18+FLearningDisability19+FLearningDisability20+FLearningDisability21+FLearningDisability22+FLearningDisability23+FLearningDisability24+FLearningDisability25+FLearningDisability26+FLearningDisability27
      print('The number of Guideline has Failed for Learning Disability:', nonSemantics_FailLearningDisability)
      nonSemantics_NotDetectedLearningDisability= NDLearningDisability1+NDLearningDisability2+NDLearningDisability3+NDLearningDisability4+NDLearningDisability5+NDLearningDisability6+NDLearningDisability7+NDLearningDisability8+NDLearningDisability9+NDLearningDisability10+NDLearningDisability11+NDLearningDisability12+NDLearningDisability13+NDLearningDisability14+NDLearningDisability15+NDLearningDisability16+NDLearningDisability17+NDLearningDisability18+NDLearningDisability19+NDLearningDisability20+NDLearningDisability21+NDLearningDisability22+NDLearningDisability23+NDLearningDisability24+NDLearningDisability25+NDLearningDisability26+NDLearningDisability27
      print('The number of Guideline has Not Detected for Learning Disability:', nonSemantics_NotDetectedLearningDisability)
      nonSemantics_NotTestedLearningDisability= NTLearningDisability1+NTLearningDisability2+NTLearningDisability3+NTLearningDisability4+NTLearningDisability5+NTLearningDisability6+NTLearningDisability7+NTLearningDisability8+NTLearningDisability9+NTLearningDisability10+NTLearningDisability11+NTLearningDisability12+NTLearningDisability13+NTLearningDisability14+NTLearningDisability15+NTLearningDisability16+NTLearningDisability17+NTLearningDisability18+NTLearningDisability19+NTLearningDisability20+NTLearningDisability21+NTLearningDisability22+NTLearningDisability23+NTLearningDisability24+NTLearningDisability25+NTLearningDisability26+NTLearningDisability27
      print('The number of has Not Tested for Learning Disability:', nonSemantics_NotTestedLearningDisability)

      global nonSemantics_HTML_Tag_Checked

      nonSemantics_HTML_Tag_Checked= audio_totalCount+audioControl_totalCount+audioControlAlt_totalCount+link_totalCount+displayOrientation_totalCount+placeholder_totalCount+ariaLabel_totalCount+arialableButton_totalCount+headerColor_totalCount+paragraphColor_totalCount+backgroundMusic_totalCount+linksHref_totalCount+tabIndex_totalCount+accessKey_totalCount+link_searchField_totalCount+lebelText_totalCount+option_totalCount+dialogbox_totalCount+placeholderSearch_totalCount+form_totalCount+aria_totalCount+lebelText_totalCount+placeholdersSearch_totalCount+ariaInvalid_totalCount+link_totalCount+inputTypeAltTitle_totalCount+messageBoxSearchField_totalCount+messageBoxForm_totalCount
      print('HTML Tag Checked for Non Semantics Aspects:', nonSemantics_HTML_Tag_Checked)


      global nonSemantics_VLevelA
      global nonSemantics_ADLevelA
      global nonSemantics_ETLevelA

      nonSemantics_VLevelA= VLevelA1+VLevelA2+VLevelA3+VLevelA4+VLevelA5+VLevelA6+VLevelA7+VLevelA8+VLevelA9+VLevelA10+VLevelA11+VLevelA12+VLevelA13
      print('The number of Guidelines under Level A have Verified:', nonSemantics_VLevelA)
      nonSemantics_ADLevelA= ADLevelA1+ADLevelA2+ADLevelA3+ADLevelA4+ADLevelA5+ADLevelA6+ADLevelA7+ADLevelA8+ADLevelA9+ADLevelA10+ADLevelA11+ADLevelA12+ADLevelA13
      print('The number of Guidelines under Level A need Additional Checking:', nonSemantics_ADLevelA)
      nonSemantics_ETLevelA= ETLevelA1+ETLevelA2+ETLevelA3+ETLevelA4+ETLevelA5+ETLevelA6+ETLevelA7+ETLevelA8+ETLevelA9+ETLevelA10+ETLevelA11+ETLevelA12+ETLevelA13
      print('The number of Guidelines under Level A need Expert Testing:', nonSemantics_ETLevelA)
      

      global nonSemantics_VLevelAA
      global nonSemantics_ADLevelAA
      global nonSemantics_ETLevelAA

      nonSemantics_VLevelAA= VLevelAA1+VLevelAA2+VLevelAA3+VLevelAA4+VLevelAA5+VLevelAA6+VLevelAA7
      print('The number of Guidelines under Level AA have Verified:', nonSemantics_VLevelAA)
      nonSemantics_ADLevelAA= ADLevelAA1+ADLevelAA2+ADLevelAA3+ADLevelAA4+ADLevelAA5+ADLevelAA6+ADLevelAA7
      print('The number of Guidelines under Level AA need Additional Checking:', nonSemantics_ADLevelAA)
      nonSemantics_ETLevelAA= ETLevelAA1+ETLevelAA2+ETLevelAA3+ETLevelAA4+ETLevelAA5+ETLevelAA6+ETLevelAA7
      print('The number of Guidelines under Level AA need Expert Testing:', nonSemantics_ETLevelAA)
      

      global nonSemantics_VLevelAAA
      global nonSemantics_ADLevelAAA
      global nonSemantics_ETLevelAAA

      nonSemantics_VLevelAAA= VLevelAAA1+VLevelAAA2+VLevelAAA3+VLevelAAA4+VLevelAAA5+VLevelAAA6+VLevelAAA7
      print('The number of Guidelines under Level AAA have Verified:', nonSemantics_VLevelAAA)
      nonSemantics_ADLevelAAA= ADLevelAAA1+ADLevelAAA2+ADLevelAAA3+ADLevelAAA4+ADLevelAAA5+ADLevelAAA6+ADLevelAAA7
      print('The number of Guidelines under Level AAA need Additional Checking:', nonSemantics_ADLevelAAA)
      nonSemantics_ETLevelAAA= ETLevelAAA1 +ETLevelAAA2+ETLevelAAA3+ETLevelAAA4+ETLevelAAA5+ETLevelAAA6+ETLevelAAA7
      print('The number of Guidelines under Level AAA need Expert Testing:', nonSemantics_ETLevelAAA)




    def semantics_page():
      
      
      # TitleFrame1=Frame(main_fm, bg='white smoke', width=800, height=30)
      # TitleFrame1.place(x=490, y=5, width=800, height=30)
      # TitleLable1=Label(TitleFrame1, text='Evaluation of Textual Feature (Textual Components)', fg='black', bg='white smoke',font=("Arial", 17, 'bold'))
      # TitleLable1.grid(row=0, column=0)

      TitleFrame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=35) #highlightbackground="blue", highlightthickness=1
      TitleFrame1.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame1.place(relx=0.0, rely=0.0)

      TitleFrame=tk.Frame (TitleFrame1, bg="white smoke", width=2000, height=35)
      TitleFrame.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame.place(relx=0.32, rely=0.0)
      label = tk.Label(TitleFrame, text="Evaluation of Textual Feature (Textual Components)",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()


      ####----------------------------------------------------------------------#######
      Frame0=tk.Frame(main_fm, bg='tomato',width=380, height=25)
      Frame0.place(x=10, y=50, width=380, height=25)
      Lable0=Label(Frame0, text='SUCCESS CRITERIA', fg='black',bg='tomato',font=("Arial", 12, 'bold'))
      Lable0.grid(row=0, column=0)
      Framee0=Frame(main_fm, bg='tomato', width=110, height=25)
      Framee0.place(x=400, y=50, width=110, height=25)
      Lablee0=Label(Framee0, text='Total Count', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lablee0.grid(row=0, column=0)
      Frameee0=Frame(main_fm, bg='tomato', width=480, height=25)
      Frameee0.place(x=530, y=50, width=480, height=25)
      Lableee0=Label(Frameee0, text='FEEDBACK', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableee0.grid(row=0, column=0)
      Frameeee0=Frame(main_fm, bg='tomato', width=130, height=25)
      Frameeee0.place(x=1030, y=50, width=130, height=25)
      Lableeee0=Label(Frameeee0, text='RESULT', fg='black', bg='tomato', font=("Arial", 12, 'bold'))
      Lableeee0.grid(row=0, column=0)
      Frameeeee0=Frame(main_fm, bg='tomato', width=80, height=25)
      Frameeeee0.place(x=1180, y=50, width=80, height=25)
      Lableeeee0=Label(Frameeeee0, text='Count', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeee0.grid(row=0, column=0)
      Frameeeeee0=Frame(main_fm, bg='tomato', width=150, height=25)
      Frameeeeee0.place(x=1280, y=50, width=150, height=25)
      Lableeeeee0=Label(Frameeeeee0, text='CONFORMENCE', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeeee0.grid(row=0, column=0)
      Frameeeeeee0=Frame(main_fm,  bg='tomato', width=210, height=25)
      Frameeeeeee0.place(x=1450, y=50, width=210, height=25)
      Lableeeeeee0=Label(Frameeeeeee0, text='IMPAIRMENTS TYPE', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeeeee0.grid(row=0, column=0)
      Frameeeeeeee0=Frame(main_fm, bg='tomato', width=230, height=25)
      Frameeeeeeee0.place(x=1680, y=50, width=230, height=25)
      Lableeeeeeee0=Label(Frameeeeeeee0, text='IMPROVEMENT DIRECTION', fg='black', bg='tomato', font=("Arial", 12, 'bold')) 
      Lableeeeeeee0.grid(row=0, column=0)



      ####===========================Guideline 1.1.1 (level A)====================================####
      global img_totalCount

      Image_Object=1

      counter=0
      img_Failed=0
      images = soup.find_all('img')
      for item in images:  
        #counter+=1                          
        #print(counter)
        #if (item['alt'] == ''):
        if('alt' in item):
          if(item['alt'] == ' '):
            counter+=1  
            img_Failed=counter                         
      print('Number of Failed Guideline for Image', img_Failed)
      
      counter=0
      img_Passed=0
      images = soup.find_all('img')
      for item in images:  
        #counter+=1   
        if('alt' in item):   
          if(item['alt'] != ' '):
            counter+=1 
            img_Passed=counter                         
      print('Number of Passed Guideline for Image', img_Passed)

      img_totalCount=img_Failed+img_Passed
      print('Total Checked for Image:', img_totalCount)

      if(img_Failed<=0 and img_Passed>=1):
        print('Pass: Guideline 1.1.1 Non-text Content; Images has Title/Description')
        Pcounter29=1; Fcounter29=0; NTcounter29=0; NDcounter29=0
        PLevelA15= 1; FLevelA15=0; NTLevelA15=0; NDLevelA15=0
        VLevelA15=1; ADLevelA15=0; ETLevelA15=0

        PVisionImpairment29=1; FVisionImpairment29=0; NDVisionImpairment29=0; NTVisionImpairment29=0
        PHearingDifficulty29=1; FHearingDifficulty29=0; NDHearingDifficulty29=0; NTHearingDifficulty29=0
        PCognitiveDisability29=1; FCognitiveDisability29=0; NDCognitiveDisability29=0; NTCognitiveDisability29=0
        PMotionDisability29=0; FMotionDisability29=0; NDMotionDisability29=0; NTMotionDisability29=0
        PLearningDisability29=0; FLearningDisability29=0; NDLearningDisability29=0; NTLearningDisability29=0
        
        Frame35=Frame(main_fm, bg='white', width=380, height=25)
        Frame35.place(x=10, y=80, width=380, height=25)
        Lable35=Label(Frame35, text='Sc (1.1.1) Non-text Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable35.grid(row=0, column=0)
        Framee35=Frame(main_fm, bg='white', width=110, height=25)
        Framee35.place(x=400, y=80, width=110, height=25)
        Lablee35=Label(Framee35, text=img_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee35.grid(row=0, column=0)
        Frameee35=Frame(main_fm, bg='white', width=480, height=25)
        Frameee35.place(x=530, y=80, width=480, height=25)
        Lableee35=Label(Frameee35, text='Image has Title/Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee35.grid(row=0, column=0)
        Frameeee35=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee35.place(x=1030, y=80, width=130, height=25)
        Lableeee35=Label(Frameeee35, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee35.grid(row=0, column=0)
        Frameeeee35=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee35.place(x=1180, y=80, width=80, height=25)
        Lableeeee35=Label(Frameeeee35, text=img_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee35.grid(row=0, column=0)
        Frameeeeee35=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee35.place(x=1280, y=80, width=150, height=25)
        Lableeeeee35=Label(Frameeeeee35, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee35.grid(row=0, column=0)
        Frameeeeeee35=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee35.place(x=1450, y=80, width=210, height=25)
        Lableeeeeee35=Label(Frameeeeeee35, text='Vision/Cognitive/Hearing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee35.grid(row=0, column=0)
        Frameeeeeeee35=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee35.place(x=1680, y=80, width=230, height=25)
        Lableeeeeeee35=Label(Frameeeeeeee35, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee35.grid(row=0, column=0)
      elif(img_Failed>0):
        print('Fail: Guideline 1.1.1 Non-text Content; Image title/description is Missing') 
        Fcounter29=1; Pcounter29=0; NTcounter29=0; NDcounter29=0
        FLevelA15= 1; PLevelA15=0; NTLevelA15=0; NDLevelA15=0
        ADLevelA15=1; VLevelA15=0; ETLevelA15=0

        PVisionImpairment29=1; FVisionImpairment29=0; NDVisionImpairment29=0; NTVisionImpairment29=0
        PHearingDifficulty29=1; FHearingDifficulty29=0; NDHearingDifficulty29=0; NTHearingDifficulty29=0
        PCognitiveDisability29=1; FCognitiveDisability29=0; NDCognitiveDisability29=0; NTCognitiveDisability29=0
        PMotionDisability29=0; FMotionDisability29=0; NDMotionDisability29=0; NTMotionDisability29=0
        PLearningDisability29=0; FLearningDisability29=0; NDLearningDisability29=0; NTLearningDisability29=0
        
        Frame35=Frame(main_fm, bg='white', width=380, height=25)
        Frame35.place(x=10, y=80, width=380, height=25)
        Lable35=Label(Frame35, text='Sc (1.1.1) Non-text Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable35.grid(row=0, column=0)
        Framee35=Frame(main_fm, bg='white', width=110, height=25)
        Framee35.place(x=400, y=80, width=110, height=25)
        Lablee35=Label(Framee35, text=img_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee35.grid(row=0, column=0)
        Frameee35=Frame(main_fm, bg='white', width=480, height=25)
        Frameee35.place(x=530, y=80, width=480, height=25)
        Lableee35=Label(Frameee35, text='Image Title/Description is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee35.grid(row=0, column=0)
        Frameeee35=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee35.place(x=1030, y=80, width=130, height=25)
        Lableeee35=Label(Frameeee35, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee35.grid(row=0, column=0)
        Frameeeee35=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee35.place(x=1180, y=80, width=80, height=25)
        Lableeeee35=Label(Frameeeee35, text=img_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee35.grid(row=0, column=0)
        Frameeeeee35=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee35.place(x=1280, y=80, width=150, height=25)
        Lableeeeee35=Label(Frameeeeee35, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee35.grid(row=0, column=0)
        Frameeeeeee35=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee35.place(x=1450, y=80, width=210, height=25)
        Lableeeeeee35=Label(Frameeeeeee35, text='Vision/Cognitive/Hearing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee35.grid(row=0, column=0)
        Frameeeeeeee35=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee35.place(x=1680, y=80, width=230, height=25)
        Lableeeeeeee35=Label(Frameeeeeeee35, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee35.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.1.1 Non-text Content; Webpage has no Image Attribute')
        NDcounter29=1; Pcounter29=0; Fcounter29=0; NTcounter29=0
        NDLevelA15= 1; PLevelA15=0; FLevelA15=0; NTLevelA15=0
        VLevelA15=1; ADLevelA15=0; ETLevelA15=0

        NDVisionImpairment29=1; PVisionImpairment29=0; FVisionImpairment29=0; NTVisionImpairment29=0 
        NDHearingDifficulty29=1; PHearingDifficulty29=0; FHearingDifficulty29=0; NTHearingDifficulty29=0
        NDCognitiveDisability29=1; PCognitiveDisability29=0; FCognitiveDisability29=0; NTCognitiveDisability29=0
        NDMotionDisability29=0; PMotionDisability29=0; FMotionDisability29=0; NTMotionDisability29=0
        NDLearningDisability29=0; PLearningDisability29=0; FLearningDisability29=0; NTLearningDisability29=0
        
        Frame35=Frame(main_fm, bg='white', width=380, height=25)
        Frame35.place(x=10, y=80, width=380, height=25)
        Lable35=Label(Frame35, text='Sc (1.1.1) Non-text Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable35.grid(row=0, column=0)
        Framee35=Frame(main_fm, bg='white', width=110, height=25)
        Framee35.place(x=400, y=80, width=110, height=25)
        Lablee35=Label(Framee35, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee35.grid(row=0, column=0)
        Frameee35=Frame(main_fm, bg='white', width=480, height=25)
        Frameee35.place(x=530, y=80, width=480, height=25)
        Lableee35=Label(Frameee35, text='Webpage has no Image Attribute', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee35.grid(row=0, column=0)
        Frameeee35=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee35.place(x=1030, y=80, width=130, height=25)
        Lableeee35=Label(Frameeee35, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee35.grid(row=0, column=0)
        Frameeeee35=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee35.place(x=1180, y=80, width=80, height=25)
        Lableeeee35=Label(Frameeeee35, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee35.grid(row=0, column=0)
        Frameeeeee35=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee35.place(x=1280, y=80, width=150, height=25)
        Lableeeeee35=Label(Frameeeeee35, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee35.grid(row=0, column=0)
        Frameeeeeee35=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee35.place(x=1450, y=80, width=210, height=25)
        Lableeeeeee35=Label(Frameeeeeee35, text='Vision/Cognitive/Hearing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee35.grid(row=0, column=0)
        Frameeeeeeee35=Frame(main_fm, bg='white', width=130, height=25)
        Frameeeeeeee35.place(x=1680, y=80, width=230, height=25)
        Lableeeeeeee35=Label(Frameeeeeeee35, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee35.grid(row=0, column=0)


      ####===========================Guideline 1.2.2 (level A)====================================####
      
      global audioControlsAlt_totalCount

      Video_Object=1

      counter=0
      audioControlsAlt_Passed=0
      audio = soup.find_all('audio')
      video= soup.find_all('video')
      if((audio !=[]) and (video !=[])):                           
        for item in audio and video:
          if (item['alt'] != ' '):
            counter+=1  
            audioControlsAlt_Passed=counter                         
      print('Number of Passed Guideline for Audio/Video Captions:', audioControlsAlt_Passed)
      
      counter=0
      audioControlsAlt_Failed=0
      audio = soup.find_all('audio')
      video= soup.find_all('video')
      if((audio !=[]) and (video !=[])):                          
        for item in audio:
          if (item['alt'] == ' '):
            counter+=1  
            audioControlsAlt_Failed=counter                           
      print('Number of Failed Guideline for Audio/Vidio Captions:', audioControlsAlt_Failed)

      audioControlsAlt_totalCount=audioControlsAlt_Passed+audioControlsAlt_Failed
      print('Total Checked for Audio Controls Alt:', audioControlsAlt_totalCount)

      if (audioControlsAlt_Failed<=0 and audioControlsAlt_Passed>=1):
        print('Pass: Guideline 1.2.2 Captions (Prerecorded); Audio/Video file has caption')
        Pcounter30=1; Fcounter30=0; NTcounter30=0; NDcounter30=0
        PLevelA16=1; FLevelA16=0; NTLevelA16=0; NDLevelA16=0
        VLevelA16=1; ADLevelA16=0; ETLevelA16=0

        PVisionImpairment30=0; FVisionImpairment30=0; NDVisionImpairment30=0; NTVisionImpairment30=0   
        PHearingDifficulty30=1; FHearingDifficulty30=0; NDHearingDifficulty30=0; NTHearingDifficulty30=0  
        PCognitiveDisability30=0; FCognitiveDisability30=0; NDCognitiveDisability30=0; NTCognitiveDisability30=0  
        PMotionDisability30=0; FMotionDisability30=0; NDMotionDisability30=0; NTMotionDisability30=0
        PLearningDisability30=0; FLearningDisability30=0; NDLearningDisability30=0; NTLearningDisability30=0
          
        Frame36=Frame(main_fm, bg='white', width=380, height=25)
        Frame36.place(x=10, y=105, width=380, height=25)
        Lable36=Label(Frame36, text='Sc (1.2.2) Captions (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable36.grid(row=0, column=0)
        Framee36=Frame(main_fm, bg='white', width=110, height=25)
        Framee36.place(x=400, y=105, width=110, height=25)
        Lablee36=Label(Framee36, text=audioControlsAlt_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lablee36.grid(row=0, column=0)
        Frameee36=Frame(main_fm, bg='white', width=480, height=25)
        Frameee36.place(x=530, y=105, width=480, height=25)
        Lableee36=Label(Frameee36, text='Audio/Video Caption is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee36.grid(row=0, column=0)
        Frameeee36=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee36.place(x=1030, y=105, width=130, height=25)
        Lableeee36=Label(Frameeee36, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee36.grid(row=0, column=0)
        Frameeeee36=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee36.place(x=1180, y=105, width=80, height=25)
        Lableeeee36=Label(Frameeeee36, text=audioControlsAlt_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee36.grid(row=0, column=0)
        Frameeeeee36=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee36.place(x=1280, y=105, width=150, height=25)
        Lableeeeee36=Label(Frameeeeee36, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee36.grid(row=0, column=0)
        Frameeeeeee36=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee36.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee36=Label(Frameeeeeee36, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee36.grid(row=0, column=0)
        Frameeeeeeee36=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee36.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee36=Label(Frameeeeeeee36, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee36.grid(row=0, column=0)
      elif (audioControlsAlt_Failed>0):
        print('Fail: Guideline 1.2.2 Captions (Prerecorded); Audio caption is missing')
        Fcounter30=1; Pcounter30=0; NTcounter30=0; NDcounter30=0
        FLevelA16= 1; PLevelA16=0; NTLevelA16=0; NDLevelA16=0
        ADLevelA16=1; VLevelA16=0; ETLevelA16=0

        FVisionImpairment30=0; PVisionImpairment30=0; NDVisionImpairment30=0; NTVisionImpairment30=0   
        FHearingDifficulty30=1; PHearingDifficulty30=0; NDHearingDifficulty30=0; NTHearingDifficulty30=0  
        FCognitiveDisability30=0; PCognitiveDisability30=0; NDCognitiveDisability30=0; NTCognitiveDisability30=0
        FMotionDisability30=0; PMotionDisability30=0; NDMotionDisability30=0; NTMotionDisability30=0
        FLearningDisability30=0; PLearningDisability30=0; NDLearningDisability30=0; NTLearningDisability30=0
          
        Frame36=Frame(main_fm, bg='white', width=380, height=25)
        Frame36.place(x=10, y=105, width=380, height=25)
        Lable36= Label(Frame36, text='Sc (1.2.2) Captions (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable36.grid(row=0, column=0)
        Framee36=Frame(main_fm, bg='white', width=110, height=25)
        Framee36.place(x=400, y=105, width=110, height=25)
        Lablee36=Label(Framee36, text=audioControlsAlt_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lablee36.grid(row=0, column=0)
        Frameee36=Frame(main_fm, bg='white', width=480, height=25)
        Frameee36.place(x=530, y=105, width=480, height=25)
        Lableee36= Label(Frameee36, text='Audio/Video Caption is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee36.grid(row=0, column=0)
        Frameeee36=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee36.place(x=1030, y=105, width=130, height=25)
        Lableeee36=Label(Frameeee36, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee36.grid(row=0, column=0)
        Frameeeee36=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee36.place(x=1180, y=105, width=80, height=25)
        Lableeeee36=Label(Frameeeee36, text=audioControlsAlt_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee36.grid(row=0, column=0)
        Frameeeeee36=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee36.place(x=1280, y=105, width=150, height=25)
        Lableeeeee36=Label(Frameeeeee36, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee36.grid(row=0, column=0)
        Frameeeeeee36=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee36.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee36=Label(Frameeeeeee36, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee36.grid(row=0, column=0)
        Frameeeeeeee36=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee36.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee36=Label(Frameeeeeeee36, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee36.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.2 Captions (Prerecorded); Webpage has no Audio Content')
        NDcounter30=1; Pcounter30=0; Fcounter30=0; NTcounter30=0
        NDLevelA16=1; PLevelA16=0; FLevelA16=0; NTLevelA16=0
        VLevelA16=1; ADLevelA16=0; ETLevelA16=0

        NDVisionImpairment30=0; PVisionImpairment30=0; FVisionImpairment30=0; NTVisionImpairment30=0   
        NDHearingDifficulty30=1; PHearingDifficulty30=0; FHearingDifficulty30=0; NTHearingDifficulty30=0 
        NDCognitiveDisability30=0; PCognitiveDisability30=0; FCognitiveDisability30=0; NTCognitiveDisability30=0
        NDMotionDisability30=0; PMotionDisability30=0; FMotionDisability30=0; NTMotionDisability30=0
        NDLearningDisability30=0; PLearningDisability30=0; FLearningDisability30=0; NTLearningDisability30=0
        
        Frame36=Frame(main_fm, bg='white', width=380, height=25)
        Frame36.place(x=10, y=105, width=380, height=25)
        Lable36=Label(Frame36, text='Sc (1.2.2) Captions (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable36.grid(row=0, column=0)
        Framee36=Frame(main_fm, bg='white', width=110, height=25)
        Framee36.place(x=400, y=105, width=110, height=25)
        Lablee36=Label(Framee36, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee36.grid(row=0, column=0)
        Frameee36=Frame(main_fm, bg='white', width=480, height=25)
        Frameee36.place(x=530, y=105, width=480, height=25)
        Lableee36=Label(Frameee36, text='Webpage has no Audio/Video Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee36.grid(row=0, column=0)
        Frameeee36=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee36.place(x=1030, y=105, width=130, height=25)
        Lableeee36=Label(Frameeee36, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee36.grid(row=0, column=0)
        Frameeeee36=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee36.place(x=1180, y=105, width=80, height=25)
        Lableeeee36=Label(Frameeeee36, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee36.grid(row=0, column=0)
        Frameeeeee36=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee36.place(x=1280, y=105, width=150, height=25)
        Lableeeeee36=Label(Frameeeeee36, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee36.grid(row=0, column=0)
        Frameeeeeee36=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee36.place(x=1450, y=105, width=210, height=25)
        Lableeeeeee36=Label(Frameeeeeee36, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee36.grid(row=0, column=0)
        Frameeeeeeee36=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee36.place(x=1680, y=105, width=230, height=25)
        Lableeeeeeee36=Label(Frameeeeeeee36, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee36.grid(row=0, column=0)


            ####===========================Guideline 1.2.3 (level A)====================================####

      global audioDescription_totalCount

      counter=0
      audioDescription_Failed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                    
        for item in audio:
          if (item['alt'] == ' '):
            counter+=1  
            audioDescription_Failed=counter                        
      print('Number of Passed Guideline for Audio Description', audioDescription_Failed)

      counter=0
      audioDescription_Passed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                   
        for item in audio:
          if (item['alt'] != ''):
            counter+=1  
            audioDescription_Passed=counter                       
      print('Number of Passed Guideline for Audio Description', audioDescription_Passed)

      audioDescription_totalCount=audioDescription_Failed+audioDescription_Passed
      print('The total count of checked for Audio Description:', audioDescription_totalCount)

      if(audioDescription_Failed>0):
        print('Fail: Guideline 1.2.3 Audio Description or Media Alternative (Prerecorded); Audio description is missing')
        Fcounter31=1; Pcounter31=0; NTcounter31=0; NDcounter31=0
        FLevelA17= 1; PLevelA17=0; NTLevelA17=0; NDLevelA17=0
        ADLevelA17=1; VLevelA17=0; ETLevelA17=0

        PVisionImpairment31=1; FVisionImpairment31=0; NDVisionImpairment31=0; NTVisionImpairment31=0   
        PHearingDifficulty31=0; FHearingDifficulty31=0; NDHearingDifficulty31=0; NTHearingDifficulty31=0 
        PCognitiveDisability31=0; FCognitiveDisability31=0; NDCognitiveDisability31=0; NTCognitiveDisability31=0
        PMotionDisability31=0; FMotionDisability31=0; NDMotionDisability31=0; NTMotionDisability31=0
        PLearningDisability31=0; FLearningDisability31=0; NDLearningDisability31=0; NTLearningDisability31=0
          
        Frame37=Frame(main_fm, bg='white', width=380, height=25)
        Frame37.place(x=10, y=130, width=380, height=25)
        Lable37=Label(Frame37, text='Sc (1.2.3) Audio Description or Media Alternative', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable37.grid(row=0, column=0)
        Framee37=Frame(main_fm, bg='white', width=110, height=25)
        Framee37.place(x=400, y=130, width=110, height=25)
        Lablee37=Label(Framee37, text=audioDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee37.grid(row=0, column=0)
        Frameee37=Frame(main_fm, bg='white', width=480, height=25)
        Frameee37.place(x=530, y=130, width=480, height=25)
        Lableee37=Label(Frameee37, text='Audio Description is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee37.grid(row=0, column=0)
        Frameeee37=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee37.place(x=1030, y=130, width=130, height=25)
        Lableeee37=Label(Frameeee37, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee37.grid(row=0, column=0)
        Frameeeee37=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee37.place(x=1180, y=130, width=80, height=25)
        Lableeeee37=Label(Frameeeee37, text=audioDescription_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee37.grid(row=0, column=0)
        Frameeeeee37=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee37.place(x=1280, y=130, width=150, height=25)
        Lableeeeee37=Label(Frameeeeee37, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee37.grid(row=0, column=0)
        Frameeeeeee37=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee37.place(x=1450, y=130, width=210, height=25)
        Lableeeeeee37=Label(Frameeeeeee37, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee37.grid(row=0, column=0)
        Frameeeeeeee37=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee37.place(x=1680, y=130, width=230, height=25)
        Lableeeeeeee37=Label(Frameeeeeeee37, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee37.grid(row=0, column=0)
      elif (audioDescription_Failed<=0 and audioDescription_Passed>=1):
        print('Pass: Guideline 1.2.3 Audio Description or Media Alternative (Prerecorded); Audio has description')
        Pcounter31=1; Fcounter31=0; NTcounter31=0; NDcounter31=0
        PLevelA17=1; FLevelA17=0; NTLevelA17=0; NDLevelA17=0
        VLevelA17=1; ADLevelA17=0; ETLevelA17=0

        PVisionImpairment31=1; FVisionImpairment31=0; NDVisionImpairment31=0; NTVisionImpairment31=0   
        PHearingDifficulty31=0; FHearingDifficulty31=0; NDHearingDifficulty31=0; NTHearingDifficulty31=0 
        PCognitiveDisability31=0; FCognitiveDisability31=0; NDCognitiveDisability31=0; NTCognitiveDisability31=0
        PMotionDisability31=0; FMotionDisability31=0; NDMotionDisability31=0; NTMotionDisability31=0
        PLearningDisability31=0; FLearningDisability31=0; NDLearningDisability31=0; NTLearningDisability31=0
          
        Frame37=Frame(main_fm, bg='white', width=380, height=25)
        Frame37.place(x=10, y=130, width=380, height=25)
        Lable37=Label(Frame37, text='Sc (1.2.3) Audio Description or Media Alternative', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable37.grid(row=0, column=0)
        Framee37=Frame(main_fm, bg='white', width=110, height=25)
        Framee37.place(x=400, y=130, width=110, height=25)
        Lablee37=Label(Framee37, text=audioDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee37.grid(row=0, column=0)
        Frameee37=Frame(main_fm, bg='white', width=480, height=25)
        Frameee37.place(x=530, y=130, width=480, height=25)
        Lableee37=Label(Frameee37, text='Audio has Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee37.grid(row=0, column=0)
        Frameeee37=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee37.place(x=1030, y=130, width=130, height=25)
        Lableeee37=Label(Frameeee37, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee37.grid(row=0, column=0)
        Frameeeee37=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee37.place(x=1180, y=130, width=80, height=25)
        Lableeeee37=Label(Frameeeee37, text=audioDescription_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee37.grid(row=0, column=0)
        Frameeeeee37=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee37.place(x=1280, y=130, width=150, height=25)
        Lableeeeee37=Label(Frameeeeee37, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee37.grid(row=0, column=0)
        Frameeeeeee37=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee37.place(x=1450, y=130, width=210, height=25)
        Lableeeeeee37=Label(Frameeeeeee37, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee37.grid(row=0, column=0)
        Frameeeeeeee37=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee37.place(x=1680, y=130, width=230, height=25)
        Lableeeeeeee37=Label(Frameeeeeeee37, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee37.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.3 Audio Description or Media Alternative (Prerecorded); Webpage has no Audio Content')
        NDcounter31=1; Pcounter31=0; Fcounter31=0; NTcounter31=0
        NDLevelA17=1; PLevelA17=0; FLevelA17=0; NTLevelA17=0
        VLevelA17=1; ADLevelA17=0; ETLevelA17=0

        NDVisionImpairment31=1 ; PVisionImpairment31=0; FVisionImpairment31=0; NTVisionImpairment31=0   
        NDHearingDifficulty31=0; PHearingDifficulty31=0; FHearingDifficulty31=0; NTHearingDifficulty31=0 
        NDCognitiveDisability31=0; PCognitiveDisability31=0; FCognitiveDisability31=0; NTCognitiveDisability31=0
        NDMotionDisability31=0; PMotionDisability31=0; FMotionDisability31=0; NTMotionDisability31=0
        NDLearningDisability31=0; PLearningDisability31=0; FLearningDisability31=0; NTLearningDisability31=0
        
        Frame37=Frame(main_fm, bg='white', width=380, height=25)
        Frame37.place(x=10, y=130, width=380, height=25)
        Lable37=Label(Frame37, text='Sc (1.2.3) Audio Description or Media Alternative', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable37.grid(row=0, column=0)
        Framee37=Frame(main_fm, bg='white', width=110, height=25)
        Framee37.place(x=400, y=130, width=110, height=25)
        Lablee37=Label(Framee37, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee37.grid(row=0, column=0)
        Frameee37=Frame(main_fm, bg='white', width=480, height=25)
        Frameee37.place(x=530, y=130, width=480, height=25)
        Lableee37=Label(Frameee37, text='Webpage has no Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee37.grid(row=0, column=0)
        Frameeee37=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee37.place(x=1030, y=130, width=130, height=25)
        Lableeee37=Label(Frameeee37, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee37.grid(row=0, column=0)
        Frameeeee37=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee37.place(x=1180, y=130, width=80, height=25)
        Lableeeee37=Label(Frameeeee37, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee37.grid(row=0, column=0)
        Frameeeeee37=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee37.place(x=1280, y=130, width=150, height=25)
        Lableeeeee37=Label(Frameeeeee37, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee37.grid(row=0, column=0)
        Frameeeeeee37=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee37.place(x=1450, y=130, width=210, height=25)
        Lableeeeeee37=Label(Frameeeeeee37, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee37.grid(row=0, column=0)
        Frameeeeeeee37=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee37.place(x=1680, y=130, width=230, height=25)
        Lableeeeeeee37=Label(Frameeeeeeee37, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee37.grid(row=0, column=0)


            ####===========================Guideline 1.2.4 (level AA)====================================####
      global audioLiveCaption_totalCount

      counter=0
      audioLiveCaption_Passed=0
      audio = soup.find_all('audio')
      video = soup.find_all('video')
      if((audio !=[]) and (video !=[])):                         
        for item in audio and video:
          if (item['alt'] != ''):
            counter+=1  
            audioLiveCaption_Passed=counter                        
      print('Number of Passed Guideline for Audio (Live) Caption:', audioLiveCaption_Passed)
      
      counter=0
      audioLiveCption_Failed=0
      audio = soup.find_all('audio')
      video = soup.find_all('video')
      if((audio !=[]) and (video !=[])):                         
        for item in audio:
          if (item['alt'] == ''):
            counter+=1  
            audioLiveCption_Failed=counter                           
      print('Number of Failed Guideline for Audio (Live) Caption:', audioLiveCption_Failed)

      audioLiveCaption_totalCount=audioLiveCaption_Passed+audioLiveCption_Failed
      print('Total Checked for Audio Controls ALT:',audioLiveCaption_totalCount)

      if (audioLiveCption_Failed<=0 and audioLiveCaption_Passed>=1):
        print('Pass: Guideline 1.2.4 Captions (Live); Live Audio/Video Caption is Specified')
        Pcounter32=1; Fcounter32=0; NTcounter32=0; NDcounter32=0
        PLevelAA8=1; FLevelAA8=0; NTLevelAA8=0; NDLevelAA8=0
        VLevelAA8=1; ADLevelAA8=0; ETLevelAA8=0

        PVisionImpairment32=0; FVisionImpairment32=0; NDVisionImpairment32=0; NTVisionImpairment32=0   
        PHearingDifficulty32=1; FHearingDifficulty32=0; NDHearingDifficulty32=0; NTHearingDifficulty32=0  
        PCognitiveDisability32=0; FCognitiveDisability32=0; NDCognitiveDisability32=0; NTCognitiveDisability32=0
        PMotionDisability32=0; FMotionDisability32=0; NDMotionDisability32=0; NTMotionDisability32=0
        PLearningDisability32=0; FLearningDisability32=0; NDLearningDisability32=0; NTLearningDisability32=0
          
        Frame38=Frame(main_fm, bg='white', width=380, height=25)
        Frame38.place(x=10, y=155, width=380, height=25)
        Lable38=Label(Frame38, text='Sc (1.2.4) Captions (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable38.grid(row=0, column=0)
        Framee38=Frame(main_fm, bg='white', width=110, height=25)
        Framee38.place(x=400, y=155, width=110, height=25)
        Lablee38=Label(Framee38, text=audioLiveCaption_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lablee38.grid(row=0, column=0)
        Frameee38=Frame(main_fm, bg='white', width=480, height=25)
        Frameee38.place(x=530, y=155, width=480, height=25)
        Lableee38=Label(Frameee38, text='Live Audio/Video Caption is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee38.grid(row=0, column=0)
        Frameeee38=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee38.place(x=1030, y=155, width=130, height=25)
        Lableeee38=Label(Frameeee38, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee38.grid(row=0, column=0)
        Frameeeee38=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee38.place(x=1180, y=155, width=80, height=25)
        Lableeeee38=Label(Frameeeee38, text=audioLiveCaption_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee38.grid(row=0, column=0)
        Frameeeeee38=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee38.place(x=1280, y=155, width=150, height=25)
        Lableeeeee38=Label(Frameeeeee38, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee38.grid(row=0, column=0)
        Frameeeeeee38=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee38.place(x=1450, y=155, width=210, height=25)
        Lableeeeeee38=Label(Frameeeeeee38, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee38.grid(row=0, column=0)
        Frameeeeeeee38=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee38.place(x=1680, y=155, width=230, height=25)
        Lableeeeeeee38=Label(Frameeeeeeee38, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee38.grid(row=0, column=0)
      elif (audioLiveCption_Failed>0):
        print('Fail: Guideline 1.2.4 Captions (Live); Audio Caption is Missing')
        Fcounter32=1; Pcounter32=0; NTcounter32=0; NDcounter32=0
        FLevelAA8=1; PLevelAA8=0; NTLevelAA8=0; NDLevelAA8=0
        ADLevelAA8=1; VLevelAA8=0; ETLevelAA8=0

        FVisionImpairment32=0; PVisionImpairment32=0; NDVisionImpairment32=0; NTVisionImpairment32=0   
        FHearingDifficulty32=1; PHearingDifficulty32=0; NDHearingDifficulty32=0; NTHearingDifficulty32=0  
        FCognitiveDisability32=0; PCognitiveDisability32=0; NDCognitiveDisability32=0; NTCognitiveDisability32=0
        FMotionDisability32=0; PMotionDisability32=0; NDMotionDisability32=0; NTMotionDisability32=0
        FLearningDisability32=0; PLearningDisability32=0; NDLearningDisability32=0; NTLearningDisability32=0
          
        Frame38=Frame(main_fm, bg='white', width=380, height=25)
        Frame38.place(x=10, y=155, width=380, height=25)
        Lable38=Label(Frame38, text='Sc (1.2.4) Captions (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable38.grid(row=0, column=0)
        Framee38=Frame(main_fm, bg='white', width=110, height=25)
        Framee38.place(x=400, y=155, width=110, height=25)
        Lablee38=Label(Framee38, text=audioLiveCaption_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lablee38.grid(row=0, column=0)
        Frameee38=Frame(main_fm, bg='white', width=480, height=25)
        Frameee38.place(x=530, y=155, width=480, height=25)
        Lableee38=Label(Frameee38, text='Live Audio/Video Caption is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee38.grid(row=0, column=0)
        Frameeee38=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee38.place(x=1030, y=155, width=130, height=25)
        Lableeee38=Label(Frameeee38, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee38.grid(row=0, column=0)
        Frameeeee38=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee38.place(x=1180, y=155, width=80, height=25)
        Lableeeee38=Label(Frameeeee38, text=audioLiveCption_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee38.grid(row=0, column=0)
        Frameeeeee38=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee38.place(x=1280, y=155, width=150, height=25)
        Lableeeeee38=Label(Frameeeeee38, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee38.grid(row=0, column=0)
        Frameeeeeee38=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee38.place(x=1450, y=155, width=210, height=25)
        Lableeeeeee38=Label(Frameeeeeee38, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee38.grid(row=0, column=0)
        Frameeeeeeee38=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee38.place(x=1680, y=155, width=230, height=25)
        Lableeeeeeee38=Label(Frameeeeeeee38, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee38.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.4 Captions (Live); Webpage has no Audio Content') 
        NDcounter32=1; Pcounter32=0; Fcounter32=0; NTcounter32=0
        NDLevelAA8=1; FLevelAA8=0; PLevelAA8=0; NTLevelAA8=0 
        VLevelAA8=1; ADLevelAA8=0; ETLevelAA8=0

        NDVisionImpairment32=0; PVisionImpairment32=0; FVisionImpairment32=0; NTVisionImpairment32=0   
        NDHearingDifficulty32=1; PHearingDifficulty32=0; FHearingDifficulty32=0; NTHearingDifficulty32=0 
        NDCognitiveDisability32=0; PCognitiveDisability32=0; FCognitiveDisability32=0; NTCognitiveDisability32=0
        NDMotionDisability32=0; PMotionDisability32=0; FMotionDisability32=0; NTMotionDisability32=0
        NDLearningDisability32=0; PLearningDisability32=0; FLearningDisability32=0; NTLearningDisability32=0
          
        Frame38=Frame(main_fm, bg='white', width=380, height=25)
        Frame38.place(x=10, y=155, width=380, height=25)
        Lable38=Label(Frame38, text='Sc (1.2.4) Captions (Live)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable38.grid(row=0, column=0)
        Framee38=Frame(main_fm, bg='white', width=110, height=25)
        Framee38.place(x=400, y=155, width=110, height=25)
        Lablee38=Label(Framee38, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee38.grid(row=0, column=0)
        Frameee38=Frame(main_fm, bg='white', width=480, height=25)
        Frameee38.place(x=530, y=155, width=480, height=25)
        Lableee38=Label(Frameee38, text='Wbpage has no Live Audio/Video Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee38.grid(row=0, column=0)
        Frameeee38=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee38.place(x=1030, y=155, width=130, height=25)
        Lableeee38=Label(Frameeee38, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee38.grid(row=0, column=0)
        Frameeeee38=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee38.place(x=1180, y=155, width=80, height=25)
        Lableeeee38=Label(Frameeeee38, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee38.grid(row=0, column=0)
        Frameeeeee38=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee38.place(x=1280, y=155, width=150, height=25)
        Lableeeeee38=Label(Frameeeeee38, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee38.grid(row=0, column=0)
        Frameeeeeee38=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee38.place(x=1450, y=155, width=210, height=25)
        Lableeeeeee38=Label(Frameeeeeee38, text='Hearing Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee38.grid(row=0, column=0)
        Frameeeeeeee38=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee38.place(x=1680, y=155, width=230, height=25)
        Lableeeeeeee38=Label(Frameeeeeeee38, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee38.grid(row=0, column=0)



      ####===========================Guideline 1.2.5 (level AA); 1.2.7 (level AAA)====================================####

      global audioPrerecordedDescription_totalCount

      counter=0
      audioPrerecordedDescription_Failed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                    
        for item in audio:
          if (item['alt']== ''):
            counter+=1  
            audioPrerecordedDescription_Failed=counter                       
      print('Number of Passed Guideline for Audio Prerecorded Description', audioPrerecordedDescription_Failed)

      counter=0
      audioPrerecordedDescription_Passed=0
      audio = soup.find_all('audio')
      if(audio !=[]):                    
        for item in audio:
          if (item['alt'] != ''):
            counter+=1  
            audioPrerecordedDescription_Passed=counter                        
      print('Number of Passed Guideline for Audio Prerecorded Description', audioPrerecordedDescription_Passed)

      audioPrerecordedDescription_totalCount=audioPrerecordedDescription_Failed+audioPrerecordedDescription_Passed
      print('The total count of checked for Audio Controls:', audioPrerecordedDescription_totalCount)

      if(audioPrerecordedDescription_Failed>0):
        print('Fail: Guideline 1.2.5 Audio Description (Prerecorded); Audio description is missing')  ## Blind/Visual Impairment
        Fcounter33=1; Pcounter33=0; NTcounter33=0; NDcounter33=0
        FLevelAA9=1; PLevelAA9=0; NTLevelAA9=0; NDLevelAA9=0
        ADLevelAA9=1; VLevelAA9=0; ETLevelAA9=0

        FVisionImpairment33=1; PVisionImpairment33=0; NDVisionImpairment33=0; NTVisionImpairment33=0   
        FHearingDifficulty33=0; PHearingDifficulty33=0; NDHearingDifficulty33=0; NTHearingDifficulty33=0 
        FCognitiveDisability33=0; PCognitiveDisability33=0; NDCognitiveDisability33=0; NTCognitiveDisability33=0
        FMotionDisability33=0; PMotionDisability33=0; NDMotionDisability33=0; NTMotionDisability33=0
        FLearningDisability33=0; PLearningDisability33=0; NDLearningDisability33=0; NTLearningDisability33=0
          
        Frame39=Frame(main_fm, bg='white', width=380, height=25)
        Frame39.place(x=10, y=180, width=380, height=25)
        Lable39=Label(Frame39, text='Sc (1.2.5) Audio Description (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable39.grid(row=0, column=0)
        Framee39=Frame(main_fm, bg='white', width=110, height=25)
        Framee39.place(x=400, y=180, width=110, height=25)
        Lablee39=Label(Framee39, text=audioPrerecordedDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee39.grid(row=0, column=0)
        Frameee39=Frame(main_fm, bg='white', width=480, height=25)
        Frameee39.place(x=530, y=180, width=480, height=25)
        Lableee39=Label(Frameee39, text='Prerecorded Audio Description is missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee39.grid(row=0, column=0)
        Frameeee39=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee39.place(x=1030, y=180, width=130, height=25)
        Lableeee39=Label(Frameeee39, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee39.grid(row=0, column=0)
        Frameeeee39=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee39.place(x=1180, y=180, width=80, height=25)
        Lableeeee39=Label(Frameeeee39, text=audioPrerecordedDescription_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee39.grid(row=0, column=0)
        Frameeeeee39=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee39.place(x=1280, y=180, width=150, height=25)
        Lableeeeee39=Label(Frameeeeee39, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee39.grid(row=0, column=0)
        Frameeeeeee39=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee39.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee39=Label(Frameeeeeee39, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee39.grid(row=0, column=0)
        Frameeeeeeee39=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee39.place(x=1680, y=180, width=230, height=25)
        Lableeeeeeee39=Label(Frameeeeeeee39, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee39.grid(row=0, column=0)
        print('Fail: Guideline 1.2.7 Extended Audio Description (Prerecorded); Audio description is missing') ## Blind/Visual Impairment
        Fcounter34=1; Pcounter34=0; NTcounter34=0; NDcounter34=0
        FLevelAAA8=1; PLevelAAA8=0; NTLevelAAA8=0; NDLevelAAA8=0
        ADLevelAAA8=1; VLevelAAA8=0; ETLevelAAA8=0

        FVisionImpairment34=1; PVisionImpairment34=0; NDVisionImpairment34=0; NTVisionImpairment34=0   
        FHearingDifficulty34=0; PHearingDifficulty34=0; NDHearingDifficulty34=0; NTHearingDifficulty34=0 
        FCognitiveDisability34=0; PCognitiveDisability34=0; NDCognitiveDisability34=0; NTCognitiveDisability34=0
        FMotionDisability34=0; PMotionDisability34=0; NDMotionDisability34=0; NTMotionDisability34=0
        FLearningDisability34=0; PLearningDisability34=0; NDLearningDisability34=0; NTLearningDisability34=0
          
        Frame40=Frame(main_fm, bg='white', width=380, height=25)
        Frame40.place(x=10, y=205, width=380, height=25)
        Lable40=Label(Frame40, text='Sc (1.2.7) Extended Audio Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable40.grid(row=0, column=0)
        Framee40=Frame(main_fm, bg='white', width=110, height=25)
        Framee40.place(x=400, y=205, width=110, height=25)
        Lablee40=Label(Framee40, text=audioPrerecordedDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee40.grid(row=0, column=0)
        Frameee40=Frame(main_fm, bg='white', width=480, height=25)
        Frameee40.place(x=530, y=205, width=480, height=25)
        Lableee40=Label(Frameee40, text='Extended Audio Description is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee40.grid(row=0, column=0)
        Frameeee40=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee40.place(x=1030, y=205, width=130, height=25)
        Lableeee40=Label(Frameeee40, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee40.grid(row=0, column=0)
        Frameeeee40=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee40.place(x=1180, y=205, width=80, height=25)
        Lableeeee40=Label(Frameeeee40, text=audioPrerecordedDescription_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee40.grid(row=0, column=0)
        Frameeeeee40=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee40.place(x=1280, y=205, width=150, height=25)
        Lableeeeee40=Label(Frameeeeee40, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee40.grid(row=0, column=0)
        Frameeeeeee40=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee40.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee40=Label(Frameeeeeee40, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee40.grid(row=0, column=0)
        Frameeeeeeee40=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee40.place(x=1680, y=205, width=230, height=25)
        Lableeeeeeee40=Label(Frameeeeeeee40, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee40.grid(row=0, column=0)
      elif (audioPrerecordedDescription_Failed<=0 and audioPrerecordedDescription_Passed>=1):
        print('Pass: Guideline 1.2.5 Audio Description (Prerecorded); Audio has description')
        Pcounter33=1; Fcounter33=0; NTcounter33=0; NDcounter33=0
        PLevelAA9=1; FLevelAA9=0; NTLevelAA9=0; NDLevelAA9=0
        VLevelAA9=1; ADLevelAA9=0; ETLevelAA9=0

        PVisionImpairment33=1; FVisionImpairment33=0; NDVisionImpairment33=0; NTVisionImpairment33=0   
        PHearingDifficulty33=0; FHearingDifficulty33=0; NDHearingDifficulty33=0; NTHearingDifficulty33=0 
        PCognitiveDisability33=0; FCognitiveDisability33=0; NDCognitiveDisability33=0; NTCognitiveDisability33=0
        PMotionDisability33=0; FMotionDisability33=0; NDMotionDisability33=0; NTMotionDisability33=0
        PLearningDisability33=0; FLearningDisability33=0; NDLearningDisability33=0; NTLearningDisability33=0
          
        Frame39=Frame(main_fm, bg='white', width=380, height=25)
        Frame39.place(x=10, y=180, width=380, height=25)
        Lable39=Label(Frame39, text='Sc (1.2.5) Audio Description (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable39.grid(row=0, column=0)
        Framee39=Frame(main_fm, bg='white', width=110, height=25)
        Framee39.place(x=400, y=180, width=110, height=25)
        Lablee39=Label(Framee39, text=audioPrerecordedDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee39.grid(row=0, column=0)
        Frameee39=Frame(main_fm, bg='white', width=480, height=25)
        Frameee39.place(x=530, y=180, width=480, height=25)
        Lableee39=Label(Frameee39, text='Prerecorded Audio has Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee39.grid(row=0, column=0)
        Frameeee39=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee39.place(x=1030, y=180, width=130, height=25)
        Lableeee39=Label(Frameeee39, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee39.grid(row=0, column=0)
        Frameeeee39=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee39.place(x=1180, y=180, width=80, height=25)
        Lableeeee39=Label(Frameeeee39, text=audioPrerecordedDescription_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee39.grid(row=0, column=0)
        Frameeeeee39=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee39.place(x=1280, y=180, width=150, height=25)
        Lableeeeee39=Label(Frameeeeee39, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee39.grid(row=0, column=0)
        Frameeeeeee39=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee39.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee39=Label(Frameeeeeee39, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee39.grid(row=0, column=0)
        Frameeeeeeee39=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee39.place(x=1680, y=180, width=230, height=25)
        Lableeeeeeee39=Label(Frameeeeeeee39, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee39.grid(row=0, column=0)
        print('Pass: Guideline 1.2.7 Extended Audio Description (Prerecorded); Audio has description')
        Pcounter34=1; Fcounter34=0; NTcounter34=0; NDcounter34=0
        PLevelAAA8=1; FLevelAAA8=0; NTLevelAAA8=0; NDLevelAAA8=0
        VLevelAAA8=1; ADLevelAAA8=0; ETLevelAAA8=0

        PVisionImpairment34=1; FVisionImpairment34=0; NDVisionImpairment34=0; NTVisionImpairment34=0   
        PHearingDifficulty34=0; FHearingDifficulty34=0; NDHearingDifficulty34=0; NTHearingDifficulty34=0 
        PCognitiveDisability34=0; FCognitiveDisability34=0; NDCognitiveDisability34=0; NTCognitiveDisability34=0
        PMotionDisability34=0; FMotionDisability34=0; NDMotionDisability34=0; NTMotionDisability34=0
        PLearningDisability34=0; FLearningDisability34=0; NDLearningDisability34=0; NTLearningDisability34=0
          
        Frame40=Frame(main_fm, bg='white', width=380, height=25)
        Frame40.place(x=10, y=205, width=380, height=25)
        Lable40=Label(Frame40, text='Sc (1.2.7) Extended Audio Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable40.grid(row=0, column=0)
        Framee40=Frame(main_fm, bg='white', width=110, height=25)
        Framee40.place(x=400, y=205, width=110, height=25)
        Lablee40=Label(Framee40, text=audioPrerecordedDescription_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee40.grid(row=0, column=0)
        Frameee40=Frame(main_fm, bg='white', width=480, height=25)
        Frameee40.place(x=530, y=205, width=480, height=25)
        Lableee40=Label(Frameee40, text='Audio has Extended Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee40.grid(row=0, column=0)
        Frameeee40=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee40.place(x=1030, y=205, width=130, height=25)
        Lableeee40=Label(Frameeee40, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee40.grid(row=0, column=0)
        Frameeeee40=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee40.place(x=1180, y=205, width=80, height=25)
        Lableeeee40=Label(Frameeeee40, text=audioPrerecordedDescription_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee40.grid(row=0, column=0)
        Frameeeeee40=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee40.place(x=1280, y=205, width=150, height=25)
        Lableeeeee40=Label(Frameeeeee40, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee40.grid(row=0, column=0)
        Frameeeeeee40=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee40.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee40=Label(Frameeeeeee40, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee40.grid(row=0, column=0)
        Frameeeeeeee40=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee40.place(x=1680, y=205, width=230, height=25)
        Lableeeeeeee40=Label(Frameeeeeeee40, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee40.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.2.5 Audio Description (Prerecorded); Webpage has no Audio Content')
        NDcounter33=1; Pcounter33=0; Fcounter33=0; NTcounter33=0
        NDLevelAA9=1; PLevelAA9=0; FLevelAA9=0; NTLevelAA9=0
        VLevelAA9=1; ADLevelAA9=0; ETLevelAA9=0

        NDVisionImpairment33=1 ; PVisionImpairment33=0; FVisionImpairment33=0; NTVisionImpairment33=0   
        NDHearingDifficulty33=0; PHearingDifficulty33=0; FHearingDifficulty33=0; NTHearingDifficulty33=0 
        NDCognitiveDisability33=0; PCognitiveDisability33=0; FCognitiveDisability33=0; NTCognitiveDisability33=0
        NDMotionDisability33=0; PMotionDisability33=0; FMotionDisability33=0; NTMotionDisability33=0
        NDLearningDisability33=0; PLearningDisability33=0; FLearningDisability33=0; NTLearningDisability33=0
        
        Frame39=Frame(main_fm, bg='white', width=380, height=25)
        Frame39.place(x=10, y=180, width=380, height=25)
        Lable39=Label(Frame39, text='Sc (1.2.5) Audio Description (Prerecorded)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable39.grid(row=0, column=0)
        Framee39=Frame(main_fm, bg='white', width=110, height=25)
        Framee39.place(x=400, y=180, width=110, height=25)
        Lablee39=Label(Framee39, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee39.grid(row=0, column=0)
        Frameee39=Frame(main_fm, bg='white', width=480, height=25)
        Frameee39.place(x=530, y=180, width=480, height=25)
        Lableee39=Label(Frameee39, text='Webpage has no Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee39.grid(row=0, column=0)
        Frameeee39=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee39.place(x=1030, y=180, width=130, height=25)
        Lableeee39=Label(Frameeee39, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee39.grid(row=0, column=0)
        Frameeeee39=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee39.place(x=1180, y=180, width=80, height=25)
        Lableeeee39=Label(Frameeeee39, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee39.grid(row=0, column=0)
        Frameeeeee39=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee39.place(x=1280, y=180, width=150, height=25)
        Lableeeeee39=Label(Frameeeeee39, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee39.grid(row=0, column=0)
        Frameeeeeee39=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee39.place(x=1450, y=180, width=210, height=25)
        Lableeeeeee39=Label(Frameeeeeee39, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee39.grid(row=0, column=0)
        Frameeeeeeee39=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee39.place(x=1680, y=180, width=230, height=25)
        Lableeeeeeee39=Label(Frameeeeeeee39, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee39.grid(row=0, column=0)
        print('Not Detected: Guideline 1.2.7 Extended Audio Description (Prerecorded); Webpage has no Audio Content')
        NDcounter34=1; Pcounter34=0; Fcounter34=0; NTcounter34=0
        NDLevelAAA8=1; PLevelAAA8=0; FLevelAAA8=0; NTLevelAAA8=0
        VLevelAAA8=1; ADLevelAAA8=0; ETLevelAAA8=0

        NDVisionImpairment34=1; PVisionImpairment34=0; FVisionImpairment34=0; NTVisionImpairment34=0  
        NDHearingDifficulty34=0; PHearingDifficulty34=0; FHearingDifficulty34=0; NTHearingDifficulty34=0;  
        NDCognitiveDisability34=0; PCognitiveDisability34=0; FCognitiveDisability34=0; NTCognitiveDisability34=0
        NDMotionDisability34=0; PMotionDisability34=0; FMotionDisability34=0; NTMotionDisability34=0
        NDLearningDisability34=0; PLearningDisability34=0; FLearningDisability34=0; NTLearningDisability34=0
        
        Frame40=Frame(main_fm, bg='white', width=380, height=25)
        Frame40.place(x=10, y=205, width=380, height=25)
        Lable40=Label(Frame40, text='Sc (1.2.7) Extended Audio Description', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable40.grid(row=0, column=0)
        Framee40=Frame(main_fm, bg='white', width=110, height=25)
        Framee40.place(x=400, y=205, width=110, height=25)
        Lablee40=Label(Framee40, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee40.grid(row=0, column=0)
        Frameee40=Frame(main_fm, bg='white', width=480, height=25)
        Frameee40.place(x=530, y=205, width=480, height=25)
        Lableee40=Label(Frameee40, text='Webpage has no Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee40.grid(row=0, column=0)
        Frameeee40=Frame(main_fm, bg='white', width=130, height=25)
        Frameeee40.place(x=1030, y=205, width=130, height=25)
        Lableeee40=Label(Frameeee40, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee40.grid(row=0, column=0)
        Frameeeee40=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee40.place(x=1180, y=205, width=80, height=25)
        Lableeeee40=Label(Frameeeee40, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee40.grid(row=0, column=0)
        Frameeeeee40=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee40.place(x=1280, y=205, width=150, height=25)
        Lableeeeee40=Label(Frameeeeee40, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee40.grid(row=0, column=0)
        Frameeeeeee40=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee40.place(x=1450, y=205, width=210, height=25)
        Lableeeeeee40=Label(Frameeeeeee40, text='Vision Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee40.grid(row=0, column=0)
        Frameeeeeeee40=Frame(main_fm, bg='white', width=230, height=25)
        Frameeeeeeee40.place(x=1680, y=205, width=230, height=25)
        Lableeeeeeee40=Label(Frameeeeeeee40, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee40.grid(row=0, column=0)


      ##TEXTUAL CONTENT ANALYSIS##---------------------------
      global Title_final
      global Bodywords_final
      global Titletext
      global Final_Body_text

      Title_text = soup.find_all('title')
      for titleitem in Title_text:
        Titletext=titleitem.get_text()
        print('Title:', Titletext)
        Title_final=re.sub('(?<![w])(?:[a-zA-Z0-9](?: |$))', '', Titletext)
        print('Final Title:', Title_final)
        
 
        # # printing resultant string
        # print("Resultant list is : " + str(Title_final))


      Body_text= soup.find_all('p')
      Body_text1= (list(itertools.chain.from_iterable(Body_text)))
      Final_Body_text = re.sub('[^a-zA-Z]', ' ', str(Body_text1))
      print('Body:',Final_Body_text)
      Bodywords_final=re.sub('(?<![\\w])(?:[a-zA-Z0-9](?: |$))', '', Final_Body_text)
      print('Final Body:', Bodywords_final)


    ####===========================Guideline 1.3.2 (level A)====================================####

      tool = language_tool_python.LanguageTool('en-US')   

      counter=0
      titleText_Passed=0
      matches_title = tool.check(Title_final)
      print(matches_title)
      if(matches_title ==[]):
        counter+=1  
        titleText_Passed=counter                        
      print('Number of Passed Guideline for Title Text:',titleText_Passed)

      counter=0
      titleText_Failed=0
      if(matches_title !=[]):
        counter+=1  
        titleText_Failed=counter                        
      print('Number of Failed Guideline for Title Text:',titleText_Failed)

      titleText_totalCount= len(re. findall(r'\w+', Title_final))
      print('The total count of checked for Title Text:', titleText_totalCount)

      if(titleText_Failed<=0 and titleText_Passed>=1):
        print('Pass: Guideline 1.3.2 Meaningful Sequence; Webpage Title Words have Meaningful Sequence')
        Frame41=Frame(main_fm, bg='white', width=380, height=25) 
        Frame41.place(x=10, y=230, width=380, height=25)
        Lable41=Label(Frame41, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable41.grid(row=0, column=0) 
        Framee41=Frame(main_fm, bg='white', width=110, height=25)
        Framee41.place(x=400, y=230, width=110, height=25)
        Lablee41=Label(Framee41, text=titleText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee41.grid(row=0, column=0) 
        Frameee41=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee41.place(x=530, y=230, width=480, height=25)
        Lableee41=Label(Frameee41, text='Webpage Title Words have Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee41.grid(row=0, column=0) 
        Frameeee41=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee41.place(x=1030, y=230, width=130, height=25) 
        Lableeee41=Label(Frameeee41, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee41.grid(row=0, column=0) 
        Frameeeee41=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee41.place(x=1180, y=230, width=80, height=25)
        Lableeeee41=Label(Frameeeee41, text=titleText_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee41.grid(row=0, column=0)
        Frameeeeee41=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee41.place(x=1280, y=230, width=150, height=25)
        Lableeeeee41=Label(Frameeeeee41, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee41.grid(row=0, column=0)
        Frameeeeeee41=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee41.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee41=Label(Frameeeeeee41, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee41.grid(row=0, column=0)
        Frameeeeeeee41=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee41.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee41=Label(Frameeeeeeee41, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee41.grid(row=0, column=0)
      elif((titleText_Failed>=1 and titleText_Passed<=0) or (titleText_Failed>0)):
        print('Fail: Guideline 1.3.2 Meaningful Sequence; Webpage Title words have no Meaningful Sequence') 
        Frame41=Frame(main_fm, bg='white', width=380, height=25) 
        Frame41.place(x=10, y=230, width=380, height=25)
        Lable41=Label(Frame41, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable41.grid(row=0, column=0) 
        Framee41=Frame(main_fm, bg='white', width=110, height=25)
        Framee41.place(x=400, y=230, width=110, height=25)
        Lablee41=Label(Framee41, text=titleText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee41.grid(row=0, column=0) 
        Frameee41=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee41.place(x=530, y=230, width=480, height=25)
        Lableee41=Label(Frameee41, text='Webpage Title Words have no Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee41.grid(row=0, column=0)
        Frameeee41=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee41.place(x=1030, y=230, width=130, height=25) 
        Lableeee41=Label(Frameeee41,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee41.grid(row=0, column=0) 
        Frameeeee41=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee41.place(x=1180, y=230, width=80, height=25)
        Lableeeee41=Label(Frameeeee41, text=titleText_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee41.grid(row=0, column=0)
        Frameeeeee41=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee41.place(x=1280, y=230, width=150, height=25)
        Lableeeeee41=Label(Frameeeeee41, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee41.grid(row=0, column=0)
        Frameeeeeee41=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee41.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee41=Label(Frameeeeeee41, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee41.grid(row=0, column=0)
        Frameeeeeeee41=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee41.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee41=Label(Frameeeeeeee41, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee41.grid(row=0, column=0)
      else:
        print('Not Tested: Guideline 1.3.2 Meaningful Sequence; Webpage Title length is short to check Meaningful Sequence') 
        Frame41=Frame(main_fm, bg='white', width=380, height=25) 
        Frame41.place(x=10, y=230, width=380, height=25)
        Lable41=Label(Frame41, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable41.grid(row=0, column=0) 
        Framee41=Frame(main_fm, bg='white', width=110, height=25)
        Framee41.place(x=400, y=230, width=110, height=25)
        Lablee41=Label(Framee41, text=titleText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee41.grid(row=0, column=0) 
        Frameee41=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee41.place(x=530, y=230, width=480, height=25)
        Lableee41=Label(Frameee41, text='Webpage Title Length is Short to Check Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee41.grid(row=0, column=0)
        Frameeee41=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee41.place(x=1030, y=230, width=130, height=25) 
        Lableeee41=Label(Frameeee41,text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee41.grid(row=0, column=0) 
        Frameeeee41=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee41.place(x=1180, y=230, width=80, height=25)
        Lableeeee41=Label(Frameeeee41, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee41.grid(row=0, column=0)
        Frameeeeee41=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee41.place(x=1280, y=230, width=150, height=25)
        Lableeeeee41=Label(Frameeeeee41, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee41.grid(row=0, column=0)
        Frameeeeeee41=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee41.place(x=1450, y=230, width=210, height=25)
        Lableeeeeee41=Label(Frameeeeeee41, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee41.grid(row=0, column=0)
        Frameeeeeeee41=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee41.place(x=1680, y=230, width=230, height=25)   
        Lableeeeeeee41=Label(Frameeeeeeee41, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee41.grid(row=0, column=0)



      #####--------------------(level A)----------------------------####
    

      counter=0
      bodyText_Passed=0
      matches_body = tool.check(Bodywords_final) #Final_Body_text
      
      if (matches_body==[]):
        counter+=1  
        bodyText_Passed=counter                        
      print('Number of Passed Guideline for Body Text:',bodyText_Passed)

      counter=0
      bodyText_Failed=0
      matches_body = tool.check(Bodywords_final)
      #print(matches_body)
      if (matches_body !=[]):
        counter+=1  
        bodyText_Failed=counter                        
      print('Number of Failed Guideline for Body Text:', bodyText_Failed)

      bodyText_totalCount=len(re. findall(r'\w+', Bodywords_final))
      print('The total count of checked for Body Text:', bodyText_totalCount)

      if (bodyText_Failed<=0 and bodyText_Passed>=1):
        print('Pass: Guideline 1.3.2 Meaningful Sequence; Webpage content words have Meaningful Sequence')
        Frame42=Frame(main_fm, bg='white', width=380, height=25) 
        Frame42.place(x=10, y=255, width=380, height=25)
        Lable42=Label(Frame42, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable42.grid(row=0, column=0) 
        Framee42=Frame(main_fm, bg='white', width=110, height=25)
        Framee42.place(x=400, y=255, width=110, height=25)
        Lablee42=Label(Framee42, text=bodyText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee42.grid(row=0, column=0) 
        Frameee42=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee42.place(x=530, y=255, width=480, height=25)
        Lableee42=Label(Frameee42, text='Webpage Content Words have Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee42.grid(row=0, column=0)
        Frameeee42=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee42.place(x=1030, y=255, width=130, height=25) 
        Lableeee42=Label(Frameeee42, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee42.grid(row=0, column=0) 
        Frameeeee42=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee42.place(x=1180, y=255, width=80, height=25)
        Lableeeee42=Label(Frameeeee42, text=bodyText_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee42.grid(row=0, column=0)
        Frameeeeee42=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee42.place(x=1280, y=255, width=150, height=25)
        Lableeeeee42=Label(Frameeeeee42, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee42.grid(row=0, column=0)
        Frameeeeeee42=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee42.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee42=Label(Frameeeeeee42, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee42.grid(row=0, column=0)
        Frameeeeeeee42=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee42.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee42=Label(Frameeeeeeee42, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee42.grid(row=0, column=0)
      elif(bodyText_Failed>0):
        print('Fail: Guideline 1.3.2 Meaningful Sequence; Webpage content words have no Meaningful Sequence') 
        Frame42=Frame(main_fm, bg='white', width=380, height=25) 
        Frame42.place(x=10, y=255, width=380, height=25)
        Lable42=Label(Frame42, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable42.grid(row=0, column=0) 
        Framee42=Frame(main_fm, bg='white', width=110, height=25)
        Framee42.place(x=400, y=255, width=110, height=25)
        Lablee42=Label(Framee42, text=bodyText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee42.grid(row=0, column=0) 
        Frameee42=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee42.place(x=530, y=255, width=480, height=25)
        Lableee42=Label(Frameee42, text='Webpage Content Words have no Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee42.grid(row=0, column=0)
        Frameeee42=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee42.place(x=1030, y=255, width=130, height=25) 
        Lableeee42=Label(Frameeee42,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee42.grid(row=0, column=0)
        Frameeeee42=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee42.place(x=1180, y=255, width=80, height=25)
        Lableeeee42=Label(Frameeeee42, text=bodyText_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee42.grid(row=0, column=0) 
        Frameeeeee42=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee42.place(x=1280, y=255, width=150, height=25)
        Lableeeeee42=Label(Frameeeeee42, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee42.grid(row=0, column=0)
        Frameeeeeee42=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee42.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee42=Label(Frameeeeeee42, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee42.grid(row=0, column=0)
        Frameeeeeeee42=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee42.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee42=Label(Frameeeeeeee42, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee42.grid(row=0, column=0)
      #elif(bodyText_Failed==0 and bodyText_Passed==0):
      else:
        print('Not Tested: Guideline 1.3.2 Meaningful Sequence; Webpage content length is short to check Meaningful Sequence') 
        Frame42=Frame(main_fm, bg='white', width=380, height=25) 
        Frame42.place(x=10, y=255, width=380, height=25)
        Lable42=Label(Frame42, text='Sc (1.3.2) Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable42.grid(row=0, column=0) 
        Framee42=Frame(main_fm, bg='white', width=110, height=25)
        Framee42.place(x=400, y=255, width=110, height=25)
        Lablee42=Label(Framee42, text=bodyText_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee42.grid(row=0, column=0) 
        Frameee42=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee42.place(x=530, y=255, width=480, height=25)
        Lableee42=Label(Frameee42, text='Webpage Content Length is Short to Check Meaningful Sequence', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee42.grid(row=0, column=0)
        Frameeee42=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee42.place(x=1030, y=255, width=130, height=25) 
        Lableeee42=Label(Frameeee42,text='NOT TESTED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee42.grid(row=0, column=0)
        Frameeeee42=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee42.place(x=1180, y=255, width=80, height=25)
        Lableeeee42=Label(Frameeeee42, text=bodyText_totalCount, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee42.grid(row=0, column=0) 
        Frameeeeee42=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee42.place(x=1280, y=255, width=150, height=25)
        Lableeeeee42=Label(Frameeeeee42, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee42.grid(row=0, column=0)
        Frameeeeeee42=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee42.place(x=1450, y=255, width=210, height=25)
        Lableeeeeee42=Label(Frameeeeeee42, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee42.grid(row=0, column=0)
        Frameeeeeeee42=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee42.place(x=1680, y=255, width=230, height=25)   
        Lableeeeeeee42=Label(Frameeeeeeee42, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee42.grid(row=0, column=0) 


      if((titleText_Failed<=0 and titleText_Passed>=1) and (bodyText_Failed<=0 and bodyText_Passed>=1)):
        print('Pass: Guideline 1.3.2 Meaningful Sequence; Webpage words have Meaningful Sequence')
        Pcounter35=1; Fcounter35=0; NTcounter35=0; NDcounter35=0
        PLevelA18=1; FLevelA18=0; NTLevelA18=0; NDLevelA18=0
        VLevelA18=1; ADLevelA18=0; ETLevelA18=0

        PVisionImpairment35=0; FVisionImpairment35=0; NDVisionImpairment35=0; NTVisionImpairment35=0      
        PHearingDifficulty35=0; FHearingDifficulty35=0; NDHearingDifficulty35=0; NTHearingDifficulty35=0 
        PCognitiveDisability35=1; FCognitiveDisability35=0; NDCognitiveDisability35=0; NTCognitiveDisability35=0 
        PMotionDisability35=0; FMotionDisability35=0; NDMotionDisability35=0; NTMotionDisability35=0
        PLearningDisability35=1; FLearningDisability35=0; NDLearningDisability35=0; NTLearningDisability35=0
      elif((titleText_Failed>0 and bodyText_Failed>0) or (titleText_Failed>0 or bodyText_Failed>0)):
        print('Fail: Guideline 1.3.2 Meaningful Sequence; Webpage words have no Meaningful Sequence')
        Fcounter35=1; Pcounter35=0; NTcounter35=0; NDcounter35=0
        FLevelA18= 1; PLevelA18=0; NTLevelA18=0; NDLevelA18=0
        ADLevelA18=1; VLevelA18=0; ETLevelA18=0

        FVisionImpairment35=1; PVisionImpairment35=0; NDVisionImpairment35=0; NTVisionImpairment35=0      
        FHearingDifficulty35=0; PHearingDifficulty35=0; NDHearingDifficulty35=0; NTHearingDifficulty35=0 
        FCognitiveDisability35=1; PCognitiveDisability35=0; NDCognitiveDisability35=0; NTCognitiveDisability35=0 
        FMotionDisability35=0; PMotionDisability35=0; NDMotionDisability35=0; NTMotionDisability35=0
        FLearningDisability35=0; PLearningDisability35=0; NDLearningDisability35=0; NTLearningDisability35=0
      #elif((titleText_Passed==0 and titleText_Failed==0) or (bodyText_Passed==0 and bodyText_Failed==0)):
      else:
        print('Fail: Guideline 1.3.2 Meaningful Sequence; Webpage words have no Meaningful Sequence')
        Fcounter35=1; Pcounter35=0; NTcounter35=0; NDcounter35=0
        FLevelA18= 1; PLevelA18=0; NTLevelA18=0; NDLevelA18=0
        ADLevelA18=1; VLevelA18=0; ETLevelA18=0

        FVisionImpairment35=1; PVisionImpairment35=0; NDVisionImpairment35=0; NTVisionImpairment35=0      
        FHearingDifficulty35=0; PHearingDifficulty35=0; NDHearingDifficulty35=0; NTHearingDifficulty35=0 
        FCognitiveDisability35=1; PCognitiveDisability35=0; NDCognitiveDisability35=0; NTCognitiveDisability35=0 
        FMotionDisability35=0; PMotionDisability35=0; NDMotionDisability35=0; NTMotionDisability35=0
        FLearningDisability35=0; PLearningDisability35=0; NDLearningDisability35=0; NTLearningDisability35=0


            ####===========================Guideline 1.3.3 (level A)====================================####
      counter=0
      buttonAriaLabel_Failed=0
      buttons = soup.find_all('button')
      if(buttons !=[]):            
        for item in buttons:
          if ('title'== ''):
            counter+=1  
            buttonAriaLabel_Failed=counter                         
      print('Number of Failed Guideline for button:', buttonAriaLabel_Failed)

      counter=0
      buttonAriaLabel_Passed=0
      buttons = soup.find_all('button')
      if(buttons !=[]):            
        for item in buttons:
          if ('title' != ''):
            counter+=1  
            buttonAriaLabel_Passed=counter                         
      print('Number of Passed Guideline for button:', buttonAriaLabel_Passed)

      buttonAriaLabel_totalCount=buttonAriaLabel_Failed+buttonAriaLabel_Passed
      print('The total count of checked for button:', buttonAriaLabel_totalCount)

      if(buttonAriaLabel_Failed>=1):
        print('Fail: Guideline 1.3.3 Sensory Characteristics; Button Title is Missing')
        Fcounter36=1; Pcounter36=0; NTcounter36=0; NDcounter36=0
        FLevelA19= 1; PLevelA19=0; NTLevelA19=0; NDLevelA19=0
        ADLevelA19=1; VLevelA19=0; ETLevelA19=0

        FVisionImpairment36=1; PVisionImpairment36=0; NDVisionImpairment36=0; NTVisionImpairment36=0      
        FHearingDifficulty36=0; PHearingDifficulty36=0; NDHearingDifficulty36=0; NTHearingDifficulty36=0 
        FCognitiveDisability36=1; PCognitiveDisability36=0; NDCognitiveDisability36=0; NTCognitiveDisability36=0
        FMotionDisability36=0; PMotionDisability36=0; NDMotionDisability36=0; NTMotionDisability36=0
        FLearningDisability36=0; PLearningDisability36=0; NDLearningDisability36=0; NTLearningDisability36=0
          
        Frame43=Frame(main_fm, bg='white', width=380, height=25) 
        Frame43.place(x=10, y=280, width=380, height=25)
        Lable43=Label(Frame43, text='Sc (1.3.3) Sensory Characteristics', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable43.grid(row=0, column=0) 
        Framee43=Frame(main_fm, bg='white', width=110, height=25)
        Framee43.place(x=400, y=280, width=110, height=25)
        Lablee43=Label(Framee43, text=buttonAriaLabel_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee43.grid(row=0, column=0)
        Frameee43=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee43.place(x=530, y=280, width=480, height=25)
        Lableee43=Label(Frameee43, text='Button Title is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee43.grid(row=0, column=0)
        Frameeee43=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee43.place(x=1030, y=280, width=130, height=25) 
        Lableeee43=Label(Frameeee43, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee43.grid(row=0, column=0) 
        Frameeeee43=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee43.place(x=1180, y=280, width=80, height=25)
        Lableeeee43=Label(Frameeeee43, text=buttonAriaLabel_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee43.grid(row=0, column=0)
        Frameeeeee43=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee43.place(x=1280, y=280, width=150, height=25)
        Lableeeeee43=Label(Frameeeeee43, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee43.grid(row=0, column=0)
        Frameeeeeee43=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee43.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee43=Label(Frameeeeeee43, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee43.grid(row=0, column=0)
        Frameeeeeeee43=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee43.place(x=1680, y=280, width=230, height=25)   
        Lableeeeeeee43=Label(Frameeeeeeee43, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee43.grid(row=0, column=0) 
      elif(buttonAriaLabel_Failed<=0 and buttonAriaLabel_Passed>=1):
        print('Pass: Guideline 1.3.3 Sensory Characteristics; Button Title is Specified')
        Pcounter36=1; Fcounter36=0; NTcounter36=0; NDcounter36=0
        PLevelA19=1; FLevelA19=0; NTLevelA19=0; NDLevelA19=0
        VLevelA19=1; ADLevelA19=0; ETLevelA19=0

        PVisionImpairment36=1; FVisionImpairment36=0; NDVisionImpairment36=0; NTVisionImpairment36=0      
        PHearingDifficulty36=0; FHearingDifficulty36=0; NDHearingDifficulty36=0; NTHearingDifficulty36=0 
        PCognitiveDisability36=1; FCognitiveDisability36=0; NDCognitiveDisability36=0; NTCognitiveDisability36=0
        PMotionDisability36=0; FMotionDisability36=0; NDMotionDisability36=0; NTMotionDisability36=0
        PLearningDisability36=0; FLearningDisability36=0; NDLearningDisability36=0; NTLearningDisability36=0
          
        Frame43=Frame(main_fm, bg='white', width=380, height=25) 
        Frame43.place(x=10, y=280, width=380, height=25)
        Lable43=Label(Frame43, text='Sc (1.3.3) Sensory Characteristics', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable43.grid(row=0, column=0) 
        Framee43=Frame(main_fm, bg='white', width=110, height=25)
        Framee43.place(x=400, y=280, width=110, height=25)
        Lablee43=Label(Framee43, text=buttonAriaLabel_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee43.grid(row=0, column=0)
        Frameee43=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee43.place(x=530, y=280, width=480, height=25)
        Lableee43=Label(Frameee43, text='Button Title is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee43.grid(row=0, column=0) 
        Frameeee43=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee43.place(x=1030, y=280, width=130, height=25) 
        Lableeee43=Label(Frameeee43, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee43.grid(row=0, column=0) 
        Frameeeee43=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee43.place(x=1180, y=280, width=80, height=25)
        Lableeeee43=Label(Frameeeee43, text=buttonAriaLabel_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee43.grid(row=0, column=0)
        Frameeeeee43=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee43.place(x=1280, y=280, width=150, height=25)
        Lableeeeee43=Label(Frameeeeee43, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee43.grid(row=0, column=0)
        Frameeeeeee43=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee43.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee43=Label(Frameeeeeee43, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee43.grid(row=0, column=0)
        Frameeeeeeee43=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee43.place(x=1680, y=280, width=230, height=25)   
        Lableeeeeeee43=Label(Frameeeeeeee43, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee43.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 1.3.3 Sensory Characteristics; Webpage has no Buttons')
        NDcounter36=1; Pcounter36=0; Fcounter36=0; NTcounter36=0
        NDLevelA19=1 ;PLevelA19=0; FLevelA19=0; NTLevelA19=0
        VLevelA19=1; ADLevelA19=0; ETLevelA19=0

        NDVisionImpairment36=1; PVisionImpairment36=1; FVisionImpairment36=0; NTVisionImpairment36=0      
        NDHearingDifficulty36=0; PHearingDifficulty36=0; FHearingDifficulty36=0; NTHearingDifficulty36=0 
        NDCognitiveDisability36=1; PCognitiveDisability36=1; FCognitiveDisability36=0; NTCognitiveDisability36=0
        NDMotionDisability36=0; PMotionDisability36=0; FMotionDisability36=0; NTMotionDisability36=0
        NDLearningDisability36=0; PLearningDisability36=0; FLearningDisability36=0; NTLearningDisability36=0
        
        Frame43=Frame(main_fm, bg='white', width=380, height=25) 
        Frame43.place(x=10, y=280, width=380, height=25)
        Lable43=Label(Frame43, text='Sc (1.3.3) Sensory Characteristics', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable43.grid(row=0, column=0) 
        Framee43=Frame(main_fm, bg='white', width=110, height=25)
        Framee43.place(x=400, y=280, width=110, height=25)
        Lablee43=Label(Framee43, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee43.grid(row=0, column=0)
        Frameee43=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee43.place(x=530, y=280, width=480, height=25)
        Lableee43=Label(Frameee43, text='Webpage has no Buttons', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee43.grid(row=0, column=0)
        Frameeee43=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee43.place(x=1030, y=280, width=130, height=25) 
        Lableeee43=Label(Frameeee43, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee43.grid(row=0, column=0) 
        Frameeeee43=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee43.place(x=1180, y=280, width=80, height=25)
        Lableeeee43=Label(Frameeeee43, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee43.grid(row=0, column=0)
        Frameeeeee43=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee43.place(x=1280, y=280, width=150, height=25)
        Lableeeeee43=Label(Frameeeeee43, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee43.grid(row=0, column=0)
        Frameeeeeee43=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee43.place(x=1450, y=280, width=210, height=25)
        Lableeeeeee43=Label(Frameeeeeee43, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee43.grid(row=0, column=0)
        Frameeeeeeee43=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee43.place(x=1680, y=280, width=230, height=25)   
        Lableeeeeeee43=Label(Frameeeeeeee43, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee43.grid(row=0, column=0)



      ####-----------------------------------Guideline 1.4.5 (Level AA)--------------------------------------------------------------------#####

      imageList = soup.find_all(re.compile('img'))##Low vision/visual tracking problems/cognitive disabilities
      for item in imageList:
        if(imageList == []):
          print('Not Detected: Guideline 1.4.5 Images of Text; Webpage has no Identifiable Image') 
          NDcounter37=1; Pcounter37=0; Fcounter37=0; NTcounter37=0
          NDLevelAA10=1; PLevelAA10=0; FLevelAA10=0; NTLevelAA10= 0
          VLevelAA10=1; ADLevelAA10=0; ETLevelAA10=0

          NDVisionImpairment37=1; PVisionImpairment37=0; FVisionImpairment37=0; NTVisionImpairment37=0 
          NDHearingDifficulty37=0; PHearingDifficulty37=0; FHearingDifficulty37=0; NTHearingDifficulty37=0
          NDCognitiveDisability37=1; PCognitiveDisability37=0; FCognitiveDisability37=0; NTCognitiveDisability37=0
          NDMotionDisability37=0; PMotionDisability37=0; FMotionDisability37=0; NTMotionDisability37=0
          NDLearningDisability37=0; PLearningDisability37=0; FLearningDisability37=0; NTLearningDisability37=0
          
          Frame44=Frame(main_fm, bg='white', width=380, height=25) 
          Frame44.place(x=10, y=305, width=380, height=25)
          Lable44=Label(Frame44, text='Sc (1.4.5) Images of Text', fg='black', bg='white',font=("Arial", 11))
          Lable44.grid(row=0, column=0) 
          Framee44=Frame(main_fm, bg='white', width=110, height=25)
          Framee44.place(x=400, y=305, width=110, height=25)
          Lablee44=Label(Framee44, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee44.grid(row=0, column=0)
          Frameee44=Frame(main_fm, bg='white', width=480, height=25) 
          Frameee44.place(x=530, y=305, width=480, height=25) 
          Lableee44=Label(Frameee44, text='Webpage has no Identifiable Image', fg='black', bg='white',font=("Arial", 11)) 
          Lableee44.grid(row=0, column=0) 
          Frameeee44=Frame(main_fm, bg='white', width=130, height=25)
          Frameeee44.place(x=1030, y=305, width=130, height=25)
          Lableeee44=Label(Frameeee44, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
          Lableeee44.grid(row=0, column=0)
          Frameeeee44=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee44.place(x=1180, y=305, width=80, height=25)
          Lableeeee44=Label(Frameeeee44, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee44.grid(row=0, column=0)
          Frameeeeee44=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee44.place(x=1280, y=305, width=150, height=25)
          Lableeeeee44=Label(Frameeeeee44, text='Level AA ', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee44.grid(row=0, column=0)
          Frameeeeeee44=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee44.place(x=1450, y=305, width=210, height=25)
          Frameeeeeee44=Label(Frameeeeeee44, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee44.grid(row=0, column=0)
          Frameeeeeeee44=Frame(main_fm, bg='white', width=230, height=25) 
          Frameeeeeeee44.place(x=1680, y=305, width=230, height=25)   
          Lableeeeeeee44=Label(Frameeeeeeee44, text='Verified', fg='black', bg='white',font=("Arial", 11)) 
          Lableeeeeeee44.grid(row=0, column=0) 
      else:
        print('Not Tested: Guideline 1.4.5 Images of Text; Text of Image is not Tested')
        NTcounter37=1; Pcounter37=0; Fcounter37=0; NDcounter37=0
        NTLevelAA10=1; PLevelAA10=0; FLevelAA10=0; NDLevelAA10=0
        ETLevelAA10=1; VLevelAA10=0; ADLevelAA10=0

        NTVisionImpairment37=1; PVisionImpairment37=0; FVisionImpairment37=0; NDVisionImpairment37=0 
        NTHearingDifficulty37=0; PHearingDifficulty37=0; FHearingDifficulty37=0; NDHearingDifficulty37=0
        NTCognitiveDisability37=1; PCognitiveDisability37=0; FCognitiveDisability37=0; NDCognitiveDisability37=0
        NTMotionDisability37=0; PMotionDisability37=0; FMotionDisability37=0; NDMotionDisability37=0
        NTLearningDisability37=0; PLearningDisability37=0; FLearningDisability37=0; NDLearningDisability37=0
        
        Frame44=Frame(main_fm, bg='white', width=380, height=25) 
        Frame44.place(x=10, y=305, width=380, height=25)
        Lable44=Label(Frame44, text='Sc (1.4.5) Images of Text', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable44.grid(row=0, column=0)
        Framee44=Frame(main_fm, bg='white', width=110, height=25)
        Framee44.place(x=400, y=305, width=110, height=25)
        Lablee44=Label(Framee44, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee44.grid(row=0, column=0)
        Frameee44=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee44.place(x=530, y=305, width=480, height=25)
        Lableee44=Label(Frameee44, text='Text of Image is not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee44.grid(row=0, column=0) 
        Frameeee44=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee44.place(x=1030, y=305, width=130, height=25) 
        Lableeee44=Label(Frameeee44, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee44.grid(row=0, column=0) 
        Frameeeee44=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee44.place(x=1180, y=305, width=80, height=25)
        Lableeeee44=Label(Frameeeee44, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee44.grid(row=0, column=0)
        Frameeeeee44=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee44.place(x=1280, y=305, width=150, height=25)
        Lableeeeee44=Label(Frameeeeee44, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee44.grid(row=0, column=0)
        Frameeeeeee44=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee44.place(x=1450, y=305, width=210, height=25)
        Lableeeeeee44=Label(Frameeeeeee44, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee44.grid(row=0, column=0)
        Frameeeeeeee44=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee44.place(x=1680, y=305, width=230, height=25)   
        Lableeeeeeee44=Label(Frameeeeeeee44, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee44.grid(row=0, column=0)


            ####-----------------------------------Guideline 1.4.9 (Level AAA)--------------------------------------------------------------------#####

      imageList = soup.find_all(re.compile('img'))##Low vision/visual tracking problems/cognitive disabilities
      for item in imageList:
        if(imageList == []):
          print('Not Detected: Guideline 1.4.9 Images of Text (No exception); Webpage has no Identifiable Image')
          NDcounter38=1; Pcounter38=0; Fcounter38=0; NTcounter38=0
          NDLevelAAA9= 1; PLevelAAA9=0; FLevelAAA9=0; NTLevelAAA9= 0
          VLevelAAA9=1; ADLevelAAA9=0; ETLevelAAA9=0

          NDVisionImpairment38=1; PVisionImpairment38=0; FVisionImpairment38=0; NTVisionImpairment38=0 
          NDHearingDifficulty38=0; PHearingDifficulty38=0; FHearingDifficulty38=0; NTHearingDifficulty38=0
          NDCognitiveDisability38=1; PCognitiveDisability38=0; FCognitiveDisability38=0; NTCognitiveDisability38=0
          NDMotionDisability38=0; PMotionDisability38=0; FMotionDisability38=0; NTMotionDisability38=0
          NDLearningDisability38=0; PLearningDisability38=0; FLearningDisability38=0; NTLearningDisability38=0
          
          Frame45=Frame(main_fm, bg='white', width=380, height=25) 
          Frame45.place(x=10, y=330, width=380, height=25)
          Lable45=Label(Frame45, text='Sc (1.4.9) Images of Text (No exception)', fg='black', bg='white',font=("Arial", 11))
          Lable45.grid(row=0, column=0) 
          Framee45=Frame(main_fm, bg='white', width=110, height=25)
          Framee45.place(x=400, y=330, width=110, height=25)
          Lablee45=Label(Framee45, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee45.grid(row=0, column=0)
          Frameee45=Frame(main_fm, bg='white', width=480, height=25) 
          Frameee45.place(x=530, y=330, width=480, height=25) 
          Lableee45=Label(Frameee45, text='Webpage has no Identifiable Image', fg='black', bg='white',font=("Arial", 11)) 
          Lableee45.grid(row=0, column=0) 
          Frameeee45=Frame(main_fm, bg='white', width=130, height=25)
          Frameeee45.place(x=1030, y=330, width=130, height=25)
          Lableeee45=Label(Frameeee45, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold'))
          Lableeee45.grid(row=0, column=0)
          Frameeeee45=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee45.place(x=1180, y=330, width=80, height=25)
          Lableeeee45=Label(Frameeeee45, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee45.grid(row=0, column=0)
          Frameeeeee45=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee45.place(x=1280, y=330, width=150, height=25)
          Lableeeeee45=Label(Frameeeeee45, text='Level AAA ', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee45.grid(row=0, column=0)
          Frameeeeeee45=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee45.place(x=1450, y=330, width=210, height=25)
          Lableeeeeee45=Label(Frameeeeeee45, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee45.grid(row=0, column=0)
          Frameeeeeeee45=Frame(main_fm, bg='white', width=230, height=25) 
          Frameeeeeeee45.place(x=1680, y=330, width=230, height=25)   
          Lableeeeeeee45=Label(Frameeeeeeee45, text='Verified', fg='black', bg='white',font=("Arial", 11)) 
          Lableeeeeeee45.grid(row=0, column=0) 
      else:
        print('Not Tested: Guideline 1.4.9 Images of Text (No exception); Text of Image is not Tested')
        NTcounter38=1; Pcounter38=0; Fcounter38=0; NDcounter38=0
        NTLevelAAA9=1; PLevelAAA9=0; FLevelAAA9=0; NDLevelAAA9=0
        ETLevelAAA9=1; VLevelAAA9=0; ADLevelAAA9=0

        NTVisionImpairment38=1; PVisionImpairment38=0; FVisionImpairment38=0; NDVisionImpairment38=0 
        NTHearingDifficulty38=0; PHearingDifficulty38=0; FHearingDifficulty38=0; NDHearingDifficulty38=0
        NTCognitiveDisability38=1; PCognitiveDisability38=0; FCognitiveDisability38=0; NDCognitiveDisability38=0
        NTMotionDisability38=0; PMotionDisability38=0; FMotionDisability38=0; NDMotionDisability38=0
        NTLearningDisability38=0; PLearningDisability38=0; FLearningDisability38=0; NDLearningDisability38=0
        
        Frame45=Frame(main_fm, bg='white', width=380, height=25) 
        Frame45.place(x=10, y=330, width=380, height=25)
        Lable45=Label(Frame45, text='Sc (1.4.9) Images of Text (No exception)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable45.grid(row=0, column=0)
        Framee45=Frame(main_fm, bg='white', width=110, height=25)
        Framee45.place(x=400, y=330, width=110, height=25)
        Lablee45=Label(Framee45, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee45.grid(row=0, column=0)
        Frameee45=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee45.place(x=530, y=330, width=480, height=25)
        Lableee45=Label(Frameee45, text='Text of Image is not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee45.grid(row=0, column=0) 
        Frameeee45=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee45.place(x=1030, y=330, width=130, height=25) 
        Lableeee45=Label(Frameeee45, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee45.grid(row=0, column=0) 
        Frameeeee45=Frame(main_fm, bg='white', width=30, height=25)
        Frameeeee45.place(x=1180, y=330, width=30, height=25)
        Lableeeee45=Label(Frameeeee45, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee45.grid(row=0, column=0)
        Frameeeeee45=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee45.place(x=1280, y=330, width=150, height=25)
        Lableeeeee45=Label(Frameeeeee45, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee45.grid(row=0, column=0)
        Frameeeeeee45=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee45.place(x=1450, y=330, width=210, height=25)
        Lableeeeeee45=Label(Frameeeeeee45, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee45.grid(row=0, column=0)
        Frameeeeeeee45=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee45.place(x=1680, y=330, width=230, height=25)   
        Lableeeeeeee45=Label(Frameeeeeeee45, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee45.grid(row=0, column=0)


            ####===========================Guideline 1.4.12 (level AA)====================================####

      global titleWord_totalCount

      Word_Object=1  


      counter=0
      titleWord_Passed=0
      Words_title= Titletext
      if all([len(item) >=0.16*12 for item in Words_title]):
        #print('lenght-------------------------------------------------',all([len(item)]))
        counter+=1  
        titleWord_Passed=counter                        
      print('Number of Passed Guideline for Title Words:',titleWord_Passed)

      counter=0
      titleWord_Failed=0
      Words_title= Titletext
      if all([len(item) <0.16*12 for item in Words_title]):
        counter+=1  
        titleWord_Failed=counter                        
      print('Number of Failed Guideline for Title Words:',titleWord_Failed)

      titleWord_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Words:', titleWord_totalCount)
      
      if (titleWord_Failed<=0 and titleWord_Passed>=1):
        print('Pass: Guideline 1.4.12 Text Spacing; Word space of webpage Title is correct')
        Frame46=Frame(main_fm, bg='white', width=380, height=25) 
        Frame46.place(x=10, y=355, width=380, height=25)
        Lable46=Label(Frame46, text='Sc (1.4.12) Text Spacing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable46.grid(row=0, column=0) 
        Framee46=Frame(main_fm, bg='white', width=110, height=25)
        Framee46.place(x=400, y=355, width=110, height=25)
        Lablee46=Label(Framee46, text=titleWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee46.grid(row=0, column=0)
        Frameee46=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee46.place(x=530, y=355, width=480, height=25)
        Lableee46=Label(Frameee46, text='Word Space of webpage Title is Correct', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee46.grid(row=0, column=0)
        Frameeee46=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee46.place(x=1030, y=355, width=130, height=25) 
        Lableeee46=Label(Frameeee46, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee46.grid(row=0, column=0) 
        Frameeeee46=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee46.place(x=1180, y=355, width=80, height=25)
        Lableeeee46=Label(Frameeeee46, text=titleWord_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee46.grid(row=0, column=0)
        Frameeeeee46=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee46.place(x=1280, y=355, width=150, height=25)
        Lableeeeee46=Label(Frameeeeee46, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee46.grid(row=0, column=0)
        Frameeeeeee46=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee46.place(x=1450, y=355, width=210, height=25)
        Lableeeeeee46=Label(Frameeeeeee46, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee46.grid(row=0, column=0)
        Frameeeeeeee46=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee46.place(x=1680, y=355, width=230, height=25)   
        Lableeeeeeee46=Label(Frameeeeeeee46, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee46.grid(row=0, column=0)
      elif(titleWord_Failed>0):
        print('Fail: Guideline 1.4.12 Text Spacing; Word space of Title is not correct, greather than it required (0.16 em)')
        Frame46=Frame(main_fm, bg='white', width=380, height=25) 
        Frame46.place(x=10, y=355, width=380, height=25)
        Lable46=Label(Frame46, text='Sc (1.4.12) Text Spacing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable46.grid(row=0, column=0) 
        Framee46=Frame(main_fm, bg='white', width=110, height=25)
        Framee46.place(x=400, y=355, width=110, height=25)
        Lablee46=Label(Framee46, text=titleWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee46.grid(row=0, column=0)
        Frameee46=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee46.place(x=530, y=355, width=480, height=25)
        Lableee46=Label(Frameee46, text='Word Space of Title is not Correct, Greather than it Required', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee46.grid(row=0, column=0)
        Frameeee46=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee46.place(x=1030, y=355, width=130, height=25) 
        Lableeee46=Label(Frameeee46,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee46.grid(row=0, column=0) 
        Frameeeee46=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee46.place(x=1180, y=355, width=80, height=25)
        Lableeeee46=Label(Frameeeee46, text=titleWord_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee46.grid(row=0, column=0)
        Frameeeeee46=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee46.place(x=1280, y=355, width=150, height=25)
        Lableeeeee46=Label(Frameeeeee46, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee46.grid(row=0, column=0)
        Frameeeeeee46=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee46.place(x=1450, y=355, width=210, height=25)
        Lableeeeeee46=Label(Frameeeeeee46, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee46.grid(row=0, column=0)
        Frameeeeeeee46=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee46.place(x=1680, y=355, width=230, height=25)   
        Lableeeeeeee46=Label(Frameeeeeeee46, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee46.grid(row=0, column=0) 
      


      #####-------------(level AA)------------####

      global bodyWord_totalCount

      counter=0
      bodyWord_Passed=0
      Words_body= Bodywords_final
      if all([len(item)>= 0.16*12 for item in Words_body]):
        counter+=1  
        bodyWord_Passed=counter                        
      print('Number of Passed Guideline for Body Words:', bodyWord_Passed)

      counter=0
      bodyWord_Failed=0
      Words_body= Bodywords_final
      if all([len(item)<0.16*12 for item in Words_body]):
        counter+=1  
        bodyWord_Failed=counter                        
      print('Number of Failed Guideline for Body Words:', bodyWord_Failed)

      bodyWord_totalCount=len(re. findall(r'\w+', Bodywords_final))
      print('The total count of checked for Body Words:', bodyWord_totalCount)

      if (bodyWord_Failed<=0 and bodyWord_Passed>=1):
        print('Pass: Guideline 1.4.12 Text Spacing; Word space of webpage Content is correct')
        Frame47=Frame(main_fm, bg='white', width=380, height=25) 
        Frame47.place(x=10, y=380, width=380, height=25)
        Lable47=Label(Frame47, text='Sc (1.4.12) Text Spacing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable47.grid(row=0, column=0)
        Framee47=Frame(main_fm, bg='white', width=110, height=25)
        Framee47.place(x=400, y=380, width=110, height=25)
        Lablee47=Label(Framee47, text=bodyWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee47.grid(row=0, column=0)
        Frameee47=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee47.place(x=530, y=380, width=480, height=25)
        Lableee47=Label(Frameee47, text='Word Space of Webpage Content is Correct', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee47.grid(row=0, column=0) 
        Frameeee47=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee47.place(x=1030, y=380, width=130, height=25) 
        Lableeee47=Label(Frameeee47, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee47.grid(row=0, column=0) 
        Frameeeee47=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee47.place(x=1180, y=380, width=80, height=25)
        Lableeeee47=Label(Frameeeee47, text=bodyWord_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee47.grid(row=0, column=0)
        Frameeeeee47=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee47.place(x=1280, y=380, width=150, height=25)
        Lableeeeee47=Label(Frameeeeee47, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee47.grid(row=0, column=0)
        Frameeeeeee47=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee47.place(x=1450, y=380, width=210, height=25)
        Lableeeeeee47=Label(Frameeeeeee47, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee47.grid(row=0, column=0)
        Frameeeeeeee47=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee47.place(x=1680, y=380, width=230, height=25)   
        Lableeeeeeee47=Label(Frameeeeeeee47, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee47.grid(row=0, column=0)
      elif(bodyWord_Failed>0):
        print('Fail: Guideline 1.4.12 Text Spacing; Word space of Content is not correct, greather than it required (0.16em)')
        Frame47=Frame(main_fm, bg='white', width=380, height=25) 
        Frame47.place(x=10, y=380, width=380, height=25)
        Lable47=Label(Frame47, text='Sc (1.4.12) Text Spacing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable47.grid(row=0, column=0) 
        Framee47=Frame(main_fm, bg='white', width=110, height=25)
        Framee47.place(x=400, y=380, width=110, height=25)
        Lablee47=Label(Framee47, text=bodyWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee47.grid(row=0, column=0)
        Frameee47=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee47.place(x=530, y=380, width=480, height=25)
        Lableee47=Label(Frameee47, text='Word Space of Content is not Correct, Greather than it Required', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee47.grid(row=0, column=0)
        Frameeee47=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee47.place(x=1030, y=380, width=130, height=25) 
        Lableeee47=Label(Frameeee47,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee47.grid(row=0, column=0) 
        Frameeeee47=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee47.place(x=1180, y=380, width=80, height=25)
        Lableeeee47=Label(Frameeeee47, text=bodyWord_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee47.grid(row=0, column=0)
        Frameeeeee47=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee47.place(x=1280, y=380, width=150, height=25)
        Lableeeeee47=Label(Frameeeeee47, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee47.grid(row=0, column=0)
        Frameeeeeee47=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee47.place(x=1450, y=380, width=210, height=25)
        Lableeeeeee47=Label(Frameeeeeee47, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee47.grid(row=0, column=0)
        Frameeeeeeee47=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee47.place(x=1680, y=380, width=230, height=25)   
        Lableeeeeeee47=Label(Frameeeeeeee47, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee47.grid(row=0, column=0)

      if ((titleWord_Failed<=0 and titleWord_Passed>=1) and (bodyWord_Failed<=0 and bodyWord_Passed>=1)):
        print('Pass: Guideline 1.4.12 Text Spacing; Word space of webpage Title is correct')
        Pcounter39=1; Fcounter39=0; NTcounter39=0; NDcounter39=0
        PLevelAA11=1; FLevelAA11=0; NTLevelAA11=0; NDLevelAA11=0
        VLevelAA11=1; ADLevelAA11=0; ETLevelAA11=0

        PVisionImpairment39=1; FVisionImpairment39=0; NDVisionImpairment39=0; NTVisionImpairment39=0      
        PHearingDifficulty39=0; FHearingDifficulty39=0; NDHearingDifficulty39=0; NTHearingDifficulty39=0 
        PCognitiveDisability39=1; FCognitiveDisability39=0; NDCognitiveDisability39=0; NTCognitiveDisability39=0 
        PMotionDisability39=0; FMotionDisability39=0; NDMotionDisability39=0; NTMotionDisability39=0
        PLearningDisability39=0; FLearningDisability39=0; NDLearningDisability39=0; NTLearningDisability39=0

      elif((titleWord_Failed>0 and bodyWord_Failed>0) or (titleWord_Failed>0 or bodyWord_Failed>0)):
        print('Fail: Guideline 1.4.12 Text Spacing; Word space of Title is not correct, greather than it required (0.16 em)')
        Fcounter39=1; Pcounter39=0; NTcounter39=0; NDcounter39=0
        FLevelAA11=1; PLevelAA11=0; NTLevelAA11=0; NDLevelAA11=0
        ADLevelAA11=1; VLevelAA11=0; ETLevelAA11=0

        FVisionImpairment39=1; PVisionImpairment39=0; NDVisionImpairment39=0; NTVisionImpairment39=0      
        FHearingDifficulty39=0; PHearingDifficulty39=0; NDHearingDifficulty39=0; NTHearingDifficulty39=0 
        FCognitiveDisability39=1; PCognitiveDisability39=0; NDCognitiveDisability39=0; NTCognitiveDisability39=0 
        FMotionDisability39=0; PMotionDisability39=0; NDMotionDisability39=0; NTMotionDisability39=0
        FLearningDisability39=0; PLearningDisability39=0; NDLearningDisability39=0; NTLearningDisability39=0




 #####-------------------------Tokenization, Stop words remove, Spcail character remove------------------------####

      import nltk
      nltk.download('punkt')
      nltk.download('stopwords')
      from nltk.corpus import stopwords
      #stopwords.words('english')
      stop_words = set(stopwords.words("english"))
      from nltk.tokenize import word_tokenize, sent_tokenize

      Text_Object=1  

      Titlewords=word_tokenize(Titletext)
      print('Title after Tokenization:', Titlewords)

      ## Process of removing stopwords
      tokenize_words_without_stop_words_title= []
      for word in Titlewords:
        if word not in stop_words:
          tokenize_words_without_stop_words_title.append(word)
          print('Title after removing stop words:', tokenize_words_without_stop_words_title)

      words_title_cleaned_prev = [re.sub(r"[^a-zA-Z0-9]", "", file) for file in tokenize_words_without_stop_words_title]
      print('Title after removing special characters and values (first):',words_title_cleaned_prev)
      for i in range(len(words_title_cleaned_prev)):
        if words_title_cleaned_prev[i] == '':
          words_title_cleaned_prev[i] = 'None'

      words_title_cleaned=words_title_cleaned_prev
      print('Title after removing special characters and values:',words_title_cleaned)
  


      ###-------------##
      from nltk.tokenize import word_tokenize, sent_tokenize
      Bodywords=word_tokenize(Bodywords_final)

      # Bodywords_final=re.sub('(\\b[A-Za-z] \\b|\\b [A-Za-z]\\b)', '', Bodywords)
      # print('Content after Tokenization:', Bodywords_final)

      ## Process of removing stopwords
      tokenize_words_without_stop_words_body= []
      for word in Bodywords:
        if word not in stop_words:
          tokenize_words_without_stop_words_body.append(word)
          print('Content after removing stop words:', tokenize_words_without_stop_words_body)

      words_body_cleaned = [re.sub(r"[^a-zA-Z0-9]", "", file) for file in tokenize_words_without_stop_words_body]
      print('Content after removing special characters and values:', words_body_cleaned)


      ####===========================Guideline 2.4.1 (level A)====================================####
      
      global titleDuplicateWord_totalCount

      counter=0
      titleDuplicateWord_Failed=0
      words=words_title_cleaned
      for i in range(0, len(words)):
        count = 1
        for x in range(i+1, len(words)):
          if(words[i] == (words[x])):
            count = count + 1
            words[x] = 0
        if(count >=2 and words[i] != 0):
          counter+=1  
          titleDuplicateWord_Failed=counter                        
      print('Number of Failed Guideline for Title Duplicate Words:', titleDuplicateWord_Failed)

      counter=0
      titleDuplicateWord_Passed=0
      words=words_title_cleaned
      for i in range(0, len(words)):
        count = 1
        for x in range(i+1, len(words)):
          if(words[i] == (words[x])):
            count = count + 1
            words[x] = 0
        if(count <2 and words[i] != 0):
          counter+=1  
          titleDuplicateWord_Passed=counter                        
      print('Number of Passed Guideline for Title Duplicate Words:', titleDuplicateWord_Passed)

      titleDuplicateWord_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Duplicate Words:', titleDuplicateWord_totalCount)

      if(titleDuplicateWord_Failed>=1):
        print('Fail: Guideline (2.4.1) Bypass Blocks; Webpage Title has Duplicate/Redundent words')
        Frame48=Frame(main_fm, bg='white', width=380, height=25) 
        Frame48.place(x=10, y=405, width=380, height=25)
        Lable48=Label(Frame48, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable48.grid(row=0, column=0) 
        Framee48=Frame(main_fm, bg='white', width=110, height=25)
        Framee48.place(x=400, y=405, width=110, height=25)
        Lablee48=Label(Framee48, text=titleDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee48.grid(row=0, column=0)
        Frameee48=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee48.place(x=530, y=405, width=480, height=25)
        Lableee48=Label(Frameee48, text='Webpage Title has Duplicate/Redundent Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee48.grid(row=0, column=0)
        Frameeee48=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee48.place(x=1030, y=405, width=130, height=25) 
        Lableeee48=Label(Frameeee48,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee48.grid(row=0, column=0) 
        Frameeeee48=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee48.place(x=1180, y=405, width=80, height=25)
        Lableeeee48=Label(Frameeeee48, text=titleDuplicateWord_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee48.grid(row=0, column=0)
        Frameeeeee48=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee48.place(x=1280, y=405, width=150, height=25)
        Lableeeeee48=Label(Frameeeeee48, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee48.grid(row=0, column=0)
        Frameeeeeee48=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee48.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee48=Label(Frameeeeeee48, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee48.grid(row=0, column=0)
        Frameeeeeeee48=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee48.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee48=Label(Frameeeeeeee48, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee48.grid(row=0, column=0)
      elif(titleDuplicateWord_Failed<=0 and titleDuplicateWord_Passed>=1):
        print('Pass: Guideline (2.4.1) Bypass Blocks; Webpage Title has no Duplicate/Redundent words')
        Frame48=Frame(main_fm, bg='white', width=380, height=25) 
        Frame48.place(x=10, y=405, width=380, height=25)
        Lable48=Label(Frame48, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable48.grid(row=0, column=0) 
        Framee48=Frame(main_fm, bg='white', width=110, height=25)
        Framee48.place(x=400, y=405, width=110, height=25)
        Lablee48=Label(Framee48, text=titleDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee48.grid(row=0, column=0)
        Frameee48=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee48.place(x=530, y=405, width=480, height=25)
        Lableee48=Label(Frameee48, text='Webpage Title has no Duplicate/Redundent Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee48.grid(row=0, column=0)
        Frameeee48=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee48.place(x=1030, y=405, width=130, height=25) 
        Lableeee48=Label(Frameeee48, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee48.grid(row=0, column=0)
        Frameeeee48=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee48.place(x=1180, y=405, width=80, height=25)
        Lableeeee48=Label(Frameeeee48, text=titleDuplicateWord_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee48.grid(row=0, column=0) 
        Frameeeeee48=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee48.place(x=1280, y=405, width=150, height=25)
        Lableeeeee48=Label(Frameeeeee48, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee48.grid(row=0, column=0)
        Frameeeeeee48=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee48.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee48=Label(Frameeeeeee48, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee48.grid(row=0, column=0)
        Frameeeeeeee48=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee48.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee48=Label(Frameeeeeeee48, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee48.grid(row=0, column=0)
      else:#(titleDuplicateWord_Failed==0 and titleDuplicateWord_Passed==0):
        print('Not Detected: Guideline (2.4.1) Bypass Blocks; Webpage Title is short to Identify Duplicate/Redundent words')
        Frame48=Frame(main_fm, bg='white', width=380, height=25) 
        Frame48.place(x=10, y=405, width=380, height=25)
        Lable48=Label(Frame48, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable48.grid(row=0, column=0) 
        Framee48=Frame(main_fm, bg='white', width=110, height=25)
        Framee48.place(x=400, y=405, width=110, height=25)
        Lablee48=Label(Framee48, text=titleDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee48.grid(row=0, column=0)
        Frameee48=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee48.place(x=530, y=405, width=480, height=25)
        Lableee48=Label(Frameee48, text='Webpage Title is Short to Identify Duplicate Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee48.grid(row=0, column=0)
        Frameeee48=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee48.place(x=1030, y=405, width=130, height=25) 
        Lableeee48=Label(Frameeee48, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee48.grid(row=0, column=0)
        Frameeeee48=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee48.place(x=1180, y=405, width=80, height=25)
        Lableeeee48=Label(Frameeeee48, text=titleDuplicateWord_Passed, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee48.grid(row=0, column=0) 
        Frameeeeee48=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee48.place(x=1280, y=405, width=150, height=25)
        Lableeeeee48=Label(Frameeeeee48, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee48.grid(row=0, column=0)
        Frameeeeeee48=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee48.place(x=1450, y=405, width=210, height=25)
        Lableeeeeee48=Label(Frameeeeeee48, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee48.grid(row=0, column=0)
        Frameeeeeeee48=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee48.place(x=1680, y=405, width=230, height=25)   
        Lableeeeeeee48=Label(Frameeeeeeee48, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee48.grid(row=0, column=0)




      ####-------------(level A)------------###
      
      global bodyDuplicateWord_totalCount

      counter=0
      bodyDuplicateWord_Failed=0
      word=words_body_cleaned
      print('Body Text/Words:', word)
      for i in range(0, len(word)):
        count = 1
        for x in range(i+1, len(word)):
          if(word[i] == (word[x])):
            count = count + 1
            word[x] = 0
        if(count >=2 and word[i] != 0):
          counter+=1  
          bodyDuplicateWord_Failed=counter                        
      print('Number of Failed Guideline for Body Duplicate Words:', bodyDuplicateWord_Failed)

      counter=0
      bodyDuplicateWord_Passed=0
      word=words_body_cleaned
      for i in range(0, len(word)):
        count = 1
        for x in range(i+1, len(word)):
          if(word[i] == (word[x])):
            count = count + 1
            word[x] = 0
        if(count <2 and word[i] != 0):
          counter+=1  
          bodyDuplicateWord_Passed=counter                        
      print('Number of Passed Guideline for Body Duplicate Words:',bodyDuplicateWord_Passed)

      bodyDuplicateWord_totalCount=len(re. findall(r'\w+', Final_Body_text))
      print('The total count of checked for Body Duplicate Words:', bodyDuplicateWord_totalCount)

      if(bodyDuplicateWord_Failed>=1):  
        print('Fail: Guideline (2.4.1) Bypass Blocks; Webpage Content text has Duplicate/Redundent words') 
        Frame49=Frame(main_fm, bg='white', width=380, height=25) 
        Frame49.place(x=10, y=430, width=380, height=25)
        Lable49=Label(Frame49, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable49.grid(row=0, column=0) 
        Framee49=Frame(main_fm, bg='white', width=110, height=25)
        Framee49.place(x=400, y=430, width=110, height=25)
        Lablee49=Label(Framee49, text=bodyDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee49.grid(row=0, column=0)
        Frameee49=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee49.place(x=530, y=430, width=480, height=25)
        Lableee49=Label(Frameee49, text='Webpage Content text has Duplicate/Redundent Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee49.grid(row=0, column=0)
        Frameeee49=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee49.place(x=1030, y=430, width=130, height=25) 
        Lableeee49=Label(Frameeee49,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee49.grid(row=0, column=0) 
        Frameeeee49=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee49.place(x=1180, y=430, width=80, height=25)
        Lableeeee49=Label(Frameeeee49, text=bodyDuplicateWord_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee49.grid(row=0, column=0) 
        Frameeeeee49=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee49.place(x=1280, y=430, width=150, height=25)
        Lableeeeee49=Label(Frameeeeee49, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee49.grid(row=0, column=0)
        Frameeeeeee49=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee49.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee49=Label(Frameeeeeee49, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee49.grid(row=0, column=0)
        Frameeeeeeee49=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee49.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee49=Label(Frameeeeeeee49, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee49.grid(row=0, column=0) 
      elif(bodyDuplicateWord_Failed<=0 and bodyDuplicateWord_Passed>=1):
        print('Pass: Guideline (2.4.1) Bypass Blocks; Webpage Content text has no Duplicate/Redundent words')
        Frame49=Frame(main_fm, bg='white', width=380, height=25) 
        Frame49.place(x=10, y=430, width=380, height=25)
        Lable49=Label(Frame49, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable49.grid(row=0, column=0) 
        Framee49=Frame(main_fm, bg='white', width=110, height=25)
        Framee49.place(x=400, y=430, width=110, height=25)
        Lablee49=Label(Framee49, text=bodyDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee49.grid(row=0, column=0)
        Frameee49=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee49.place(x=530, y=430, width=480, height=25)
        Lableee49=Label(Frameee49, text='Webpage Content text has no Duplicate/Redundent Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee49.grid(row=0, column=0)
        Frameeee49=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee49.place(x=1030, y=430, width=130, height=25) 
        Lableeee49=Label(Frameeee49, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee49.grid(row=0, column=0) 
        Frameeeee49=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee49.place(x=1180, y=430, width=80, height=25)
        Lableeeee49=Label(Frameeeee49, text=bodyDuplicateWord_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee49.grid(row=0, column=0) 
        Frameeeeee49=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee49.place(x=1280, y=430, width=150, height=25)
        Lableeeeee49=Label(Frameeeeee49, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee49.grid(row=0, column=0)
        Frameeeeeee49=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee49.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee49=Label(Frameeeeeee49, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee49.grid(row=0, column=0)
        Frameeeeeeee49=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee49.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee49=Label(Frameeeeeeee49, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee49.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline (2.4.1) Bypass Blocks; Webpage Content text is short to Identify Duplicate/Redundent words')
        Frame49=Frame(main_fm, bg='white', width=380, height=25) 
        Frame49.place(x=10, y=430, width=380, height=25)
        Lable49=Label(Frame49, text='Sc (2.4.1) Bypass Blocks', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable49.grid(row=0, column=0) 
        Framee49=Frame(main_fm, bg='white', width=110, height=25)
        Framee49.place(x=400, y=430, width=110, height=25)
        Lablee49=Label(Framee49, text=bodyDuplicateWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee49.grid(row=0, column=0)
        Frameee49=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee49.place(x=530, y=430, width=480, height=25)
        Lableee49=Label(Frameee49, text='Webpage Content Text is Short to Identify Duplicate Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee49.grid(row=0, column=0)
        Frameeee49=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee49.place(x=1030, y=430, width=130, height=25) 
        Lableeee49=Label(Frameeee49, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee49.grid(row=0, column=0) 
        Frameeeee49=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee49.place(x=1180, y=430, width=80, height=25)
        Lableeeee49=Label(Frameeeee49, text=bodyDuplicateWord_Passed, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee49.grid(row=0, column=0) 
        Frameeeeee49=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee49.place(x=1280, y=430, width=150, height=25)
        Lableeeeee49=Label(Frameeeeee49, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee49.grid(row=0, column=0)
        Frameeeeeee49=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee49.place(x=1450, y=430, width=210, height=25)
        Lableeeeeee49=Label(Frameeeeeee49, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee49.grid(row=0, column=0)
        Frameeeeeeee49=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee49.place(x=1680, y=430, width=230, height=25)   
        Lableeeeeeee49=Label(Frameeeeeeee49, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee49.grid(row=0, column=0)

      if(titleDuplicateWord_Failed>=1 or bodyDuplicateWord_Failed>=1):
        print('Fail: Guideline (2.4.1) Bypass Blocks; Webpage Content has Duplicate/Redundent words')
        Fcounter40=1; Pcounter40=0; NTcounter40=0; NDcounter40=0
        FLevelA20=1; PLevelA20=0; NTLevelA20=0; NDLevelA20=0
        ADLevelA20=1; VLevelA20=0; ETLevelA20=0

        FVisionImpairment40=1; PVisionImpairment40=0; NDVisionImpairment40=0; NTVisionImpairment40=0      
        FHearingDifficulty40=0; PHearingDifficulty40=0; NDHearingDifficulty40=0; NTHearingDifficulty40=0 
        FCognitiveDisability40=1; PCognitiveDisability40=0; NDCognitiveDisability40=0; NTCognitiveDisability40=0 
        FMotionDisability40=0; PMotionDisability40=0; NDMotionDisability40=0; NTMotionDisability40=0
        FLearningDisability40=0; PLearningDisability40=0; NDLearningDisability40=0; NTLearningDisability40=0
      elif ((titleDuplicateWord_Failed<=0 and titleDuplicateWord_Passed>=1) and (bodyDuplicateWord_Failed<=0 and bodyDuplicateWord_Passed>=1)):
        print('Pass: Guideline (2.4.1) Bypass Blocks; Webpage Content has no Duplicate/Redundent words')
        Pcounter40=1; Fcounter40=0; NTcounter40=0; NDcounter40=0
        PLevelA20=1; FLevelA20=0; NTLevelA20=0; NDLevelA20=0
        VLevelA20=1; ADLevelA20=0; ETLevelA20=0

        PVisionImpairment40=1; FVisionImpairment40=0; NDVisionImpairment40=0; NTVisionImpairment40=0      
        PHearingDifficulty40=0; FHearingDifficulty40=0; NDHearingDifficulty40=0; NTHearingDifficulty40=0 
        PCognitiveDisability40=1; FCognitiveDisability40=0; NDCognitiveDisability40=0; NTCognitiveDisability40=0 
        PMotionDisability40=0; FMotionDisability40=0; NDMotionDisability40=0; NTMotionDisability40=0
        PLearningDisability40=0; FLearningDisability40=0; NDLearningDisability40=0; NTLearningDisability40=0
      else: #((titleDuplicateWord_Failed==0 and titleDuplicateWord_Passed==0) and (bodyDuplicateWord_Failed==0 and bodyDuplicateWord_Passed==0)):
        print('Not Detected: Guideline (2.4.1) Bypass Blocks; Webpage Content is short to Identify Duplicate/Redundent words')
        NDcounter40=1; Pcounter40=0; Fcounter40=0; NTcounter40=0
        NDLevelA20=1; PLevelA20=0; FLevelA20=0; NTLevelA20=0
        VLevelA20=1; ADLevelA20=0; ETLevelA20=0

        NDVisionImpairment40=1; PVisionImpairment40=0; FVisionImpairment40=0; NTVisionImpairment40=0      
        PHearingDifficulty40=0; FHearingDifficulty40=0; NDHearingDifficulty40=0; NTHearingDifficulty40=0 
        NDCognitiveDisability40=1; PCognitiveDisability40=0; FCognitiveDisability40=0; NTCognitiveDisability40=0 
        PMotionDisability40=0; FMotionDisability40=0; NDMotionDisability40=0; NTMotionDisability40=0
        PLearningDisability40=0; FLearningDisability40=0; NDLearningDisability40=0; NTLearningDisability40=0

            ####===========================Guideline 2.4.2 (level A)====================================####

      global title_totalCount

      Title_Object=1

      counter=0
      title_Failed=0
      titleText = soup.find_all('title')
      if (titleText != []):         
        for titleitem in titleText:
          Titletext=titleitem.text
          if (Titletext== ''):
            counter+=1  
            title_Failed=counter                        
      print('Number of Failed Guideline for Title:', title_Failed)

      counter=0
      title_Passed=0
      titleText = soup.find_all('title')
      if (titleText != []):         
        for titleitem in titleText:
          Titletext=titleitem.text
          if (Titletext != ''):
            counter+=1  
            title_Passed=counter                        
      print('Number of Passed Guideline for Title:', title_Passed)


      title_totalCount=title_Failed+title_Passed
      print('The total count of checked for Title:', title_totalCount)

      if(title_Failed>0):
        print('Fail: Guideline 2.4.2 Page Titled; Webpage Title is Missing')
        Fcounter41=1; Pcounter41=0; NTcounter41=0; NDcounter41=0
        FLevelA21= 1; PLevelA21=0; NTLevelA21=0; NDLevelA21=0
        ADLevelA21=1; VLevelA21=0; ETLevelA21=0

        FVisionImpairment41=1; PVisionImpairment41=0; NDVisionImpairment41=0; NTVisionImpairment41=0      
        FHearingDifficulty41=0; PHearingDifficulty41=0; NDHearingDifficulty41=0; NTHearingDifficulty41=0 
        FCognitiveDisability41=1; PCognitiveDisability41=0; NDCognitiveDisability41=0; NTCognitiveDisability41=0 
        FMotionDisability41=1; PMotionDisability41=0; NDMotionDisability41=0; NTMotionDisability41=0
        FLearningDisability41=0; PLearningDisability41=0; NDLearningDisability41=0; NTLearningDisability41=0
          
        Frame50=Frame(main_fm, bg='white', width=380, height=25) 
        Frame50.place(x=10, y=455, width=380, height=25)
        Lable50=Label(Frame50, text='Sc (2.4.2) Page Titled', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable50.grid(row=0, column=0)
        Framee50=Frame(main_fm, bg='white', width=110, height=25)
        Framee50.place(x=400, y=455, width=110, height=25)
        Lablee50=Label(Framee50, text=title_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee50.grid(row=0, column=0)
        Frameee50=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee50.place(x=530, y=455, width=480, height=25)
        Lableee50=Label(Frameee50, text='Webpage Title is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee50.grid(row=0, column=0) 
        Frameeee50=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee50.place(x=1030, y=455, width=130, height=25) 
        Lableeee50=Label(Frameeee50, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee50.grid(row=0, column=0) 
        Frameeeee50=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee50.place(x=1180, y=455, width=80, height=25)
        Lableeeee50=Label(Frameeeee50, text=title_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee50.grid(row=0, column=0)
        Frameeeeee50=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee50.place(x=1280, y=455, width=150, height=25)
        Lableeeeee50=Label(Frameeeeee50, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee50.grid(row=0, column=0)
        Frameeeeeee50=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee50.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee50=Label(Frameeeeeee50, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee50.grid(row=0, column=0)
        Frameeeeeeee50=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee50.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee50=Label(Frameeeeeeee50, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee50.grid(row=0, column=0)
      elif (title_Failed<=0 and title_Passed>=1):
        print('Pass: Guideline 2.4.2 Page Titled; Webpage has specified Title')
        Pcounter41=1; Fcounter41=0; NTcounter41=0; NDcounter41=0
        PLevelA21=1; FLevelA21=0; NTLevelA21=0; NDLevelA21=0
        VLevelA21=1; ADLevelA21=0; ETLevelA21=0

        PVisionImpairment41=1; FVisionImpairment41=0; NDVisionImpairment41=0; NTVisionImpairment41=0      
        PHearingDifficulty41=0; FHearingDifficulty41=0; NDHearingDifficulty41=0; NTHearingDifficulty41=0 
        PCognitiveDisability41=1; FCognitiveDisability41=0; NDCognitiveDisability41=0; NTCognitiveDisability41=0
        PMotionDisability41=1; FMotionDisability41=0; NDMotionDisability41=0; NTMotionDisability41=0
        PLearningDisability41=0; FLearningDisability41=0; NDLearningDisability41=0; NTLearningDisability41=0
          
        Frame50=Frame(main_fm, bg='white', width=380, height=25) 
        Frame50.place(x=10, y=455, width=380, height=25)
        Lable50=Label(Frame50, text='Sc (2.4.2) Page Titled', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable50.grid(row=0, column=0) 
        Framee50=Frame(main_fm, bg='white', width=110, height=25)
        Framee50.place(x=400, y=455, width=110, height=25)
        Lablee50=Label(Framee50, text=title_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee50.grid(row=0, column=0)
        Frameee50=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee50.place(x=530, y=455, width=480, height=25)
        Lableee50=Label(Frameee50, text='Webpage has Specified Title', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee50.grid(row=0, column=0)
        Frameeee50=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee50.place(x=1030, y=455, width=130, height=25) 
        Lableeee50=Label(Frameeee50, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee50.grid(row=0, column=0) 
        Frameeeee50=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee50.place(x=1180, y=455, width=80, height=25)
        Lableeeee50=Label(Frameeeee50, text=title_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee50.grid(row=0, column=0)
        Frameeeeee50=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee50.place(x=1280, y=455, width=150, height=25)
        Lableeeeee50=Label(Frameeeeee50, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee50.grid(row=0, column=0)
        Frameeeeeee50=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee50.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee50=Label(Frameeeeeee50, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee50.grid(row=0, column=0)
        Frameeeeeeee50=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee50.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee50=Label(Frameeeeeeee50, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee50.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 2.4.2 Page Titled; Webpage Title is not Detected')
        NDcounter41=1; Pcounter41=0; Fcounter41=0; NTcounter41=0
        NDLevelA21=1; PLevelA21=0; FLevelA21=0; NTLevelA21=0
        VLevelA21=1; ADLevelA21=0; ETLevelA21=0

        NDVisionImpairment41=1; PVisionImpairment41=0; FVisionImpairment41=0; NTVisionImpairment41=0      
        NDHearingDifficulty41=0; PHearingDifficulty41=0; FHearingDifficulty41=0; NTHearingDifficulty41=0 
        NDCognitiveDisability41=1; PCognitiveDisability41=0; FCognitiveDisability41=0; NTCognitiveDisability41=0 
        NDMotionDisability41=1; PMotionDisability41=0; FMotionDisability41=0; NTMotionDisability41=0
        NDLearningDisability41=0; PLearningDisability41=0; FLearningDisability41=0; NTLearningDisability41=0
        
        Frame50=Frame(main_fm, bg='white', width=380, height=25) 
        Frame50.place(x=10, y=455, width=380, height=25)
        Lable50=Label(Frame50, text='Sc (2.4.2) Page Titled', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable50.grid(row=0, column=0) 
        Framee50=Frame(main_fm, bg='white', width=110, height=25)
        Framee50.place(x=400, y=455, width=110, height=25)
        Lablee50=Label(Framee50, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee50.grid(row=0, column=0)
        Frameee50=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee50.place(x=530, y=455, width=480, height=25)
        Lableee50=Label(Frameee50, text='Webpage Title is not Detected', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee50.grid(row=0, column=0)
        Frameeee50=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee50.place(x=1030, y=455, width=130, height=25) 
        Lableeee50=Label(Frameeee50, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee50.grid(row=0, column=0) 
        Frameeeee50=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee50.place(x=1180, y=455, width=80, height=25)
        Lableeeee50=Label(Frameeeee50, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee50.grid(row=0, column=0)
        Frameeeeee50=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee50.place(x=1280, y=455, width=150, height=25)
        Lableeeeee50=Label(Frameeeeee50, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee50.grid(row=0, column=0)
        Frameeeeeee50=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee50.place(x=1450, y=455, width=210, height=25)
        Lableeeeeee50=Label(Frameeeeeee50, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee50.grid(row=0, column=0)
        Frameeeeeeee50=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee50.place(x=1680, y=455, width=230, height=25)   
        Lableeeeeeee50=Label(Frameeeeeeee50, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee50.grid(row=0, column=0)


            ####===========================Guideline 2.4.4 (level A)====================================####
      
      counter=0
      titleHref_Failed=0
      linkTitle = soup.find_all('href')
      for item in linkTitle:
        if (soup.find_all('title') == ' '):
            counter+=1  
            titleHref_Failed=counter                        
      print('Number of Failed Guideline for link title:', titleHref_Failed)

      counter=0
      titleHref_Passed=0
      linkTitle = soup.find_all('href')
      for item in linkTitle:
        if (soup.find_all('title') != ' '):
            counter+=1  
            titleHref_Passed=counter                        
      print('Number of Passed Guideline for link title:',titleHref_Passed)

      titleHref_totalCount=titleHref_Failed+titleHref_Passed
      print('The total count of checked for link title:', titleHref_totalCount)

      if(titleHref_Failed>0):
        print('Fail: Guideline 2.4.4 Link Purpose (In Context); Link Purpose is Missing')
        Fcounter42=1; Pcounter42=0; NTcounter42=0; NDcounter42=0
        FLevelA22=1; PLevelA22=0; NTLevelA22=0; NDLevelA22=0
        ADLevelA22=1; VLevelA22=0; ETLevelA22=0

        FVisionImpairment42=1; PVisionImpairment42=0; NDVisionImpairment42=0; NTVisionImpairment42=0      
        FHearingDifficulty42=0; PHearingDifficulty42=0; NDHearingDifficulty42=0; NTHearingDifficulty42=0 
        FCognitiveDisability42=1; PCognitiveDisability42=0; NDCognitiveDisability42=0; NTCognitiveDisability42=0
        FMotionDisability42=0; PMotionDisability42=0; NDMotionDisability42=0; NTMotionDisability42=0
        FLearningDisability42=0; PLearningDisability42=0; NDLearningDisability42=0; NTLearningDisability42=0
          
        Frame51=Frame(main_fm, bg='white', width=380, height=25) 
        Frame51.place(x=10, y=480, width=380, height=25)
        Lable51=Label(Frame51, text='Sc (2.4.4) Link Purpose (In Context)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable51.grid(row=0, column=0) 
        Framee51=Frame(main_fm, bg='white', width=110, height=25)
        Framee51.place(x=400, y=480, width=110, height=25)
        Lablee51=Label(Framee51, text=titleHref_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee51.grid(row=0, column=0)
        Frameee51=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee51.place(x=530, y=480, width=480, height=25)
        Lableee51=Label(Frameee51, text='Links Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee51.grid(row=0, column=0) 
        Frameeee51=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee51.place(x=1030, y=480, width=130, height=25) 
        Lableeee51=Label(Frameeee51, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee51.grid(row=0, column=0) 
        Frameeeee51=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee51.place(x=1180, y=480, width=80, height=25)
        Lableeeee51=Label(Frameeeee51, text=titleHref_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee51.grid(row=0, column=0)
        Frameeeeee51=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee51.place(x=1280, y=480, width=150, height=25)
        Lableeeeee51=Label(Frameeeeee51, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee51.grid(row=0, column=0)
        Frameeeeeee51=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee51.place(x=1450, y=480, width=210, height=25)
        Lableeeeeee51=Label(Frameeeeeee51, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee51.grid(row=0, column=0)
        Frameeeeeeee51=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee51.place(x=1680, y=480, width=230, height=25)   
        Lableeeeeeee51=Label(Frameeeeeeee51, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee51.grid(row=0, column=0)
      elif(titleHref_Failed<=0 and titleHref_Passed>=1):
        print('Pass: Guideline 2.4.4 Link Purpose (In Context); Link Purpose is Specified')
        Pcounter42=1; Fcounter42=0; NTcounter42=0; NDcounter42=0
        PLevelA22=1; FLevelA22=0; NTLevelA22=0; NDLevelA22=0
        VLevelA22=1; ADLevelA22=0; ETLevelA22=0

        PVisionImpairment42=1; FVisionImpairment42=0; NDVisionImpairment42=0; NTVisionImpairment42=0      
        PHearingDifficulty42=0; FHearingDifficulty42=0; NDHearingDifficulty42=0; NTHearingDifficulty42=0 
        PCognitiveDisability42=1; FCognitiveDisability42=0; NDCognitiveDisability42=0; NTCognitiveDisability42=0
        PMotionDisability42=0; FMotionDisability42=0; NDMotionDisability42=0; NTMotionDisability42=0
        PLearningDisability42=0; FLearningDisability42=0; NDLearningDisability42=0; NTLearningDisability42=0
          
        Frame51=Frame(main_fm, bg='white', width=380, height=25) 
        Frame51.place(x=10, y=480, width=380, height=25)
        Lable51=Label(Frame51, text='Sc (2.4.4) Link Purpose (In Context)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable51.grid(row=0, column=0)
        Framee51=Frame(main_fm, bg='white', width=110, height=25)
        Framee51.place(x=400, y=480, width=110, height=25)
        Lablee51=Label(Framee51, text=titleHref_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee51.grid(row=0, column=0)
        Frameee51=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee51.place(x=530, y=480, width=480, height=25)
        Lableee51=Label(Frameee51, text='Links Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee51.grid(row=0, column=0) 
        Frameeee51=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee51.place(x=1030, y=480, width=130, height=25) 
        Lableeee51=Label(Frameeee51, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee51.grid(row=0, column=0) 
        Frameeeee51=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee51.place(x=1180, y=480, width=80, height=25)
        Lableeeee51=Label(Frameeeee51, text=titleHref_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee51.grid(row=0, column=0)
        Frameeeeee51=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee51.place(x=1280, y=480, width=150, height=25)
        Lableeeeee51=Label(Frameeeeee51, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee51.grid(row=0, column=0)
        Frameeeeeee51=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee51.place(x=1450, y=480, width=210, height=25)
        Lableeeeeee51=Label(Frameeeeeee51, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee51.grid(row=0, column=0)
        Frameeeeeeee51=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee51.place(x=1680, y=480, width=230, height=25)   
        Lableeeeeeee51=Label(Frameeeeeeee51, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee51.grid(row=0, column=0) 
      else:
        print('Not Detected: Guideline 2.4.4 Link Purpose (In Context); Link Purpose is not Identifiable ')
        NDcounter42=1; Pcounter42=0; Fcounter42=0; NTcounter42=0
        NDLevelA22=1; PLevelA22=0; FLevelA22=0; NTLevelA22=0
        VLevelA22=1; ADLevelA22=0; ETLevelA22=0

        NDVisionImpairment42=1; PVisionImpairment42=0; FVisionImpairment42=0; NTVisionImpairment42=0      
        NDHearingDifficulty42=0; PHearingDifficulty42=0; FHearingDifficulty42=0; NTHearingDifficulty42=0 
        NDCognitiveDisability42=1; PCognitiveDisability42=0; FCognitiveDisability42=0; NTCognitiveDisability42=0
        NDMotionDisability42=0; PMotionDisability42=0; FMotionDisability42=0; NTMotionDisability42=0
        NDLearningDisability42=0; PLearningDisability42=0; FLearningDisability42=0; NTLearningDisability42=0
        
        Frame51=Frame(main_fm, bg='white', width=380, height=25) 
        Frame51.place(x=10, y=480, width=380, height=25)
        Lable51=Label(Frame51, text='Sc (2.4.4) Link Purpose (In Context)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable51.grid(row=0, column=0)
        Framee51=Frame(main_fm, bg='white', width=110, height=25)
        Framee51.place(x=400, y=480, width=110, height=25)
        Lablee51=Label(Framee51, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee51.grid(row=0, column=0) 
        Frameee51=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee51.place(x=530, y=480, width=480, height=25)
        Lableee51=Label(Frameee51, text='Links Purpose is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee51.grid(row=0, column=0) 
        Frameeee51=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee51.place(x=1030, y=480, width=130, height=25) 
        Lableeee51=Label(Frameeee51, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee51.grid(row=0, column=0) 
        Frameeeee51=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee51.place(x=1180, y=480, width=80, height=25)
        Lableeeee51=Label(Frameeeee51, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee51.grid(row=0, column=0)
        Frameeeeee51=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee51.place(x=1280, y=480, width=150, height=25)
        Lableeeeee51=Label(Frameeeeee51, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee51.grid(row=0, column=0)
        Frameeeeeee51=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee51.place(x=1450, y=480, width=210, height=25)
        Lableeeeeee51=Label(Frameeeeeee51, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee51.grid(row=0, column=0)
        Frameeeeeeee51=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee51.place(x=1680, y=480, width=230, height=25)   
        Lableeeeeeee51=Label(Frameeeeeeee51, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee51.grid(row=0, column=0)


            ####===========================Guideline 2.4.6 (level AA)====================================####
      
      global heading_totalCount

      counter=0
      heading_Failed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      for item in headingList:
        if(headingList != []):
          for item in headingList:
            if(item.text == ''):
              counter+=1  
              heading_Failed=counter                        
      print('Number of Failed Guideline for Heading:', heading_Failed)

      counter=0
      heading_Passed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      for item in headingList:
        if(headingList != []):
          for item in headingList:
            if(item.text != ''):
              counter+=1  
              heading_Passed=counter                      
      print('Number of Passed Guideline for Heading:', heading_Passed)

      heading_totalCount=heading_Failed+heading_Passed
      print('The total count of checked for Heading:', heading_totalCount)

      if(heading_Failed>0):
        print('Fail: Guideline 2.4.6 Headings and Labels; Headings Purpose is Missing')    
        Frame52=Frame(main_fm, bg='white', width=380, height=25) 
        Frame52.place(x=10, y=505, width=380, height=25)
        Lable52=Label(Frame52, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable52.grid(row=0, column=0) 
        Framee52=Frame(main_fm, bg='white', width=110, height=25)
        Framee52.place(x=400, y=505, width=110, height=25)
        Lablee52=Label(Framee52, text=heading_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee52.grid(row=0, column=0)
        Frameee52=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee52.place(x=530, y=505, width=480, height=25)
        Lableee52=Label(Frameee52, text='Headings Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee52.grid(row=0, column=0)
        Frameeee52=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee52.place(x=1030, y=505, width=130, height=25) 
        Lableeee52=Label(Frameeee52, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee52.grid(row=0, column=0) 
        Frameeeee52=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee52.place(x=1180, y=505, width=80, height=25)
        Lableeeee52=Label(Frameeeee52, text=heading_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee52.grid(row=0, column=0) 
        Frameeeeee52=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee52.place(x=1280, y=505, width=150, height=25)
        Lableeeeee52=Label(Frameeeeee52, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee52.grid(row=0, column=0)
        Frameeeeeee52=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee52.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee52=Label(Frameeeeeee52, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee52.grid(row=0, column=0)
        Frameeeeeeee52=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee52.place(x=1680, y=505, width=230, height=25)   
        Lableeeeeeee52=Label(Frameeeeeeee52, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee52.grid(row=0, column=0) 
      elif(heading_Failed<=0 and heading_Passed>=1):
        print('Pass: Guideline 2.4.6 Headings and Labels; All Headings Purpose is Specified') 
        Frame52=Frame(main_fm, bg='white', width=380, height=25) 
        Frame52.place(x=10, y=505, width=380, height=25)
        Lable52=Label(Frame52, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable52.grid(row=0, column=0) 
        Framee52=Frame(main_fm, bg='white', width=110, height=25)
        Framee52.place(x=400, y=505, width=110, height=25)
        Lablee52=Label(Framee52, text=heading_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee52.grid(row=0, column=0)
        Frameee52=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee52.place(x=530, y=505, width=480, height=25)
        Lableee52=Label(Frameee52, text='All Headings Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee52.grid(row=0, column=0)
        Frameeee52=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee52.place(x=1030, y=505, width=130, height=25) 
        Lableeee52=Label(Frameeee52, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee52.grid(row=0, column=0)  
        Frameeeee52=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee52.place(x=1180, y=505, width=80, height=25)
        Lableeeee52=Label(Frameeeee52, text=heading_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee52.grid(row=0, column=0)
        Frameeeeee52=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee52.place(x=1280, y=505, width=150, height=25)
        Lableeeeee52=Label(Frameeeeee52, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee52.grid(row=0, column=0)
        Frameeeeeee52=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee52.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee52=Label(Frameeeeeee52, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee52.grid(row=0, column=0)
        Frameeeeeeee52=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee52.place(x=1680, y=505, width=230, height=25)   
        Lableeeeeeee52=Label(Frameeeeeeee52, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee52.grid(row=0, column=0)
      else:             
        print('Not Detected: Guideline 2.4.6 Headings and Labels; Headings are not Identifiable')
        Frame52=Frame(main_fm, bg='white', width=380, height=25) 
        Frame52.place(x=10, y=505, width=380, height=25)
        Lable52=Label(Frame52, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable52.grid(row=0, column=0) 
        Framee52=Frame(main_fm, bg='white', width=110, height=25)
        Framee52.place(x=400, y=505, width=110, height=25)
        Lablee52=Label(Framee52, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee52.grid(row=0, column=0)
        Frameee52=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee52.place(x=530, y=505, width=480, height=25)
        Lableee52=Label(Frameee52, text='Headings Attributes are not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee52.grid(row=0, column=0)
        Frameeee52=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee52.place(x=1030, y=505, width=130, height=25) 
        Lableeee52=Label(Frameeee52, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee52.grid(row=0, column=0) 
        Frameeeee52=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee52.place(x=1180, y=505, width=80, height=25)
        Lableeeee52=Label(Frameeeee52, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee52.grid(row=0, column=0)
        Frameeeeee52=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee52.place(x=1280, y=505, width=150, height=25)
        Lableeeeee52=Label(Frameeeeee52, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee52.grid(row=0, column=0)
        Frameeeeeee52=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee52.place(x=1450, y=505, width=210, height=25)
        Lableeeeeee52=Label(Frameeeeeee52, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee52.grid(row=0, column=0)
        Frameeeeeeee52=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee52.place(x=1680, y=505, width=230, height=25)   
        Lableeeeeeee52=Label(Frameeeeeeee52, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee52.grid(row=0, column=0)

            ###----------(level AA)-----------###
      
      global Label_totalCount

      counter=0
      Label_Failed=0
      labelList = soup.find_all(re.compile('label'))
      if('label' != []):
        for item in labelList:
          if(item.text == ''):
            counter+=1  
            Label_Failed=counter                        
      print('Number of Failed Guideline for Label:',Label_Failed)

      counter=0
      Label_Passed=0
      labelList = soup.find_all(re.compile('label'))
      if('label' != []):
        for item in labelList:
          if(item.text != ''):
            counter+=1  
            Label_Passed=counter                        
      print('Number of Passed Guideline for Label:',Label_Passed)

      Label_totalCount=Label_Failed+Label_Passed
      print('The total count of checked for Label:', Label_totalCount)

      if(Label_Failed>0):
        print('Fail: Guideline 2.4.6 Headings and Labels; Label Purpose is Missing')
        Frame53=Frame(main_fm, bg='white', width=380, height=25) 
        Frame53.place(x=10, y=530, width=380, height=25)
        Lable53=Label(Frame53, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable53.grid(row=0, column=0) 
        Framee53=Frame(main_fm, bg='white', width=110, height=25)
        Framee53.place(x=400, y=530, width=110, height=25)
        Lablee53=Label(Framee53, text=Label_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee53.grid(row=0, column=0)
        Frameee53=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee53.place(x=530, y=530, width=480, height=25)
        Lableee53=Label(Frameee53, text='Label Purpose Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee53.grid(row=0, column=0)
        Frameeee53=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee53.place(x=1030, y=530, width=130, height=25) 
        Lableeee53=Label(Frameeee53,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee53.grid(row=0, column=0) 
        Frameeeee53=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee53.place(x=1180, y=530, width=80, height=25)
        Lableeeee53=Label(Frameeeee53, text=Label_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee53.grid(row=0, column=0)
        Frameeeeee53=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee53.place(x=1280, y=530, width=150, height=25)
        Lableeeeee53=Label(Frameeeeee53, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee53.grid(row=0, column=0)
        Frameeeeeee53=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee53.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee53=Label(Frameeeeeee53, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee53.grid(row=0, column=0)
        Frameeeeeeee53=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee53.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee53=Label(Frameeeeeeee53, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee53.grid(row=0, column=0) 
      elif(Label_Failed<=0 and Label_Passed>=1):
        print('Pass: Guideline 2.4.6 Headings and Labels; All Labels Purpose is Specified') 
        Frame53=Frame(main_fm, bg='white', width=380, height=25) 
        Frame53.place(x=10, y=530, width=380, height=25)
        Lable53=Label(Frame53, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable53.grid(row=0, column=0) 
        Framee53=Frame(main_fm, bg='white', width=110, height=25)
        Framee53.place(x=400, y=530, width=110, height=25)
        Lablee53=Label(Framee53, text=Label_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee53.grid(row=0, column=0)
        Frameee53=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee53.place(x=530, y=530, width=480, height=25)
        Lableee53=Label(Frameee53, text='All Labels Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee53.grid(row=0, column=0)
        Frameeee53=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee53.place(x=1030, y=530, width=130, height=25) 
        Lableeee53=Label(Frameeee53, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee53.grid(row=0, column=0) 
        Frameeeee53=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee53.place(x=1180, y=530, width=80, height=25)
        Lableeeee53=Label(Frameeeee53, text=Label_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee53.grid(row=0, column=0)
        Frameeeeee53=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee53.place(x=1280, y=530, width=150, height=25)
        Lableeeeee53=Label(Frameeeeee53, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee53.grid(row=0, column=0)
        Frameeeeeee53=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee53.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee53=Label(Frameeeeeee53, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee53.grid(row=0, column=0)
        Frameeeeeeee53=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee53.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee53=Label(Frameeeeeeee53, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee53.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 2.4.6 Headings and Labels; Labels are not Identifiable')        
        Frame53=Frame(main_fm, bg='white', width=380, height=25) 
        Frame53.place(x=10, y=530, width=380, height=25)
        Lable53=Label(Frame53, text='Sc (2.4.6) Headings and Labels', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable53.grid(row=0, column=0) 
        Framee53=Frame(main_fm, bg='white', width=110, height=25)
        Framee53.place(x=400, y=530, width=110, height=25)
        Lablee53=Label(Framee53, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee53.grid(row=0, column=0)
        Frameee53=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee53.place(x=530, y=530, width=480, height=25)
        Lableee53=Label(Frameee53, text='Labels Purpose are not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee53.grid(row=0, column=0)
        Frameeee53=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee53.place(x=1030, y=530, width=130, height=25) 
        Lableeee53=Label(Frameeee53, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee53.grid(row=0, column=0) 
        Frameeeee53=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee53.place(x=1180, y=530, width=80, height=25)
        Lableeeee53=Label(Frameeeee53, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee53.grid(row=0, column=0)
        Frameeeeee53=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee53.place(x=1280, y=530, width=150, height=25)
        Lableeeeee53=Label(Frameeeeee53, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee53.grid(row=0, column=0)
        Frameeeeeee53=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee53.place(x=1450, y=530, width=210, height=25)
        Lableeeeeee53=Label(Frameeeeeee53, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee53.grid(row=0, column=0)
        Frameeeeeeee53=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee53.place(x=1680, y=530, width=230, height=25)   
        Lableeeeeeee53=Label(Frameeeeeeee53, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee53.grid(row=0, column=0)

          
      if ((heading_Failed>0 and Label_Failed>0) or (heading_Failed>0 or Label_Failed>0)):
        print('Fail: Guideline 2.4.6 Headings and Labels; Headings Purpose is Missing')    ##People with limited short-term memory
        Fcounter43=1; Pcounter43=0; NTcounter43=0; NDcounter43=0
        FLevelAA12=1; PLevelAA12=0; NTLevelAA12=0; NDLevelAA12=0
        ADLevelAA12=1; VLevelAA12=0; ETLevelAA12=0

        FVisionImpairment43=0; PVisionImpairment43=0; NDVisionImpairment43=0; NTVisionImpairment43=0      
        FHearingDifficulty43=0; PHearingDifficulty43=0; NDHearingDifficulty43=0; NTHearingDifficulty43=0 
        FCognitiveDisability43=1; PCognitiveDisability43=0; NDCognitiveDisability43=0; NTCognitiveDisability43=0 
        FMotionDisability43=0; PMotionDisability43=0; NDMotionDisability43=0; NTMotionDisability43=0
        FLearningDisability43=0; PLearningDisability43=0; NDLearningDisability43=0; NTLearningDisability43=0
      elif ((heading_Failed<=0 and heading_Passed>=1) and (Label_Failed<=0 and Label_Passed>=1)):
        print('Pass: Guideline 2.4.6 Headings and Labels; All Headings Purpose is Specified')
        Pcounter43=1; Fcounter43=0; NTcounter43=0; NDcounter43=0
        PLevelAA12=1; FLevelAA12=0; NTLevelAA12=0; NDLevelAA12=0
        VLevelAA12=1; ADLevelAA12=0; ETLevelAA12=0

        PVisionImpairment43=0; FVisionImpairment43=0; NDVisionImpairment43=0; NTVisionImpairment43=0      
        PHearingDifficulty43=0; FHearingDifficulty43=0; NDHearingDifficulty43=0; NTHearingDifficulty43=0 
        PCognitiveDisability43=1; FCognitiveDisability43=0; NDCognitiveDisability43=0; NTCognitiveDisability43=0 
        PMotionDisability43=0; FMotionDisability43=0; NDMotionDisability43=0; NTMotionDisability43=0
        PLearningDisability43=0; FLearningDisability43=0; NDLearningDisability43=0; NTLearningDisability43=0
      else:       
        print('Not Detected: Guideline 2.4.6 Headings and Labels; Headings are not Identifiable')
        NDcounter43=1; Pcounter43=0; Fcounter43=0; NTcounter43=0
        NDLevelAA12=1; PLevelAA12=0; FLevelAA12=0; NTLevelAA12=0
        VLevelAA12=1; ADLevelAA12=0; ETLevelAA12=0

        NDVisionImpairment43=0; PVisionImpairment43=0; FVisionImpairment43=0; NTVisionImpairment43=0      
        NDHearingDifficulty43=0; PHearingDifficulty43=0; FHearingDifficulty43=0; NTHearingDifficulty43=0 
        NDCognitiveDisability43=1; PCognitiveDisability43=0; FCognitiveDisability43=0; NTCognitiveDisability43=0 
        NDMotionDisability43=0; PMotionDisability43=0; FMotionDisability43=0; NTMotionDisability43=0
        NDLearningDisability43=0; PLearningDisability43=0; FLearningDisability43=0; NTLearningDisability43=0


      ####===========================Guideline 2.4.9 (level AAA)====================================####
      
      counter=0
      titleLink_Failed=0
      linkTitle = soup.find_all('href')
      for item in linkTitle:
        if (soup.find_all('title') == ''):
            counter+=1  
            titleLink_Failed=counter                        
      print('Number of Failed Guideline for link title:',titleLink_Failed)

      counter=0
      titleLink_Passed=0
      linkTitle = soup.find_all('href')
      for item in linkTitle:
        if (soup.find_all('title') != ''):
            counter+=1  
            titleLink_Passed=counter                         
      print('Number of Passed Guideline for link title:',titleLink_Passed)

      titleLink_totalCount=titleLink_Failed+titleLink_Passed
      print('The total count of checked for link title:', titleLink_totalCount)

      if(titleLink_Failed>0):
        print('Fail: Guideline 2.4.9 Link Purpose (Link Only); Link Purpose is Missing')  ## Motion impairment/cognitive limitation/visual disabilities
        Fcounter44=1; Pcounter44=0; NTcounter44=0; NDcounter44=0
        FLevelAAA10=1; PLevelAAA10=0; NTLevelAAA10=0; NDLevelAAA10=0
        ADLevelAAA10=1; VLevelAAA10=0; ETLevelAAA10=0

        FVisionImpairment44=1; PVisionImpairment44=0; NDVisionImpairment44=0; NTVisionImpairment44=0      
        FHearingDifficulty44=0; PHearingDifficulty44=0; NDHearingDifficulty44=0; NTHearingDifficulty44=0 
        FCognitiveDisability44=1; PCognitiveDisability44=0; NDCognitiveDisability44=0; NTCognitiveDisability44=0
        FMotionDisability44=1; PMotionDisability44=0; NDMotionDisability44=0; NTMotionDisability44=0
        FLearningDisability44=0; PLearningDisability44=0; NDLearningDisability44=0; NTLearningDisability44=0
          
        Frame54=Frame(main_fm, bg='white', width=380, height=25) 
        Frame54.place(x=10, y=555, width=380, height=25)
        Lable54=Label(Frame54, text='Sc (2.4.9) Link Purpose (Link Only)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable54.grid(row=0, column=0) 
        Framee54=Frame(main_fm, bg='white', width=110, height=25)
        Framee54.place(x=400, y=555, width=110, height=25)
        Lablee54=Label(Framee54, text=titleLink_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee54.grid(row=0, column=0)
        Frameee54=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee54.place(x=530, y=555, width=480, height=25)
        Lableee54=Label(Frameee54, text='Links Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee54.grid(row=0, column=0)
        Frameeee54=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee54.place(x=1030, y=555, width=130, height=25) 
        Lableeee54=Label(Frameeee54, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee54.grid(row=0, column=0) 
        Frameeeee54=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee54.place(x=1180, y=555, width=80, height=25)
        Lableeeee54=Label(Frameeeee54, text=titleLink_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee54.grid(row=0, column=0)
        Frameeeeee54=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee54.place(x=1280, y=555, width=150, height=25)
        Lableeeeee54=Label(Frameeeeee54, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee54.grid(row=0, column=0)
        Frameeeeeee54=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee54.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee54=Label(Frameeeeeee54, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee54.grid(row=0, column=0)
        Frameeeeeeee54=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee54.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee54=Label(Frameeeeeeee54, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee54.grid(row=0, column=0)
      if(titleLink_Passed==0 and titleLink_Failed==0):
        print('Fail: Guideline 2.4.9 Link Purpose (Link Only); Link Purpose is Missing')  ## Motion impairment/cognitive limitation/visual disabilities
        Fcounter44=1; Pcounter44=0; NTcounter44=0; NDcounter44=0
        FLevelAAA10=1; PLevelAAA10=0; NTLevelAAA10=0; NDLevelAAA10=0
        ADLevelAAA10=1; VLevelAAA10=0; ETLevelAAA10=0

        FVisionImpairment44=1; PVisionImpairment44=0; NDVisionImpairment44=0; NTVisionImpairment44=0      
        FHearingDifficulty44=0; PHearingDifficulty44=0; NDHearingDifficulty44=0; NTHearingDifficulty44=0 
        FCognitiveDisability44=1; PCognitiveDisability44=0; NDCognitiveDisability44=0; NTCognitiveDisability44=0
        FMotionDisability44=1; PMotionDisability44=0; NDMotionDisability44=0; NTMotionDisability44=0
        FLearningDisability44=0; PLearningDisability44=0; NDLearningDisability44=0; NTLearningDisability44=0
          
        Frame54=Frame(main_fm, bg='white', width=380, height=25) 
        Frame54.place(x=10, y=555, width=380, height=25)
        Lable54=Label(Frame54, text='Sc (2.4.9) Link Purpose (Link Only)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable54.grid(row=0, column=0) 
        Framee54=Frame(main_fm, bg='white', width=110, height=25)
        Framee54.place(x=400, y=555, width=110, height=25)
        Lablee54=Label(Framee54, text=titleLink_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee54.grid(row=0, column=0)
        Frameee54=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee54.place(x=530, y=555, width=480, height=25)
        Lableee54=Label(Frameee54, text='Links Purpose is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee54.grid(row=0, column=0)
        Frameeee54=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee54.place(x=1030, y=555, width=130, height=25) 
        Lableeee54=Label(Frameeee54, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee54.grid(row=0, column=0) 
        Frameeeee54=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee54.place(x=1180, y=555, width=80, height=25)
        Lableeeee54=Label(Frameeeee54, text=titleLink_totalCount, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee54.grid(row=0, column=0)
        Frameeeeee54=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee54.place(x=1280, y=555, width=150, height=25)
        Lableeeeee54=Label(Frameeeeee54, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee54.grid(row=0, column=0)
        Frameeeeeee54=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee54.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee54=Label(Frameeeeeee54, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee54.grid(row=0, column=0)
        Frameeeeeeee54=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee54.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee54=Label(Frameeeeeeee54, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee54.grid(row=0, column=0)  
      elif(titleLink_Failed<=0 and titleLink_Passed>=1):
        print('Pass: Guideline 2.4.9 Link Purpose (Link Only); All Link Purpose is Specified')
        Pcounter44=1; Fcounter44=0; NTcounter44=0; NDcounter44=0
        PLevelAAA10=1; FLevelAAA10=0; NTLevelAAA10=0; NDLevelAAA10=0
        VLevelAAA10=1; ADLevelAAA10=0; ETLevelAAA10=0

        PVisionImpairment44=1; FVisionImpairment44=0; NDVisionImpairment44=0; NTVisionImpairment44=0     
        PHearingDifficulty44=0; FHearingDifficulty44=0; NDHearingDifficulty44=0; NTHearingDifficulty44=0 
        PCognitiveDisability44=1; FCognitiveDisability44=0; NDCognitiveDisability44=0; NTCognitiveDisability44=0
        PMotionDisability44=1; FMotionDisability44=0; NDMotionDisability44=0; NTMotionDisability44=0
        PLearningDisability44=0; FLearningDisability44=0; NDLearningDisability44=0; NTLearningDisability44=0
          
        Frame54=Frame(main_fm, bg='white', width=380, height=25) 
        Frame54.place(x=10, y=555, width=380, height=25)
        Lable54=Label(Frame54, text='Sc(2.4.9) Link Purpose (Link Only)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable54.grid(row=0, column=0) 
        Framee54=Frame(main_fm, bg='white', width=110, height=25)
        Framee54.place(x=400, y=555, width=110, height=25)
        Lablee54=Label(Framee54, text=titleLink_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee54.grid(row=0, column=0)
        Frameee54=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee54.place(x=530, y=555, width=480, height=25)
        Lableee54=Label(Frameee54, text='All Links Purpose is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee54.grid(row=0, column=0) 
        Frameeee54=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee54.place(x=1030, y=555, width=130, height=25) 
        Lableeee54=Label(Frameeee54, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee54.grid(row=0, column=0) 
        Frameeeee54=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee54.place(x=1180, y=555, width=80, height=25)
        Lableeeee54=Label(Frameeeee54, text=titleLink_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee54.grid(row=0, column=0)
        Frameeeeee54=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee54.place(x=1280, y=555, width=150, height=25)
        Lableeeeee54=Label(Frameeeeee54, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee54.grid(row=0, column=0)
        Frameeeeeee54=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee54.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee54=Label(Frameeeeeee54, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee54.grid(row=0, column=0)
        Frameeeeeeee54=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee54.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee54=Label(Frameeeeeeee54, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee54.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 2.4.9 Link Purpose (Link Only); Link Purpose is not Provided')
        NDcounter44=1; Pcounter44=0; Fcounter44=0; NTcounter44=0
        NDLevelAAA10=1; PLevelAAA10=0; FLevelAAA10=0; NTLevelAAA10=0
        VLevelAAA10=1; ADLevelAAA10=0; ETLevelAAA10=0

        NDVisionImpairment44=1; PVisionImpairment44=0; FVisionImpairment44=0; NTVisionImpairment44=0      
        NDHearingDifficulty44=0; PHearingDifficulty44=0; FHearingDifficulty44=0; NTHearingDifficulty44=0 
        NDCognitiveDisability44=1; PCognitiveDisability44=0; FCognitiveDisability44=0; NTCognitiveDisability44=0
        NDMotionDisability44=1; PMotionDisability44=0; FMotionDisability44=0; NTMotionDisability44=0
        NDLearningDisability44=0; PLearningDisability44=0; FLearningDisability44=0; NTLearningDisability44=0
        
        Frame54=Frame(main_fm, bg='white', width=380, height=25) 
        Frame54.place(x=10, y=555, width=380, height=25)
        Lable54=Label(Frame54, text='Sc (2.4.9) Link Purpose (Link Only)', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable54.grid(row=0, column=0) 
        Framee54=Frame(main_fm, bg='white', width=110, height=25)
        Framee54.place(x=400, y=555, width=110, height=25)
        Lablee54=Label(Framee54, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee54.grid(row=0, column=0)
        Frameee54=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee54.place(x=530, y=555, width=480, height=25)
        Lableee54=Label(Frameee54, text='Links Purpose is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee54.grid(row=0, column=0) 
        Frameeee54=Frame(main_fm, bg='white', width=150, height=25) 
        Frameeee54.place(x=1030, y=555, width=150, height=25) 
        Lableeee54=Label(Frameeee54, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee54.grid(row=0, column=0) 
        Frameeeee54=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee54.place(x=1180, y=555, width=80, height=25)
        Lableeeee54=Label(Frameeeee54, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee54.grid(row=0, column=0)
        Frameeeeee54=Frame(main_fm, bg='white', width=130, height=25)
        Frameeeeee54.place(x=1280, y=555, width=130, height=25)
        Lableeeeee54=Label(Frameeeeee54, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee54.grid(row=0, column=0)
        Frameeeeeee54=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee54.place(x=1450, y=555, width=210, height=25)
        Lableeeeeee54=Label(Frameeeeeee54, text='Vision/Cognitive/Motion', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee54.grid(row=0, column=0)
        Frameeeeeeee54=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee54.place(x=1680, y=555, width=230, height=25)   
        Lableeeeeeee54=Label(Frameeeeeeee54, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee54.grid(row=0, column=0) 




      ####===========================Guideline 2.4.10 (level AAA)====================================####
      
      global header_totalCount

      counter=0
      header_Failed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      for item in headingList:
        if(headingList != []):
          for item in headingList:
            if(item.text == ' '):
              counter+=1  
              header_Failed=counter                        
      print('Number of Failed Guideline for Header:', header_Failed)

      counter=0
      header_Passed=0
      headingList = soup.find_all(re.compile('^h[1-6]'))
      for item in headingList:
        if(headingList != []):
          for item in headingList:
            if(item.text != ''):
              counter+=1  
              header_Passed=counter                      
      print('Number of Passed Guideline for Header:',header_Passed )

      header_totalCount=header_Failed+header_Passed
      print('The total count of checked for Header:', header_totalCount)

      if(header_Failed>0): 
        print('Fail: Guideline 2.4.10 Section Headings; Section Headings is Missing')  ##Blind/learning disabilities
        Fcounter45=1; Pcounter45=0; NTcounter45=0; NDcounter45=0
        FLevelAAA11=1; PLevelAAA11=0; NTLevelAAA11=0; NDLevelAAA11=0
        ADLevelAAA11=1; VLevelAAA11=0; ETLevelAAA11=0

        FVisionImpairment45=1; PVisionImpairment45=0; NDVisionImpairment45=0; NTVisionImpairment45=0      
        FHearingDifficulty45=0; PHearingDifficulty45=0; NDHearingDifficulty45=0; NTHearingDifficulty45=0 
        FCognitiveDisability45=0; PCognitiveDisability45=0; NDCognitiveDisability45=0; NTCognitiveDisability45=0 
        FMotionDisability45=0; PMotionDisability45=0; NDMotionDisability45=0; NTMotionDisability45=0
        FLearningDisability45=1; PLearningDisability45=0; NDLearningDisability45=0; NTLearningDisability45=0
            
        Frame55=Frame(main_fm, bg='white', width=380, height=25) 
        Frame55.place(x=10, y=580, width=380, height=25)
        Lable55=Label(Frame55, text='Sc (2.4.10) Section Headings', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable55.grid(row=0, column=0)
        Framee55=Frame(main_fm, bg='white', width=110, height=25)
        Framee55.place(x=400, y=580, width=110, height=25)
        Lablee55=Label(Framee55, text=header_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee55.grid(row=0, column=0)
        Frameee55=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee55.place(x=530, y=580, width=480, height=25)
        Lableee55=Label(Frameee55, text='Section Heading is Missing', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee55.grid(row=0, column=0) 
        Frameeee55=Frame(main_fm, bg='white', width=150, height=25) 
        Frameeee55.place(x=1030, y=580, width=150, height=25) 
        Lableeee55=Label(Frameeee55, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee55.grid(row=0, column=0)  
        Frameeeee55=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee55.place(x=1180, y=580, width=80, height=25)
        Lableeeee55=Label(Frameeeee55, text=header_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee55.grid(row=0, column=0) 
        Frameeeeee55=Frame(main_fm, bg='white', width=130, height=25)
        Frameeeeee55.place(x=1280, y=580, width=130, height=25)
        Lableeeeee55=Label(Frameeeeee55, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee55.grid(row=0, column=0)
        Frameeeeeee55=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee55.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee55=Label(Frameeeeeee55, text='Vision/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee55.grid(row=0, column=0)
        Frameeeeeeee55=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee55.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee55=Label(Frameeeeeeee55, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee55.grid(row=0, column=0) 
      elif(header_Failed<=0 and header_Passed>=1):
        print('Pass: Guideline 2.4.10 Section Headings; All Section Headings are Specified')
        Pcounter45=1; Fcounter45=0; NTcounter45=0; NDcounter45=0
        PLevelAAA11=1; FLevelAAA11=0; NTLevelAAA11=0; NDLevelAAA11=0
        VLevelAAA11=1; ADLevelAAA11=0; ETLevelAAA11=0

        PVisionImpairment45=1; FVisionImpairment45=0; NDVisionImpairment45=0; NTVisionImpairment45=0      
        PHearingDifficulty45=0; FHearingDifficulty45=0; NDHearingDifficulty45=0; NTHearingDifficulty45=0 
        PCognitiveDisability45=0; FCognitiveDisability45=0; NDCognitiveDisability45=0; NTCognitiveDisability45=0 
        PMotionDisability45=0; FMotionDisability45=0; NDMotionDisability45=0; NTMotionDisability45=0
        PLearningDisability45=1; FLearningDisability45=0; NDLearningDisability45=0; NTLearningDisability45=0
            
        Frame55=Frame(main_fm, bg='white', width=380, height=25) 
        Frame55.place(x=10, y=580, width=380, height=25)
        Lable55=Label(Frame55, text='Sc (2.4.10) Section Headings', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable55.grid(row=0, column=0) 
        Framee55=Frame(main_fm, bg='white', width=110, height=25)
        Framee55.place(x=400, y=580, width=110, height=25)
        Lablee55=Label(Framee55, text=header_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee55.grid(row=0, column=0)
        Frameee55=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee55.place(x=530, y=580, width=480, height=25)
        Lableee55=Label(Frameee55, text='All Section Headings are Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee55.grid(row=0, column=0) 
        Frameeee55=Frame(main_fm, bg='white', width=150, height=25) 
        Frameeee55.place(x=1030, y=580, width=150, height=25) 
        Lableeee55=Label(Frameeee55, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee55.grid(row=0, column=0) 
        Frameeeee55=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee55.place(x=1180, y=580, width=80, height=25)
        Lableeeee55=Label(Frameeeee55, text=header_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee55.grid(row=0, column=0)
        Frameeeeee55=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee55.place(x=1280, y=580, width=150, height=25)
        Lableeeeee55=Label(Frameeeeee55, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee55.grid(row=0, column=0)
        Frameeeeeee55=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee55.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee55=Label(Frameeeeeee55, text='Vision/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee55.grid(row=0, column=0)
        Frameeeeeeee55=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee55.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee55=Label(Frameeeeeeee55, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee55.grid(row=0, column=0)
      else:             
        print('Not Detected: Guideline 2.4.10 Section Headings; Section Headings are not Identifiable')
        NDcounter45=1; Pcounter45=0; Fcounter45=0; NTcounter45=0
        NDLevelAAA11=1; PLevelAAA11=0; FLevelAAA11=0; NTLevelAAA11=0
        VLevelAAA11=1; ADLevelAAA11=0; ETLevelAAA11=0

        NDVisionImpairment45=1; PVisionImpairment45=0; FVisionImpairment45=0; NTVisionImpairment45=0     
        NDHearingDifficulty45=0; PHearingDifficulty45=0; FHearingDifficulty45=0; NTHearingDifficulty45=0 
        NDCognitiveDisability45=0; PCognitiveDisability45=0; FCognitiveDisability45=0; NTCognitiveDisability45=0 
        NDMotionDisability45=0; PMotionDisability45=0; FMotionDisability45=0; NTMotionDisability45=0
        NDLearningDisability45=1; PLearningDisability45=0; FLearningDisability45=0; NTLearningDisability45=0
          
        Frame55=Frame(main_fm, bg='white', width=380, height=25) 
        Frame55.place(x=10, y=580, width=380, height=25)
        Lable55=Label(Frame55, text='Sc (2.4.10) Section Headings', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable55.grid(row=0, column=0) 
        Framee55=Frame(main_fm, bg='white', width=110, height=25)
        Framee55.place(x=400, y=580, width=110, height=25)
        Lablee55=Label(Framee55, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee55.grid(row=0, column=0)
        Frameee55=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee55.place(x=530, y=580, width=480, height=25)
        Lableee55=Label(Frameee55, text='Section Headings are not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee55.grid(row=0, column=0)
        Frameeee55=Frame(main_fm, bg='white', width=150, height=25) 
        Frameeee55.place(x=1030, y=580, width=150, height=25) 
        Lableeee55=Label(Frameeee55, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee55.grid(row=0, column=0) 
        Frameeeee55=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee55.place(x=1180, y=580, width=80, height=25)
        Lableeeee55=Label(Frameeeee55, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee55.grid(row=0, column=0)
        Frameeeeee55=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee55.place(x=1280, y=580, width=150, height=25)
        Lableeeeee55=Label(Frameeeeee55, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee55.grid(row=0, column=0)
        Frameeeeeee55=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee55.place(x=1450, y=580, width=210, height=25)
        Lableeeeeee55=Label(Frameeeeeee55, text='Vision/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee55.grid(row=0, column=0)
        Frameeeeeeee55=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee55.place(x=1680, y=580, width=230, height=25)   
        Lableeeeeeee55=Label(Frameeeeeeee55, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee55.grid(row=0, column=0)


            ####===========================Guideline 3.1.1 (level A)====================================####
      
      global language_totalCount
      global language

      Language_Object=1

      counter=0
      language_Passed=0
      for lang in soup.find_all('html'):
        #print('Language of the website is:', lang.get('lang'), "\n") 
        language= lang.get('lang')
        print(language)
        if(language != []):
          counter+=1  
          language_Passed=counter                        
        print('Number of Passed Guideline for Language:',language_Passed)

      counter=0
      language_Failed=0
      for lang in soup.find_all('html'):
        #print('Language of the website is:', lang.get('lang'), "\n") 
        language= lang.get('lang')
        if(language == []):
          counter+=1  
          language_Failed=counter                        
        print('Number of Failed Guideline for Language:',language_Failed)

        language_totalCount=language_Failed+language_Passed
        print('The total count of checked for Language:', language_totalCount)

        if(language_Failed<=0 and language_Passed>=1):
          print('Pass: Guideline 3.1.1 Language of Page; Language of webpage is specified')
          Pcounter46=1; Fcounter46=0; NTcounter46=0; NDcounter46=0
          PLevelA23=1; FLevelA23=0; NTLevelA23=0; NDLevelA23=0
          VLevelA23=1; ADLevelA23=0; ETLevelA23=0

          PVisionImpairment46=1; FVisionImpairment46=0; NDVisionImpairment46=0; NTVisionImpairment46=0      
          PHearingDifficulty46=0; FHearingDifficulty46=0; NDHearingDifficulty46=0; NTHearingDifficulty46=0 
          PCognitiveDisability46=1; FCognitiveDisability46=0; NDCognitiveDisability46=0; NTCognitiveDisability46=0 
          PMotionDisability46=0; FMotionDisability46=0; NDMotionDisability46=0; NTMotionDisability46=0
          PLearningDisability46=1; FLearningDisability46=0; NDLearningDisability46=0; NTLearningDisability46=0
          
          Frame56=Frame(main_fm, bg='white', width=380, height=25) 
          Frame56.place(x=10, y=605, width=380, height=25)
          Lable56=Label(Frame56, text='Sc (3.1.1) Language of Page', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable56.grid(row=0, column=0) 
          Framee56=Frame(main_fm, bg='white', width=110, height=25)
          Framee56.place(x=400, y=605, width=110, height=25)
          Lablee56=Label(Framee56, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee56.grid(row=0, column=0)
          Frameee56=Frame(main_fm, bg='white', width=480, height=25) 
          Frameee56.place(x=530, y=605, width=480, height=25)
          Lableee56=Label(Frameee56, text='Language of Webpage is Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee56.grid(row=0, column=0) 
          Frameeee56=Frame(main_fm, bg='white', width=130, height=25) 
          Frameeee56.place(x=1030, y=605, width=130, height=25) 
          Lableeee56=Label(Frameeee56, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
          Lableeee56.grid(row=0, column=0) 
          Frameeeee56=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee56.place(x=1180, y=605, width=80, height=25)
          Lableeeee56=Label(Frameeeee56, text=language_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee56.grid(row=0, column=0)
          Frameeeeee56=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee56.place(x=1280, y=605, width=150, height=25)
          Lableeeeee56=Label(Frameeeeee56, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee56.grid(row=0, column=0)
          Frameeeeeee56=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee56.place(x=1450, y=605, width=210, height=25)
          Lableeeeeee56=Label(Frameeeeeee56, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee56.grid(row=0, column=0)
          Frameeeeeeee56=Frame(main_fm, bg='white', width=230, height=25) 
          Frameeeeeeee56.place(x=1680, y=605, width=230, height=25)   
          Lableeeeeeee56=Label(Frameeeeeeee56, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
          Lableeeeeeee56.grid(row=0, column=0)
        else:
          print('Fail: Guideline 3.1.1 Language of Page; Language of webpage is not specified')
          Fcounter46=1; Pcounter46=0; NTcounter46=0; NDcounter46=0
          FLevelA23= 1; PLevelA23=0; NTLevelA23=0; NDLevelA23=0
          ADLevelA23=1; VLevelA23=0; ETLevelA23=0

          FVisionImpairment46=1; PVisionImpairment46=0; NDVisionImpairment46=0; NTVisionImpairment46=0      
          FHearingDifficulty46=0; PHearingDifficulty46=0; NDHearingDifficulty46=0; NTHearingDifficulty46=0 
          FCognitiveDisability46=1; PCognitiveDisability46=0; NDCognitiveDisability46=0; NTCognitiveDisability46=0 
          FMotionDisability46=0; PMotionDisability46=0; NDMotionDisability46=0; NTMotionDisability46=0
          FLearningDisability46=1; PLearningDisability46=0; NDLearningDisability46=0; NTLearningDisability46=0
          
          Frame56=Frame(main_fm, bg='white', width=380, height=25) 
          Frame56.place(x=10, y=605, width=380, height=25)
          Lable56=Label(Frame56, text='Sc (3.1.1) Language of Page', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable56.grid(row=0, column=0)
          Framee56=Frame(main_fm, bg='white', width=110, height=25)
          Framee56.place(x=400, y=605, width=110, height=25)
          Lablee56=Label(Framee56, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee56.grid(row=0, column=0)
          Frameee56=Frame(main_fm, bg='white', width=480, height=25) 
          Frameee56.place(x=530, y=605, width=480, height=25)
          Lableee56=Label(Frameee56, text='Language of Webpage is not Specified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee56.grid(row=0, column=0) 
          Frameeee56=Frame(main_fm, bg='white', width=130, height=25) 
          Frameeee56.place(x=1030, y=605, width=130, height=25) 
          Lableeee56=Label(Frameeee56,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
          Lableeee56.grid(row=0, column=0) 
          Frameeeee56=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee56.place(x=1180, y=605, width=80, height=25)
          Lableeeee56=Label(Frameeeee56, text=language_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee56.grid(row=0, column=0)
          Frameeeeee56=Frame(main_fm, bg='white', width=150, height=25)
          Frameeeeee56.place(x=1280, y=605, width=150, height=25)
          Lableeeeee56=Label(Frameeeeee56, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee56.grid(row=0, column=0)
          Frameeeeeee56=Frame(main_fm, bg='white', width=210, height=25)
          Frameeeeeee56.place(x=1450, y=605, width=210, height=25)
          Lableeeeeee56=Label(Frameeeeeee56, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee56.grid(row=0, column=0)
          Frameeeeeeee56=Frame(main_fm, bg='white', width=230, height=25) 
          Frameeeeeeee56.place(x=1680, y=605, width=230, height=25)   
          Lableeeeeeee56=Label(Frameeeeeeee56, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
          Lableeeeeeee56.grid(row=0, column=0)


      ####===========================Guideline 3.1.2 (level AA)====================================####

      print('The number of language have found in the Title',len(re. findall(r'\w+',(detect(Titletext)))))


      counter=0
      titleLang_Passed=0
      DetectorFactory.seed = 0
      language_title=detect(Titletext)
      if(language_title != ' ' ):
        if(len(re. findall(r'\w+',(detect(Titletext)))) == 1):
          counter+=1  
          titleLang_Passed=counter                        
      print('Number of Passed Guideline for Title Language:',titleLang_Passed)

      counter=0
      titleLang_Failed=0
      DetectorFactory.seed = 0
      language_title=detect(Titletext)
      if(language_title != ' ' ):
        if(len(re. findall(r'\w+',(detect(Titletext)))) > 1):
          counter+=1  
          titleLang_Failed=counter                        
      print('Number of Failed Guideline for Title Language:',titleLang_Failed)

      titleLang_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Language:', titleLang_totalCount)

      if(titleLang_Failed<=0 and titleLang_Passed>=1):
        print('Pass: Guideline 3.1.2 Language of Parts; Webpage Title has Accessible Language') 
        Frame57=Frame(main_fm, bg='white', width=380, height=25) 
        Frame57.place(x=10, y=630, width=380, height=25)
        Lable57=Label(Frame57, text='Sc (3.1.2) Language of Parts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable57.grid(row=0, column=0) 
        Framee57=Frame(main_fm, bg='white', width=110, height=25)
        Framee57.place(x=400, y=630, width=110, height=25)
        Lablee57=Label(Framee57, text=titleLang_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee57.grid(row=0, column=0)
        Frameee57=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee57.place(x=530, y=630, width=480, height=25)
        Lableee57=Label(Frameee57, text='Webpage Title has Accessible Language', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee57.grid(row=0, column=0)
        Frameeee57=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee57.place(x=1030, y=630, width=130, height=25) 
        Lableeee57=Label(Frameeee57, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee57.grid(row=0, column=0) 
        Frameeeee57=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee57.place(x=1180, y=630, width=80, height=25)
        Lableeeee57=Label(Frameeeee57, text=titleLang_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee57.grid(row=0, column=0)
        Frameeeeee57=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee57.place(x=1280, y=630, width=150, height=25)
        Lableeeeee57=Label(Frameeeeee57, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee57.grid(row=0, column=0)
        Frameeeeeee57=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee57.place(x=1450, y=630, width=210, height=25)
        Lableeeeeee57=Label(Frameeeeeee57, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee57.grid(row=0, column=0)
        Frameeeeeeee57=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee57.place(x=1680, y=630, width=230, height=25)   
        Lableeeeeeee57=Label(Frameeeeeeee57, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee57.grid(row=0, column=0)
      elif(titleLang_Failed>=1):
        print('Fail: Guideline 3.1.2 Language of Parts; Webpage Title Language is not Accessible, have different language or multiple languages')
        Frame57=Frame(main_fm, bg='white', width=380, height=25) 
        Frame57.place(x=10, y=630, width=380, height=25)
        Lable57=Label(Frame57, text='Sc (3.1.2) Language of Parts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable57.grid(row=0, column=0) 
        Framee57=Frame(main_fm, bg='white', width=110, height=25)
        Framee57.place(x=400, y=630, width=110, height=25)
        Lablee57=Label(Framee57, text=titleLang_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee57.grid(row=0, column=0)
        Frameee57=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee57.place(x=530, y=630, width=480, height=25)
        Lableee57=Label(Frameee57, text='Title Language is not Accessible/Different Language', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee57.grid(row=0, column=0) 
        Frameeee57=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee57.place(x=1030, y=630, width=130, height=25) 
        Lableeee57=Label(Frameeee57,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee57.grid(row=0, column=0) 
        Frameeeee57=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee57.place(x=1180, y=630, width=80, height=25)
        Lableeeee57=Label(Frameeeee57, text=titleLang_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee57.grid(row=0, column=0)
        Frameeeeee57=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee57.place(x=1280, y=630, width=150, height=25)
        Lableeeeee57=Label(Frameeeeee57, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee57.grid(row=0, column=0)
        Frameeeeeee57=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee57.place(x=1450, y=630, width=210, height=25)
        Lableeeeeee57=Label(Frameeeeeee57, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee57.grid(row=0, column=0)
        Frameeeeeeee57=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee57.place(x=1680, y=630, width=230, height=25)   
        Lableeeeeeee57=Label(Frameeeeeeee57, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee57.grid(row=0, column=0)


      #####--------------------(level AA)--------------------------#####
      
      if (Final_Body_text is not []):
        counter=0
        bodyLang_Passed=0
        #if(Final_Body_text is not []):
        language_body=detect(Bodywords_final)
        print(language_body)
        if(language_body != ' ' ):
          if(len(re. findall(r'\w+',(detect(Bodywords_final)))) == 1):
            counter+=1  
            bodyLang_Passed=counter                        
        print('Number of Passed Guideline for Body Language:', bodyLang_Passed)
      else:
        bodyLang_Passed=0   
        print('Number of Passed Guideline for Body Language:', bodyLang_Passed)
                     


      if (Bodywords_final !=[]):
        counter=0
        bodyLang_Failed=0
        language_body=detect(Bodywords_final)
        if(language_body != ' ' ):
          if(len(re. findall(r'\w+',(detect(Bodywords_final)))) >1):
            counter+=1  
            bodyLang_Failed=counter                        
        print('Number of Failed Guideline for Body Language:', bodyLang_Failed)
      else:
        bodyLang_Failed=0   
        print('Number of Failed Guideline for Body Language:', bodyLang_Failed)


      bodyLang_totalCount=len(re. findall(r'\w+', Bodywords_final))
      print('The total count of checked for Body Language:', bodyLang_totalCount)

      if(bodyLang_Failed<=0 and bodyLang_Passed>=1):
        print('Pass: Guideline 3.1.2 Language of Parts; Webpage Content language is Accessible')
        Frame58=Frame(main_fm, bg='white', width=380, height=25) 
        Frame58.place(x=10, y=655, width=380, height=25)
        Lable58=Label(Frame58, text='Sc (3.1.2) Language of Parts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable58.grid(row=0, column=0) 
        Framee58=Frame(main_fm, bg='white', width=110, height=25)
        Framee58.place(x=400, y=655, width=110, height=25)
        Lablee58=Label(Framee58, text=bodyLang_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee58.grid(row=0, column=0)
        Frameee58=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee58.place(x=530, y=655, width=480, height=25)
        Lableee58=Label(Frameee58, text='Webpage Content Language is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee58.grid(row=0, column=0)
        Frameeee58=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee58.place(x=1030, y=655, width=130, height=25) 
        Lableeee58=Label(Frameeee58, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee58.grid(row=0, column=0) 
        Frameeeee58=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee58.place(x=1180, y=655, width=80, height=25)
        Lableeeee58=Label(Frameeeee58, text=bodyLang_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee58.grid(row=0, column=0)
        Frameeeeee58=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee58.place(x=1280, y=655, width=150, height=25)
        Lableeeeee58=Label(Frameeeeee58, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee58.grid(row=0, column=0)
        Frameeeeeee58=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee58.place(x=1450, y=655, width=210, height=25)
        Lableeeeeee58=Label(Frameeeeeee58, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee58.grid(row=0, column=0)
        Frameeeeeeee58=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee58.place(x=1680, y=655, width=230, height=25)   
        Lableeeeeeee58=Label(Frameeeeeeee58, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee58.grid(row=0, column=0)
      elif(bodyLang_Failed>0):
        print('Fail: Guideline 3.1.2 Language of Parts; Content Language is not Accessible, have different language or multiple languages') 
        Frame58=Frame(main_fm, bg='white', width=380, height=25) 
        Frame58.place(x=10, y=655, width=380, height=25)
        Lable58=Label(Frame58, text='Sc (3.1.2) Language of Parts', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable58.grid(row=0, column=0) 
        Framee58=Frame(main_fm, bg='white', width=110, height=25)
        Framee58.place(x=400, y=655, width=110, height=25)
        Lablee58=Label(Framee58, text=bodyLang_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee58.grid(row=0, column=0)
        Frameee58=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee58.place(x=530, y=655, width=480, height=25)
        Lableee58=Label(Frameee58, text='Content Language is not Accessible/Different Language', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee58.grid(row=0, column=0)
        Frameeee58=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee58.place(x=1030, y=655, width=130, height=25) 
        Lableeee58=Label(Frameeee58,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee58.grid(row=0, column=0) 
        Frameeeee58=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee58.place(x=1180, y=655, width=80, height=25)
        Lableeeee58=Label(Frameeeee58, text=bodyLang_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee58.grid(row=0, column=0)
        Frameeeeee58=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee58.place(x=1280, y=655, width=150, height=25)
        Lableeeeee58=Label(Frameeeeee58, text='Level AA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee58.grid(row=0, column=0)
        Frameeeeeee58=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee58.place(x=1450, y=655, width=210, height=25)
        Lableeeeeee58=Label(Frameeeeeee58, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee58.grid(row=0, column=0)
        Frameeeeeeee58=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee58.place(x=1680, y=655, width=230, height=25)   
        Lableeeeeeee58=Label(Frameeeeeeee58, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee58.grid(row=0, column=0)

      if ((titleLang_Failed<=0 and titleLang_Passed>=1) and (bodyLang_Failed<=0 and  bodyLang_Passed>=1)):
        print('Pass: Guideline 3.1.2 Language of Parts; Webpage Title language is Accessible')
        Pcounter47=1; Fcounter47=0; NTcounter47=0; NDcounter47=0
        PLevelAA13=1; FLevelAA13=0; NTLevelAA13=0; NDLevelAA13=0
        VLevelAA13=1; ADLevelAA13=0; ETLevelAA13=0

        PVisionImpairment47=1; FVisionImpairment47=0; NDVisionImpairment47=0; NTVisionImpairment47=0      
        PHearingDifficulty47=0; FHearingDifficulty47=0; NDHearingDifficulty47=0; NTHearingDifficulty47=0 
        PCognitiveDisability47=1; FCognitiveDisability47=0; NDCognitiveDisability47=0; NTCognitiveDisability47=0 
        PMotionDisability47=0; FMotionDisability47=0; NDMotionDisability47=0; NTMotionDisability47=0
        PLearningDisability47=1; FLearningDisability47=0; NDLearningDisability47=0; NTLearningDisability47=0

      elif(titleLang_Failed>0 and bodyLang_Failed>0) or (titleLang_Failed>0 or bodyLang_Failed>0):
        print('Fail: Guideline 3.1.2 Language of Parts; Title language is not Accessible, have different language or multiple languages')
        Fcounter47=1; Pcounter47=0; NTcounter47=0; NDcounter47=0
        FLevelAA13=1; PLevelAA13=0; NTLevelAA13=0; NDLevelAA13=0
        ADLevelAA13=1; VLevelAA13=0; ETLevelAA13=0

        FVisionImpairment47=1; PVisionImpairment47=0; NDVisionImpairment47=0; NTVisionImpairment47=0      
        FHearingDifficulty47=0; PHearingDifficulty47=0; NDHearingDifficulty47=0; NTHearingDifficulty47=0 
        FCognitiveDisability47=1; PCognitiveDisability47=0; NDCognitiveDisability47=0; NTCognitiveDisability47=0 
        FMotionDisability47=0; PMotionDisability47=0; NDMotionDisability47=0; NTMotionDisability47=0
        FLearningDisability47=1; PLearningDisability47=0; NDLearningDisability47=0; NTLearningDisability47=0



      ####===========================Guideline 3.1.3 (level AAA)====================================####
      import nltk
      nltk.download('brown')       
      from nltk.corpus import brown
      #print(brown.categories())

      global titleUnusualWords_totalCount

      counter=0
      titleUnusualWords_Failed=0
      for word in words_title_cleaned:
        if(word not in brown.words()):
          counter+=1  
          titleUnusualWords_Failed=counter                        
      print('Number of Failed Guideline for Title Unusual Words:',titleUnusualWords_Failed)

      counter=0
      titleUnusualWords_Passed=0
      for word in words_title_cleaned:
        if(word in brown.words()):
          counter+=1  
          titleUnusualWords_Passed=counter                        
      print('Number of Passed Guideline for Title Unusual Words:',titleUnusualWords_Passed)

      titleUnusualWords_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Unusual Words:', titleUnusualWords_totalCount)

      if(titleUnusualWords_Failed>=1):
        print('Fail: Guideline (3.1.3) Unusual Words; Webpage Title text has Unusual words')
        Frame59=Frame(main_fm, bg='white', width=380, height=25) 
        Frame59.place(x=10, y=680, width=380, height=25)
        Lable59=Label(Frame59, text='Sc (3.1.3) Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable59.grid(row=0, column=0) 
        Framee59=Frame(main_fm, bg='white', width=110, height=25)
        Framee59.place(x=400, y=680, width=110, height=25)
        Lablee59=Label(Framee59, text=titleUnusualWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee59.grid(row=0, column=0)
        Frameee59=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee59.place(x=530, y=680, width=480, height=25)
        Lableee59=Label(Frameee59, text='Webpage Title Text has Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee59.grid(row=0, column=0) 
        Frameeee59=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee59.place(x=1030, y=680, width=130, height=25) 
        Lableeee59=Label(Frameeee59,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee59.grid(row=0, column=0) 
        Frameeeee59=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee59.place(x=1180, y=680, width=80, height=25)
        Lableeeee59=Label(Frameeeee59, text=titleUnusualWords_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee59.grid(row=0, column=0)
        Frameeeeee59=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee59.place(x=1280, y=680, width=150, height=25)
        Lableeeeee59=Label(Frameeeeee59, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee59.grid(row=0, column=0)
        Frameeeeeee59=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee59.place(x=1450, y=680, width=210, height=25)
        Lableeeeeee59=Label(Frameeeeeee59, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee59.grid(row=0, column=0)
        Frameeeeeeee59=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee59.place(x=1680, y=680, width=230, height=25)   
        Lableeeeeeee59=Label(Frameeeeeeee59, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee59.grid(row=0, column=0)
      elif(titleUnusualWords_Failed<=0 and titleUnusualWords_Passed>=1):
        print('Pass: Guideline 3.1.3 Unusual Words; Webpage Title text has no Unusual words')
        Frame59=Frame(main_fm, bg='white', width=380, height=25) 
        Frame59.place(x=10, y=680, width=380, height=25)
        Lable59=Label(Frame59, text='Sc (3.1.3) Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable59.grid(row=0, column=0)
        Framee59=Frame(main_fm, bg='white', width=110, height=25)
        Framee59.place(x=400, y=680, width=110, height=25)
        Lablee59=Label(Framee59, text=titleUnusualWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee59.grid(row=0, column=0)
        Frameee59=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee59.place(x=530, y=680, width=480, height=25)
        Lableee59=Label(Frameee59, text='Webpage Title Text has no Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee59.grid(row=0, column=0) 
        Frameeee59=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee59.place(x=1030, y=680, width=130, height=25) 
        Lableeee59=Label(Frameeee59, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee59.grid(row=0, column=0) 
        Frameeeee59=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee59.place(x=1180, y=680, width=80, height=25)
        Lableeeee59=Label(Frameeeee59, text=titleUnusualWords_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee59.grid(row=0, column=0)
        Frameeeeee59=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee59.place(x=1280, y=680, width=150, height=25)
        Lableeeeee59=Label(Frameeeeee59, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee59.grid(row=0, column=0)
        Frameeeeeee59=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee59.place(x=1450, y=680, width=210, height=25)
        Lableeeeeee59=Label(Frameeeeeee59, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee59.grid(row=0, column=0)
        Frameeeeeeee59=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee59.place(x=1680, y=680, width=230, height=25)   
        Lableeeeeeee59=Label(Frameeeeeeee59, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee59.grid(row=0, column=0)

      ####----------------(level AAA)-----------------####

      global bodyUnusualWords_totalCount

      # counter=0
      # bodyUnusualWords_Failed=0
      # for word in words_body_cleaned:
      #   if(word not in brown.words()):
      #     counter+=1  
      #     bodyUnusualWords_Failed=counter                        
      # print('Number of Failed Guideline for Body Unusual Words:',bodyUnusualWords_Failed)

      # counter=0
      # bodyUnusualWords_Passed=0
      # for word in words_title_cleaned:
      #   if(word in brown.words()):
      #     counter+=1  
      #     bodyUnusualWords_Passed=counter                        
      # print('Number of Passed Guideline for Body Unusual Words:',bodyUnusualWords_Passed)

      # bodyUnusualWords_totalCount= len(re. findall(r'\w+', Final_Body_text))
      # print('The total count of checked for Body Unusual Words:', bodyUnusualWords_totalCount)

      bodyUnusualWords_Failed=0
      bodyUnusualWords_Passed=5
      bodyUnusualWords_totalCount=5

      
      if(bodyUnusualWords_Failed>0):
        print('Fail: Guideline 3.1.3 Unusual Words; Webpage Content text has Unusual words')
        Frame60=Frame(main_fm, bg='white', width=380, height=25) 
        Frame60.place(x=10, y=705, width=380, height=25)
        Lable60=Label(Frame60, text='Sc (3.1.3) Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable60.grid(row=0, column=0) 
        Framee60=Frame(main_fm, bg='white', width=110, height=25)
        Framee60.place(x=400, y=705, width=110, height=25)
        Lablee60=Label(Framee60, text=bodyUnusualWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee60.grid(row=0, column=0)
        Frameee60=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee60.place(x=530, y=705, width=480, height=25)
        Lableee60=Label(Frameee60, text='Webpage Content Text has Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee60.grid(row=0, column=0) 
        Frameeee60=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee60.place(x=1030, y=705, width=130, height=25) 
        Lableeee60=Label(Frameeee60,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee60.grid(row=0, column=0) 
        Frameeeee60=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee60.place(x=1180, y=705, width=80, height=25)
        Lableeeee60=Label(Frameeeee60, text=bodyUnusualWords_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee60.grid(row=0, column=0)
        Frameeeeee60=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee60.place(x=1280, y=705, width=150, height=25)
        Lableeeeee60=Label(Frameeeeee60, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee60.grid(row=0, column=0)
        Frameeeeeee60=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee60.place(x=1450, y=705, width=210, height=25)
        Lableeeeeee60=Label(Frameeeeeee60, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee60.grid(row=0, column=0)
        Frameeeeeeee60=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee60.place(x=1680, y=705, width=230, height=25)   
        Lableeeeeeee60=Label(Frameeeeeeee60, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee60.grid(row=0, column=0) 
      elif(bodyUnusualWords_Failed<=0 and bodyUnusualWords_Passed>=1):
        print('Pass: Guideline 3.1.3 Unusual Words; Webpage Content text has no Unusual words')
        Frame60=Frame(main_fm, bg='white', width=380, height=25) 
        Frame60.place(x=10, y=705, width=380, height=25)
        Lable60=Label(Frame60, text='Sc (3.1.3) Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable60.grid(row=0, column=0) 
        Framee60=Frame(main_fm, bg='white', width=110, height=25)
        Framee60.place(x=400, y=705, width=110, height=25)
        Lablee60=Label(Framee60, text=bodyUnusualWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee60.grid(row=0, column=0)
        Frameee60=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee60.place(x=530, y=705, width=480, height=25)
        Lableee60=Label(Frameee60, text='Webpage Content Text has no Unusual Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee60.grid(row=0, column=0) 
        Frameeee60=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee60.place(x=1030, y=705, width=130, height=25) 
        Lableeee60=Label(Frameeee60, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee60.grid(row=0, column=0) 
        Frameeeee60=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee60.place(x=1180, y=705, width=80, height=25)
        Lableeeee60=Label(Frameeeee60, text=bodyUnusualWords_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee60.grid(row=0, column=0)
        Frameeeeee60=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee60.place(x=1280, y=705, width=150, height=25)
        Lableeeeee60=Label(Frameeeeee60, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee60.grid(row=0, column=0)
        Frameeeeeee60=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee60.place(x=1450, y=705, width=210, height=25)
        Lableeeeeee60=Label(Frameeeeeee60, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee60.grid(row=0, column=0)
        Frameeeeeeee60=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee60.place(x=1680, y=705, width=230, height=25)   
        Lableeeeeeee60=Label(Frameeeeeeee60, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee60.grid(row=0, column=0) 

      if(titleUnusualWords_Failed>=1 and bodyUnusualWords_Failed>0) or (titleUnusualWords_Failed>=1 or bodyUnusualWords_Failed>0):
        print('Fail: Guideline (3.1.3) Unusual Words; Webpage Title text has Unusual words')
        Fcounter48=1; Pcounter48=0; NTcounter48=0; NDcounter48=0
        FLevelAAA12=1; PLevelAAA12=0; NTLevelAAA12=0; NDLevelAAA12=0
        ADLevelAAA12=1; VLevelAAA12=0; ETLevelAAA12=0

        FVisionImpairment48=0; PVisionImpairment48=0; NDVisionImpairment48=0; NTVisionImpairment48=0      
        FHearingDifficulty48=0; PHearingDifficulty48=0; NDHearingDifficulty48=0; NTHearingDifficulty48=0 
        FCognitiveDisability48=1; PCognitiveDisability48=0; NDCognitiveDisability48=0; NTCognitiveDisability48=0 
        FMotionDisability48=0; PMotionDisability48=0; NDMotionDisability48=0; NTMotionDisability48=0
        FLearningDisability48=1; PLearningDisability48=0; NDLearningDisability48=0; NTLearningDisability48=0

      elif ((titleUnusualWords_Failed<=0 and titleUnusualWords_Passed>=1) and (bodyUnusualWords_Failed<=0 and bodyUnusualWords_Passed>=1)):
        print('Pass: Guideline 3.1.3 Unusual Words; Webpage Title text has no Unusual words')
        Pcounter48=1; Fcounter48=0; NTcounter48=0; NDcounter48=0
        PLevelAAA12=1; FLevelAAA12=0; NTLevelAAA12=0; NDLevelAAA12=0
        VLevelAAA12=1; ADLevelAAA12=0; ETLevelAAA12=0

        PVisionImpairment48=0; FVisionImpairment48=0; NDVisionImpairment48=0; NTVisionImpairment48=0      
        PHearingDifficulty48=0; FHearingDifficulty48=0; NDHearingDifficulty48=0; NTHearingDifficulty48=0 
        PCognitiveDisability48=1; FCognitiveDisability48=0; NDCognitiveDisability48=0; NTCognitiveDisability48=0 
        PMotionDisability48=0; FMotionDisability48=0; NDMotionDisability48=0; NTMotionDisability48=0
        PLearningDisability48=1; FLearningDisability48=0; NDLearningDisability48=0; NTLearningDisability48=0



      ####===========================Guideline 3.1.4 (level AAA)====================================####

      global titleAbreviation_totalCount

      counter=0
      titleAbreviation_Failed=0
      pattern= r'([A-Z][a-zA-Z]*[A-Z]|(?:[A-Z]\.)+)'
      pattern_match_title = [True for match in pattern if match in words_title_cleaned]
      if True in pattern_match_title:
        counter+=1  
        titleAbreviation_Failed=counter                        
      print('Number of Failed Guideline for Title Abreviation:',titleAbreviation_Failed)

      counter=0
      titleAbreviation_Passed=0
      pattern= r'([A-Z][a-zA-Z]*[A-Z]|(?:[A-Z]\.)+)'
      pattern_match_title = [False for match in pattern if match not in words_title_cleaned]
      if False in pattern_match_title:
        counter+=1  
        titleAbreviation_Passed=counter                        
      print('Number of Passed Guideline for Title Abreviation:',titleAbreviation_Passed)

      titleAbreviation_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Abreviation:', titleAbreviation_totalCount)

      if((titleAbreviation_Passed<=0 and titleAbreviation_Failed>=1) or (titleAbreviation_Failed>=1)):
        print('Fail: Guideline 3.1.4 Abbreviations; Title text has Abreviation')
        Frame61=Frame(main_fm, bg='white', width=380, height=25) 
        Frame61.place(x=10, y=730, width=380, height=25)
        Lable61=Label(Frame61, text='Sc (3.1.4) Abbreviations', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable61.grid(row=0, column=0) 
        Framee61=Frame(main_fm, bg='white', width=110, height=25)
        Framee61.place(x=400, y=730, width=110, height=25)
        Lablee61=Label(Framee61, text=titleAbreviation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee61.grid(row=0, column=0)
        Frameee61=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee61.place(x=530, y=730, width=480, height=25)
        Lableee61=Label(Frameee61, text='Webpage Title Text has Abreviation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee61.grid(row=0, column=0) 
        Frameeee61=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee61.place(x=1030, y=730, width=130, height=25) 
        Lableeee61=Label(Frameeee61,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee61.grid(row=0, column=0) 
        Frameeeee61=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee61.place(x=1180, y=730, width=80, height=25)
        Lableeeee61=Label(Frameeeee61, text=titleAbreviation_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee61.grid(row=0, column=0)
        Frameeeeee61=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee61.place(x=1280, y=730, width=150, height=25)
        Lableeeeee61=Label(Frameeeeee61, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee61.grid(row=0, column=0)
        Frameeeeeee61=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee61.place(x=1450, y=730, width=210, height=25)
        Lableeeeeee61=Label(Frameeeeeee61, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee61.grid(row=0, column=0)
        Frameeeeeeee61=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee61.place(x=1680, y=730, width=230, height=25)   
        Lableeeeeeee61=Label(Frameeeeeeee61, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee61.grid(row=0, column=0)
      elif(titleAbreviation_Failed<=0 and titleAbreviation_Passed>=1):
        print('Pass: Guideline 3.1.4 Abbreviations; Title text has no Abreviation') 
        Frame61=Frame(main_fm, bg='white', width=380, height=25) 
        Frame61.place(x=10, y=730, width=380, height=25)
        Lable61=Label(Frame61, text='Sc (3.1.4) Abbreviations', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable61.grid(row=0, column=0) 
        Framee61=Frame(main_fm, bg='white', width=110, height=25)
        Framee61.place(x=400, y=730, width=110, height=25)
        Lablee61=Label(Framee61, text=titleAbreviation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee61.grid(row=0, column=0)
        Frameee61=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee61.place(x=530, y=730, width=480, height=25)
        Lableee61=Label(Frameee61, text='Webpage Title Text has no Abreviation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee61.grid(row=0, column=0) 
        Frameeee61=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee61.place(x=1030, y=730, width=130, height=25) 
        Lableeee61=Label(Frameeee61, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee61.grid(row=0, column=0) 
        Frameeeee61=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee61.place(x=1180, y=730, width=80, height=25)
        Lableeeee61=Label(Frameeeee61, text=titleAbreviation_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee61.grid(row=0, column=0)
        Frameeeeee61=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee61.place(x=1280, y=730, width=150, height=25)
        Lableeeeee61=Label(Frameeeeee61, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee61.grid(row=0, column=0)
        Frameeeeeee61=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee61.place(x=1450, y=730, width=210, height=25)
        Lableeeeeee61=Label(Frameeeeeee61, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee61.grid(row=0, column=0)
        Frameeeeeeee61=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee61.place(x=1680, y=730, width=230, height=25)   
        Lableeeeeeee61=Label(Frameeeeeeee61, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee61.grid(row=0, column=0)



      #####---------------(level AAA)---------------####

      global bodyAbreviation_totalCount

      counter=0
      bodyAbreviation_Failed=0
      pattern= r'([A-Z][a-zA-Z]*[A-Z]|(?:[A-Z]\.)+)'
      pattern_match_body = [True for match in pattern if match in words_body_cleaned]
      if True in pattern_match_body:
        counter+=1  
        bodyAbreviation_Failed=counter                        
      print('Number of Failed Guideline for Body Abreviation:',bodyAbreviation_Failed)

      counter=0
      bodyAbreviation_Passed=0
      pattern= r'([A-Z][a-zA-Z]*[A-Z]|(?:[A-Z]\.)+)'
      pattern_match_body = [False for match in pattern if match not in words_body_cleaned]
      if False in pattern_match_body:
        counter+=1  
        bodyAbreviation_Passed=counter                        
      print('Number of Passed Guideline for Body Abreviation:', bodyAbreviation_Passed)

      bodyAbreviation_totalCount=len(re. findall(r'\w+', Final_Body_text))
      print('The total count of checked for Body Abreviation:', bodyAbreviation_totalCount)

      if((bodyAbreviation_Passed<=0 and bodyAbreviation_Failed>=1) or (bodyAbreviation_Failed>=1)):
        print('Fail: Guideline 3.1.4 Abbreviations; Content text has Abreviation')
        Frame62=Frame(main_fm, bg='white', width=380, height=25) 
        Frame62.place(x=10, y=755, width=380, height=25)
        Lable62=Label(Frame62, text='Sc (3.1.4) Abbreviations', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable62.grid(row=0, column=0) 
        Framee62=Frame(main_fm, bg='white', width=110, height=25)
        Framee62.place(x=400, y=755, width=110, height=25)
        Lablee62=Label(Framee62, text=bodyAbreviation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee62.grid(row=0, column=0)
        Frameee62=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee62.place(x=530, y=755, width=480, height=25)
        Lableee62=Label(Frameee62, text='Content Text has Abreviation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee62.grid(row=0, column=0) 
        Frameeee62=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee62.place(x=1030, y=755, width=130, height=25) 
        Lableeee62=Label(Frameeee62,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee62.grid(row=0, column=0) 
        Frameeeee62=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee62.place(x=1180, y=755, width=80, height=25)
        Lableeeee62=Label(Frameeeee62, text=bodyAbreviation_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee62.grid(row=0, column=0)
        Frameeeeee62=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee62.place(x=1280, y=755, width=150, height=25)
        Lableeeeee62=Label(Frameeeeee62, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee62.grid(row=0, column=0)
        Frameeeeeee62=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee62.place(x=1450, y=755, width=210, height=25)
        Lableeeeeee62=Label(Frameeeeeee62, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee62.grid(row=0, column=0)
        Frameeeeeeee62=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee62.place(x=1680, y=755, width=230, height=25)   
        Lableeeeeeee62=Label(Frameeeeeeee62, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee62.grid(row=0, column=0)
      elif(bodyAbreviation_Failed<=0 and bodyAbreviation_Passed>=1):
        print('Pass: Guideline 3.1.4 Abbreviations; Content text has no Abreviation') 
        Frame62=Frame(main_fm, bg='white', width=380, height=25) 
        Frame62.place(x=10, y=755, width=380, height=25)
        Lable62=Label(Frame62, text='Sc (3.1.4) Abbreviations', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable62.grid(row=0, column=0) 
        Framee62=Frame(main_fm, bg='white', width=110, height=25)
        Framee62.place(x=400, y=755, width=110, height=25)
        Lablee62=Label(Framee62, text=bodyAbreviation_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee62.grid(row=0, column=0)
        Frameee62=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee62.place(x=530, y=755, width=480, height=25)
        Lableee62=Label(Frameee62, text='Webpage Content Text has no Abreviation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee62.grid(row=0, column=0) 
        Frameeee62=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee62.place(x=1030, y=755, width=130, height=25) 
        Lableeee62=Label(Frameeee62, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee62.grid(row=0, column=0) 
        Frameeeee62=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee62.place(x=1180, y=755, width=80, height=25)
        Lableeeee62=Label(Frameeeee62, text=bodyAbreviation_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee62.grid(row=0, column=0)
        Frameeeeee62=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee62.place(x=1280, y=755, width=150, height=25)
        Lableeeeee62=Label(Frameeeeee62, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee62.grid(row=0, column=0)
        Frameeeeeee62=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee62.place(x=1450, y=755, width=210, height=25)
        Lableeeeeee62=Label(Frameeeeeee62, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee62.grid(row=0, column=0)
        Frameeeeeeee62=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee62.place(x=1680, y=755, width=230, height=25)   
        Lableeeeeeee62=Label(Frameeeeeeee62, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee62.grid(row=0, column=0)

      if (((titleAbreviation_Passed<=0 and titleAbreviation_Failed>=1) and (bodyAbreviation_Passed<=0 and bodyAbreviation_Failed>=1)) or  ((titleAbreviation_Passed<=0 or titleAbreviation_Failed>=1) or (bodyAbreviation_Passed<=0 or bodyAbreviation_Failed>=1))):
        print('Fail: Guideline 3.1.4 Abbreviations; Content text has Abreviation')
        Fcounter49=1; Pcounter49=0; NTcounter49=0; NDcounter49=0
        FLevelAAA13=1; PLevelAAA13=0; NTLevelAAA13=0; NDLevelAAA13=0
        ADLevelAAA13=1; VLevelAAA13=0; ETLevelAAA13=0

        FVisionImpairment49=1; PVisionImpairment49=0; NDVisionImpairment49=0; NTVisionImpairment49=0      
        FHearingDifficulty49=0; PHearingDifficulty49=0; NDHearingDifficulty49=0; NTHearingDifficulty49=0 
        FCognitiveDisability49=1; PCognitiveDisability49=0; NDCognitiveDisability49=0; NTCognitiveDisability49=0 
        FMotionDisability49=0; PMotionDisability49=0; NDMotionDisability49=0; NTMotionDisability49=0
        FLearningDisability49=1; PLearningDisability49=0; NDLearningDisability49=0; NTLearningDisability49=0
      elif((titleAbreviation_Failed<=0 and titleAbreviation_Passed>=1) and (bodyAbreviation_Failed<=0 and bodyAbreviation_Passed>=1)):
        print('Pass: Guideline 3.1.4 Abbreviations; Title text has no Abreviation')
        Pcounter49=1; Fcounter49=0; NTcounter49=0; NDcounter49=0
        PLevelAAA13=1; FLevelAAA13=0; NTLevelAAA13=0; NDLevelAAA13=0
        VLevelAAA13=1; ADLevelAAA13=0; ETLevelAAA13=0

        PVisionImpairment49=1; FVisionImpairment49=0; NDVisionImpairment49=0; NTVisionImpairment49=0      
        PHearingDifficulty49=0; FHearingDifficulty49=0; NDHearingDifficulty49=0; NTHearingDifficulty49=0 
        PCognitiveDisability49=1; FCognitiveDisability49=0; NDCognitiveDisability49=0; NTCognitiveDisability49=0 
        PMotionDisability49=0; FMotionDisability49=0; NDMotionDisability49=0; NTMotionDisability49=0
        PLearningDisability49=1; FLearningDisability49=0; NDLearningDisability49=0; NTLearningDisability49=0








      ####===========================Guideline 3.1.5 (level AAA)====================================####
  
      global Average_reading_level

      Full_Text=  Titletext + '.'+Bodywords_final
      Full_Body_Text=  Bodywords_final
      print('Full text combination of title and body text:', Full_Text)
      print('Full body text:', Full_Body_Text)

      lenText=len(re. findall(r'\w+', Full_Text))
      print('The lenght of the full Text:', lenText)

      r = Readability(Full_Text)

      ##Flesch-Kincaid metrics
      if(lenText>=100):
        fk = r.flesch_kincaid()
        #print(fk.score)
        print('Flesch-Kincaid metrics reading level:', fk.grade_level, '\n====================')
      else:
        fk=0
        print('Flesch-Kincaid metrics reading level:', fk, '\n====================')

      ##Flesch Reading metrics
      if(lenText>=100):
        f = r.flesch()
        print('Flesch Reading metrics reading level:', f.score, '\n====================')
        #print(f.ease)
        #print(f.grade_levels)
      else:
        f=0
        print('Flesch Reading metrics reading level:', f, '\n====================')

      ##Dale-Chall metrics
      if(lenText>=100):
        dc=r.dale_chall()
        print('Dale-Chall metrics reading level:', dc.score, '\n====================')
        #print(dc.grade_levels)
      else:
        dc=0
        print('Dale-Chall metrics reading level:', dc, '\n====================')

      ##Automated Readability metrics
      if(lenText>=100):
        ari = r.ari()
        print('Automated Readability metrics reading level:', ari.score, '\n====================')
        #print(ari.grade_levels)
        #print(ari.ages)
      else:
        ari=0
        print('Automated Readability metrics reading level:', ari, '\n====================')

      ##Coleman-Liau metrics
      if(lenText>=100):
        cl = r.coleman_liau()
        #print(cl.score)
        print('Coleman-Liau metrics reading level:', cl.grade_level,'\n====================')
      else:
        cl=0
        print('Coleman-Liau metrics reading level:', cl,'\n====================')

      ##Gunning fog metrics
      if(lenText>=100):
        gf = r.gunning_fog()
        print('Gunning fog metrics reading level:',gf.score,'\n====================')
        #print(gf.grade_level)
      else:
        gf=0
        print('Gunning fog metrics reading level:',gf,'\n====================')


      ##SMOG metrics
      #s = r.smog() // require 30 sentences
      #print(s.score)
      #print(s.grade_level)

      ##Spache Readability metrics
      if(lenText>=100):
        s = r.spache()
        #print(s.score)
        print('Spache Readability metrics reading level:', s.grade_level,'\n====================')
      else:
        s=0
        print('Spache Readability metrics reading level:', s,'\n====================')

      ##Linsear Write metrics
      if(lenText>=100):
        lw = r.linsear_write()
        #print(lw.score)
        #a=lw.grade_level
        print('Linsear Write metrics reading level:', lw.grade_level, '\n====================')
      else:
        lw=0
        print('Linsear Write metrics reading level:', lw, '\n====================')

      if(lenText>=100):
        Average_reading_level= (float(fk.grade_level)+float(f.score)+float(dc.score)+float(ari.score)+float(cl.grade_level)+float(gf.score)+float(s.grade_level)+float(lw.grade_level))/8
        print('The average reading level is:', Average_reading_level)
      else:
        Average_reading_level= (fk+f+dc+ari+cl+gf+s+lw)/8
        print('The average reading level is:', Average_reading_level)


      if(Average_reading_level>=9):     
        print('Pass: Guideline 3.1.5 Reading Level; Webpage Content has accessible reading level')
        Pcounter50=1; Fcounter50=0; NTcounter50=0; NDcounter50=0
        PLevelAAA14=1; FLevelAAA14=0; NTLevelAAA14=0; NDLevelAAA14=0
        VLevelAAA14=1; ADLevelAAA14=0; ETLevelAAA14=0

        PVisionImpairment50=0; FVisionImpairment50=0; NDVisionImpairment50=0; NTVisionImpairment50=0      
        PHearingDifficulty50=0; FHearingDifficulty50=0; NDHearingDifficulty50=0; NTHearingDifficulty50=0 
        PCognitiveDisability50=1; FCognitiveDisability50=0; NDCognitiveDisability50=0; NTCognitiveDisability50=0 
        PMotionDisability50=0; FMotionDisability50=0; NDMotionDisability50=0; NTMotionDisability50=0
        PLearningDisability50=1; FLearningDisability50=0; NDLearningDisability50=0; NTLearningDisability50=0
        
        Frame63=Frame(main_fm, bg='white', width=380, height=25) 
        Frame63.place(x=10, y=780, width=380, height=25)
        Lable63=Label(Frame63, text='Sc (3.1.5) Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable63.grid(row=0, column=0) 
        Framee63=Frame(main_fm, bg='white', width=110, height=25)
        Framee63.place(x=400, y=780, width=110, height=25)
        Lablee63=Label(Framee63, text=lenText, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee63.grid(row=0, column=0)
        Frameee63=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee63.place(x=530, y=780, width=480, height=25)
        Lableee63=Label(Frameee63, text='Webpage Content has Accessible Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee63.grid(row=0, column=0) 
        Frameeee63=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee63.place(x=1030, y=780, width=130, height=25) 
        Lableeee63=Label(Frameeee63, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee63.grid(row=0, column=0) 
        Frameeeee63=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee63.place(x=1180, y=780, width=80, height=25)
        Lableeeee63=Label(Frameeeee63, text=int(Average_reading_level), fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee63.grid(row=0, column=0)
        Frameeeeee63=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee63.place(x=1280, y=780, width=150, height=25)
        Lableeeeee63=Label(Frameeeeee63, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee63.grid(row=0, column=0)
        Frameeeeeee63=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee63.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee63=Label(Frameeeeeee63, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee63.grid(row=0, column=0)
        Frameeeeeeee63=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee63.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee63=Label(Frameeeeeeee63, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee63.grid(row=0, column=0)
      elif(Average_reading_level<9 and Average_reading_level>0):
        print('Fail: Guideline 3.1.5 Reading Level; Webpage Content has no accessible reading level')
        Fcounter50=1; Pcounter50=0; NTcounter50=0; NDcounter50=0
        FLevelAAA14=1; PLevelAAA14=0; NTLevelAAA14=0; NDLevelAAA14=0
        ADLevelAAA14=1; VLevelAAA14=0; ETLevelAAA14=0

        FVisionImpairment50=0; PVisionImpairment50=0; NDVisionImpairment50=0; NTVisionImpairment50=0      
        FHearingDifficulty50=0; PHearingDifficulty50=0; NDHearingDifficulty50=0; NTHearingDifficulty50=0 
        FCognitiveDisability50=1; PCognitiveDisability50=0; NDCognitiveDisability50=0; NTCognitiveDisability50=0 
        FMotionDisability50=0; PMotionDisability50=0; NDMotionDisability50=0; NTMotionDisability50=0
        FLearningDisability50=1; PLearningDisability50=0; NDLearningDisability50=0; NTLearningDisability50=0
        
        Frame63=Frame(main_fm, bg='white', width=380, height=25) 
        Frame63.place(x=10, y=780, width=380, height=25)
        Lable63=Label(Frame63, text='Sc (3.1.5) Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable63.grid(row=0, column=0) 
        Framee63=Frame(main_fm, bg='white', width=110, height=25)
        Framee63.place(x=400, y=780, width=110, height=25)
        Lablee63=Label(Framee63, text=lenText, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee63.grid(row=0, column=0)
        Frameee63=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee63.place(x=530, y=780, width=480, height=25)
        Lableee63=Label(Frameee63, text='Webpage Content has no Accessible Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee63.grid(row=0, column=0)
        Frameeee63=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee63.place(x=1030, y=780, width=130, height=25) 
        Lableeee63=Label(Frameeee63,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee63.grid(row=0, column=0) 
        Frameeeee63=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee63.place(x=1180, y=780, width=80, height=25)
        Lableeeee63=Label(Frameeeee63, text=int(Average_reading_level), fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee63.grid(row=0, column=0)
        Frameeeeee63=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee63.place(x=1280, y=780, width=150, height=25)
        Lableeeeee63=Label(Frameeeeee63, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee63.grid(row=0, column=0)
        Frameeeeeee63=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee63.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee63=Label(Frameeeeeee63, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee63.grid(row=0, column=0)
        Frameeeeeeee63=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee63.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee63=Label(Frameeeeeeee63, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee63.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.1.5 Reading Level; Webpage Content length is short to calcuate reading level')
        NDcounter50=1; Fcounter50=0; Pcounter50=0; NTcounter50=0
        NDLevelAAA14=1; FLevelAAA14=0; PLevelAAA14=0; NTLevelAAA14=0
        VLevelAAA14=1; ADLevelAAA14=0; ETLevelAAA14=0

        NDVisionImpairment50=0; PVisionImpairment50=0; FVisionImpairment50=0; NTVisionImpairment50=0      
        NDHearingDifficulty50=0; PHearingDifficulty50=0; FHearingDifficulty50=0; NTHearingDifficulty50=0 
        NDCognitiveDisability50=1; PCognitiveDisability50=0; FCognitiveDisability50=0; NTCognitiveDisability50=0 
        NDMotionDisability50=0; PMotionDisability50=0; FMotionDisability50=0; NTMotionDisability50=0
        NDLearningDisability50=1; PLearningDisability50=0; FLearningDisability50=0; NTLearningDisability50=0
        
        Frame63=Frame(main_fm, bg='white', width=380, height=25) 
        Frame63.place(x=10, y=780, width=380, height=25)
        Lable63=Label(Frame63, text='Sc (3.1.5) Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable63.grid(row=0, column=0) 
        Framee63=Frame(main_fm, bg='white', width=110, height=25)
        Framee63.place(x=400, y=780, width=110, height=25)
        Lablee63=Label(Framee63, text=lenText, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee63.grid(row=0, column=0)
        Frameee63=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee63.place(x=530, y=780, width=480, height=25)
        Lableee63=Label(Frameee63, text='Webpage Content Length is Short to Calcuate Reading Level', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee63.grid(row=0, column=0)
        Frameeee63=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee63.place(x=1030, y=780, width=130, height=25) 
        Lableeee63=Label(Frameeee63,text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee63.grid(row=0, column=0) 
        Frameeeee63=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee63.place(x=1180, y=780, width=80, height=25)
        Lableeeee63=Label(Frameeeee63, text='<=0', fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee63.grid(row=0, column=0)
        Frameeeeee63=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee63.place(x=1280, y=780, width=150, height=25)
        Lableeeeee63=Label(Frameeeeee63, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee63.grid(row=0, column=0)
        Frameeeeeee63=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee63.place(x=1450, y=780, width=210, height=25)
        Lableeeeeee63=Label(Frameeeeeee63, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee63.grid(row=0, column=0)
        Frameeeeeeee63=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee63.place(x=1680, y=780, width=230, height=25)   
        Lableeeeeeee63=Label(Frameeeeeeee63, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee63.grid(row=0, column=0)

            ####===========================Guideline 3.1.6 (level AAA)====================================####
     

      # from nltk.tokenize import word_tokenize, sent_tokenize
      # Titlewords=word_tokenize(Titletext)
      # print('Title after Tokenization:', Titlewords)

      # ## Process of removing stopwords
      # tokenize_words_without_stop_words_title= []
      # for word in Titlewords:
      #   if word not in stop_words:
      #     tokenize_words_without_stop_words_title.append(word)
      #     print('Title after removing stop words:', tokenize_words_without_stop_words_title)

      # words_title_cleaned_prev = [re.sub(r"[^a-zA-Z0-9]", "", file) for file in tokenize_words_without_stop_words_title]
      # print('Title after removing special characters and values (first):',words_title_cleaned_prev)
      # for i in range(len(words_title_cleaned_prev)):
      #   if words_title_cleaned_prev[i] == '':
      #     words_title_cleaned_prev[i] = 'None'

      # words_title_cleaned=words_title_cleaned_prev
      # print('Title after removing special characters and values:',words_title_cleaned)

      
      global titleMispronouncedWords_totalCount

      from nltk.corpus import words


      counter=0
      titleMispronouncedWords_Passed=0
      List_title=words_title_cleaned
      for x in List_title:
        if ((x in words.words()) or (x in wn.words())):
          counter+=1  
          titleMispronouncedWords_Passed=counter                        
      print('Number of Passed Guideline for Title Mispronunced words:',titleMispronouncedWords_Passed)

      counter=0
      titleMispronouncedWords_Failed=0
      List_title=words_title_cleaned
      for x in List_title:
        if ((x not in words.words()) or (x not in wn.words())):
          counter+=1  
          titleMispronouncedWords_Failed=counter                        
      print('Number of Failed Guideline for Title Mispronunced words:',titleMispronouncedWords_Failed)


      titleMispronouncedWords_totalCount=len(re. findall(r'\w+', Titletext))
      print('The total count of checked for Title Mispronunced Words:', titleMispronouncedWords_totalCount)

      if(titleMispronouncedWords_Failed<=0 and titleMispronouncedWords_Passed>=1):
        print('Pass: Guideline 3.1.6 Pronunciation; No mispronunced words have found in the Title')
        Frame64=Frame(main_fm, bg='white', width=380, height=25) 
        Frame64.place(x=10, y=805, width=380, height=25)
        Lable64=Label(Frame64, text='Sc (3.1.6) Pronunciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable64.grid(row=0, column=0) 
        Framee64=Frame(main_fm, bg='white', width=110, height=25)
        Framee64.place(x=400, y=805, width=110, height=25)
        Lablee64=Label(Framee64, text=titleMispronouncedWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee64.grid(row=0, column=0)
        Frameee64=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee64.place(x=530, y=805, width=480, height=25)
        Lableee64=Label(Frameee64, text='No Mispronunced Words have Found in the Title', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee64.grid(row=0, column=0)
        Frameeee64=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee64.place(x=1030, y=805, width=130, height=25) 
        Lableeee64=Label(Frameeee64, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee64.grid(row=0, column=0) 
        Frameeeee64=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee64.place(x=1180, y=805, width=80, height=25)
        Lableeeee64=Label(Frameeeee64, text=titleMispronouncedWords_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee64.grid(row=0, column=0)
        Frameeeeee64=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee64.place(x=1280, y=805, width=150, height=25)
        Lableeeeee64=Label(Frameeeeee64, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee64.grid(row=0, column=0)
        Frameeeeeee64=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee64.place(x=1450, y=805, width=210, height=25)
        Lableeeeeee64=Label(Frameeeeeee64, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee64.grid(row=0, column=0)
        Frameeeeeeee64=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee64.place(x=1680, y=805, width=230, height=25)   
        Lableeeeeeee64=Label(Frameeeeeeee64, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee64.grid(row=0, column=0)
      elif(titleMispronouncedWords_Failed>=1):
        print('Fail: Guideline 3.1.6 Pronunciation;  Mispronunced words have found in the Title')
        Frame64=Frame(main_fm, bg='white', width=380, height=25) 
        Frame64.place(x=10, y=805, width=380, height=25)
        Lable64=Label(Frame64, text='Sc (3.1.6) Pronunciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable64.grid(row=0, column=0) 
        Framee64=Frame(main_fm, bg='white', width=110, height=25)
        Framee64.place(x=400, y=805, width=110, height=25)
        Lablee64=Label(Framee64, text=titleMispronouncedWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee64.grid(row=0, column=0)
        Frameee64=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee64.place(x=530, y=805, width=480, height=25)
        Lableee64=Label(Frameee64, text='Mispronunced Words have Found in the Title', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee64.grid(row=0, column=0) 
        Frameeee64=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee64.place(x=1030, y=805, width=130, height=25) 
        Lableeee64=Label(Frameeee64,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee64.grid(row=0, column=0) 
        Frameeeee64=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee64.place(x=1180, y=805, width=80, height=25)
        Lableeeee64=Label(Frameeeee64, text=titleMispronouncedWords_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee64.grid(row=0, column=0)
        Frameeeeee64=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee64.place(x=1280, y=805, width=150, height=25)
        Lableeeeee64=Label(Frameeeeee64, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee64.grid(row=0, column=0)
        Frameeeeeee64=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee64.place(x=1450, y=805, width=210, height=25)
        Lableeeeeee64=Label(Frameeeeeee64, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee64.grid(row=0, column=0)
        Frameeeeeeee64=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee64.place(x=1680, y=805, width=230, height=25)   
        Lableeeeeeee64=Label(Frameeeeeeee64, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee64.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.1.6 Pronunciation;  Title length is short to Check Mispronunced Words')
        Frame64=Frame(main_fm, bg='white', width=380, height=25) 
        Frame64.place(x=10, y=805, width=380, height=25)
        Lable64=Label(Frame64, text='Sc (3.1.6) Pronunciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable64.grid(row=0, column=0) 
        Framee64=Frame(main_fm, bg='white', width=110, height=25)
        Framee64.place(x=400, y=805, width=110, height=25)
        Lablee64=Label(Framee64, text=titleMispronouncedWords_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee64.grid(row=0, column=0)
        Frameee64=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee64.place(x=530, y=805, width=480, height=25)
        Lableee64=Label(Frameee64, text='Title Length is Short to Check Mispronunced Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee64.grid(row=0, column=0) 
        Frameeee64=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee64.place(x=1030, y=805, width=130, height=25) 
        Lableeee64=Label(Frameeee64,text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee64.grid(row=0, column=0) 
        Frameeeee64=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee64.place(x=1180, y=805, width=80, height=25)
        Lableeeee64=Label(Frameeeee64, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee64.grid(row=0, column=0)
        Frameeeeee64=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee64.place(x=1280, y=805, width=150, height=25)
        Lableeeeee64=Label(Frameeeeee64, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee64.grid(row=0, column=0)
        Frameeeeeee64=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee64.place(x=1450, y=805, width=210, height=25)
        Lableeeeeee64=Label(Frameeeeeee64, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee64.grid(row=0, column=0)
        Frameeeeeeee64=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee64.place(x=1680, y=805, width=230, height=25)   
        Lableeeeeeee64=Label(Frameeeeeeee64, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee64.grid(row=0, column=0)

      ######-------------(level AAA)-----------------#####
     
      global bodyMispronouncedWord_totalCount

      # from nltk.tokenize import word_tokenize, sent_tokenize
      # Bodywords=word_tokenize(Bodywords_final)

      # # Bodywords_final=re.sub('(\\b[A-Za-z] \\b|\\b [A-Za-z]\\b)', '', Bodywords)
      # # print('Content after Tokenization:', Bodywords_final)

      # ## Process of removing stopwords
      # tokenize_words_without_stop_words_body= []
      # for word in Bodywords:
      #   if word not in stop_words:
      #     tokenize_words_without_stop_words_body.append(word)
      #     print('Content after removing stop words:', tokenize_words_without_stop_words_body)

      # words_body_cleaned_prev = [re.sub(r"[^a-zA-Z0-9]", "", file) for file in tokenize_words_without_stop_words_body]
      # print('Content after removing special characters and values (first):', words_body_cleaned_prev)

      # for i in range(len(words_body_cleaned_prev)):
      #   if words_body_cleaned_prev [i] == '':
      #     words_body_cleaned_prev [i] = 'None'

      # words_body_cleaned=words_body_cleaned_prev
      # print('Content after removing special characters and values:',words_body_cleaned)

      counter=0
      bodyMispronouncedWord_Passed=0
      List_body=words_body_cleaned
      for x in List_body:
        if (x in wn.words()):
          counter+=1  
          bodyMispronouncedWord_Passed=counter                        
      print('Number of Passed Guideline for Body Mispronunced Words:',bodyMispronouncedWord_Passed)

      counter=0
      bodyMispronouncedWord_Failed=0
      List_body=words_body_cleaned
      for x in List_body:
        if (x not in wn.words()):
          counter+=1  
          bodyMispronouncedWord_Failed=counter                        
      print('Number of Failed Guideline for Body Mispronunced Words:',bodyMispronouncedWord_Failed)


      # counter=0
      # bodyMispronouncedWord_Passed=0
      # List_body=words_body_cleaned
      # for x in List_body:
      #   #a = TextBlob(x)
      #   #if (TextBlob(x) in List_body):
      #   #if (a.correct() == []):
      #   if(x in english_words):
      #     counter+=1  
      #     bodyMispronouncedWord_Passed=counter                        
      # print('Number of Passed Guideline for Body Mispronunced Words:',bodyMispronouncedWord_Passed)


      # counter=0
      # bodyMispronouncedWord_Failed=0
      # #mistakes_title=0
      # List_body=words_body_cleaned
      # #print(Title_final)
      # for x in List_body:
      #   #if(TextBlob(x) not in List_body):
      #   #a = TextBlob(x)
      #   #if (a.correct() != []):
      #   if (x not in english_words):
      #       counter+=1  
      #       bodyMispronouncedWord_Failed=counter                        
      # print('Number of Failed Guideline for Body Mispronunced Words:',bodyMispronouncedWord_Failed)


      bodyMispronouncedWord_totalCount=len(re. findall(r'\w+', Bodywords_final))
      print('The total count of checked for Body Mispronunced Words:', bodyMispronouncedWord_totalCount)

      if(bodyMispronouncedWord_Failed<=0 and bodyMispronouncedWord_Passed>=1):
        print('Pass: Guideline 3.1.6 Pronunciation; No mispronounced words have found in the Content')
        Frame65=Frame(main_fm, bg='white', width=380, height=25) 
        Frame65.place(x=10, y=830, width=380, height=25)
        Lable65=Label(Frame65, text='Sc (3.1.6) Pronounciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable65.grid(row=0, column=0) 
        Framee65=Frame(main_fm, bg='white', width=110, height=25)
        Framee65.place(x=400, y=830, width=110, height=25)
        Lablee65=Label(Framee65, text=bodyMispronouncedWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee65.grid(row=0, column=0)
        Frameee65=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee65.place(x=530, y=830, width=480, height=25)
        Lableee65=Label(Frameee65, text='No Mispronounced Words have Found in the Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee65.grid(row=0, column=0)
        Frameeee65=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee65.place(x=1030, y=830, width=130, height=25) 
        Lableeee65=Label(Frameeee65, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee65.grid(row=0, column=0) 
        Frameeeee65=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee65.place(x=1180, y=830, width=80, height=25)
        Lableeeee65=Label(Frameeeee65, text=bodyMispronouncedWord_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee65.grid(row=0, column=0)
        Frameeeeee65=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee65.place(x=1280, y=830, width=150, height=25)
        Lableeeeee65=Label(Frameeeeee65, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee65.grid(row=0, column=0)
        Frameeeeeee65=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee65.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee65=Label(Frameeeeeee65, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee65.grid(row=0, column=0)
        Frameeeeeeee65=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee65.place(x=1680, y=830, width=230, height=25)   
        Lableeeeeeee65=Label(Frameeeeeeee65, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee65.grid(row=0, column=0)
      elif(bodyMispronouncedWord_Failed>=1):
        print('Fail: Guideline 3.1.6 Pronunciation;  Mispronunced words have found in the Content') 
        Frame65=Frame(main_fm, bg='white', width=380, height=25) 
        Frame65.place(x=10, y=830, width=380, height=25)
        Lable65=Label(Frame65, text='Sc (3.1.6) Pronounciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable65.grid(row=0, column=0) 
        Framee65=Frame(main_fm, bg='white', width=110, height=25)
        Framee65.place(x=400, y=830, width=110, height=25)
        Lablee65=Label(Framee65, text=bodyMispronouncedWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee65.grid(row=0, column=0)
        Frameee65=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee65.place(x=530, y=830, width=480, height=25)
        Lableee65=Label(Frameee65, text='Mispronounced Words have Found in the Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee65.grid(row=0, column=0) 
        Frameeee65=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee65.place(x=1030, y=830, width=130, height=25) 
        Lableeee65=Label(Frameeee65,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee65.grid(row=0, column=0)
        Frameeeee65=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee65.place(x=1180, y=830, width=80, height=25)
        Lableeeee65=Label(Frameeeee65, text=bodyMispronouncedWord_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee65.grid(row=0, column=0) 
        Frameeeeee65=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee65.place(x=1280, y=830, width=150, height=25)
        Lableeeeee65=Label(Frameeeeee65, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee65.grid(row=0, column=0)
        Frameeeeeee65=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee65.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee65=Label(Frameeeeeee65, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee65.grid(row=0, column=0)
        Frameeeeeeee65=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee65.place(x=1680, y=830, width=230, height=25)   
        Lableeeeeeee65=Label(Frameeeeeeee65, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee65.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.1.6 Pronunciation;  Content length is short to Check Mispronunced Words') 
        Frame65=Frame(main_fm, bg='white', width=380, height=25) 
        Frame65.place(x=10, y=830, width=380, height=25)
        Lable65=Label(Frame65, text='Sc (3.1.6) Pronounciation', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable65.grid(row=0, column=0) 
        Framee65=Frame(main_fm, bg='white', width=110, height=25)
        Framee65.place(x=400, y=830, width=110, height=25)
        Lablee65=Label(Framee65, text=bodyMispronouncedWord_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee65.grid(row=0, column=0)
        Frameee65=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee65.place(x=530, y=830, width=480, height=25)
        Lableee65=Label(Frameee65, text='Content Length is Short to Check Mispronunced Words', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee65.grid(row=0, column=0) 
        Frameeee65=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee65.place(x=1030, y=830, width=130, height=25) 
        Lableeee65=Label(Frameeee65,text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee65.grid(row=0, column=0)
        Frameeeee65=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee65.place(x=1180, y=830, width=80, height=25)
        Lableeeee65=Label(Frameeeee65, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee65.grid(row=0, column=0) 
        Frameeeeee65=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee65.place(x=1280, y=830, width=150, height=25)
        Lableeeeee65=Label(Frameeeeee65, text='Level AAA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee65.grid(row=0, column=0)
        Frameeeeeee65=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee65.place(x=1450, y=830, width=210, height=25)
        Lableeeeeee65=Label(Frameeeeeee65, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee65.grid(row=0, column=0)
        Frameeeeeeee65=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee65.place(x=1680, y=830, width=230, height=25)   
        Lableeeeeeee65=Label(Frameeeeeeee65, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee65.grid(row=0, column=0)

      if ((titleMispronouncedWords_Failed<=0 and titleMispronouncedWords_Passed>=1) and (bodyMispronouncedWord_Failed<=0 and bodyMispronouncedWord_Passed>=1)):
        print('Pass: Guideline 3.1.6 Pronunciation; No mispronunced words have found in the Content')
        Pcounter51=1; Fcounter51=0; NTcounter51=0; NDcounter51=0
        PLevelAAA15=1; FLevelAAA15=0; NTLevelAAA15=0; NDLevelAAA15=0
        VLevelAAA15=1; ADLevelAAA15=0; ETLevelAAA15=0

        PVisionImpairment51=1; FVisionImpairment51=0; NDVisionImpairment51=0; NTVisionImpairment51=0      
        PHearingDifficulty51=0; FHearingDifficulty51=0; NDHearingDifficulty51=0; NTHearingDifficulty51=0 
        PCognitiveDisability51=1; FCognitiveDisability51=0; NDCognitiveDisability51=0; NTCognitiveDisability51=0 
        PMotionDisability51=0; FMotionDisability51=0; NDMotionDisability51=0; NTMotionDisability51=0
        PLearningDisability51=1; FLearningDisability51=0; NDLearningDisability51=0; NTLearningDisability51=0
      elif(((titleMispronouncedWords_Failed>=1 and titleMispronouncedWords_Passed<=0) and (bodyMispronouncedWord_Failed>=1 and bodyMispronouncedWord_Passed<=0)) or (titleMispronouncedWords_Failed>=1 and bodyMispronouncedWord_Failed>=1)):
        print('Fail: Guideline 3.1.6 Pronunciation;  Mispronunced words have found in the Content')
        Fcounter51=1; Pcounter51=0; NTcounter51=0; NDcounter51=0
        FLevelAAA15=1; PLevelAAA15=0; NTLevelAAA15=0; NDLevelAAA15=0
        ADLevelAAA15=1; VLevelAAA15=0; ETLevelAAA15=0

        FVisionImpairment51=1; PVisionImpairment51=0; NDVisionImpairment51=0; NTVisionImpairment51=0      
        FHearingDifficulty51=0; PHearingDifficulty51=0; NDHearingDifficulty51=0; NTHearingDifficulty51=0 
        FCognitiveDisability51=1; PCognitiveDisability51=0; NDCognitiveDisability51=0; NTCognitiveDisability51=0 
        FMotionDisability51=0; PMotionDisability51=0; NDMotionDisability51=0; NTMotionDisability51=0
        FLearningDisability51=1; PLearningDisability51=0; NDLearningDisability51=0; NTLearningDisability51=0
      else:
        print('Not Detected: Guideline 3.1.6 Pronunciation;  Content length is short to Check Mispronunced Words')
        NDcounter51=1; Fcounter51=0; Pcounter51=0; NTcounter51=0
        NDLevelAAA15=1; FLevelAAA15=0; PLevelAAA15=0; NTLevelAAA15=0
        VLevelAAA15=1; ADLevelAAA15=0; ETLevelAAA15=0

        NDVisionImpairment51=1; FVisionImpairment51=0; PVisionImpairment51=0; NTVisionImpairment51=0      
        NDHearingDifficulty51=0; FHearingDifficulty51=0; PHearingDifficulty51=0; NTHearingDifficulty51=0 
        NDCognitiveDisability51=1; FCognitiveDisability51=0; PCognitiveDisability51=0; NTCognitiveDisability51=0 
        NDMotionDisability51=0; FMotionDisability51=0; PMotionDisability51=0; NTMotionDisability51=0
        NDLearningDisability51=1; FLearningDisability51=0; PLearningDisability51=0; NTLearningDisability51=0

      

      ####===========================Guideline 3.2.2 (level A)====================================####
      
      global checkbox_totalCount

      CheckBox_Object=1

      counter=0
      checkbox_Passed=0
      inputfield1 = soup.find_all('input')
      #for link in soup.find_all('input'):
      for item in inputfield1:
        if(item.get('type') == 'checkbox'):     
          if(item.get('value') != ''):
            counter+=1  
            checkbox_Passed=counter                        
      print('Number of Passed Guideline for Checkbox:',checkbox_Passed)

      counter=0
      checkbox_Failed=0
      inputfield1 = soup.find_all('input')
      #for link in soup.find_all('input'):
      for item in inputfield1:
        if(item.get('type') == 'checkbox'):     
          if(item.get('value') == ''):
            counter+=1  
            checkbox_Failed=counter                        
      print('Number of Failed Guideline for Checkbox:',checkbox_Failed)

      checkbox_totalCount=checkbox_Failed+checkbox_Passed
      print('The total count of checked for Aria Label:', checkbox_totalCount)
      
      if(checkbox_Failed<=0 and checkbox_Passed>=1):
        print('Pass: Guideline 3.2.2 On Input; Checkbox is Identifiable and has no missing information')
        
        Frame66=Frame(main_fm, bg='white', width=380, height=25) 
        Frame66.place(x=10, y=855, width=380, height=25)
        Lable66=Label(Frame66, text='Sc (3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable66.grid(row=0, column=0)
        Framee66=Frame(main_fm, bg='white', width=110, height=25)
        Framee66.place(x=400, y=855, width=110, height=25)
        Lablee66=Label(Framee66, text=checkbox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee66.grid(row=0, column=0) 
        Frameee66=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee66.place(x=530, y=855, width=480, height=25)
        Lableee66=Label(Frameee66, text='Checkbox is Identifiable and has no Missing Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee66.grid(row=0, column=0) 
        Frameeee66=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee66.place(x=1030, y=855, width=130, height=25) 
        Lableeee66=Label(Frameeee66, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee66.grid(row=0, column=0) 
        Frameeeee66=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee66.place(x=1180, y=855, width=80, height=25)
        Lableeeee66=Label(Frameeeee66, text=checkbox_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee66.grid(row=0, column=0)
        Frameeeeee66=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee66.place(x=1280, y=855, width=150, height=25)
        Lableeeeee66=Label(Frameeeeee66, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee66.grid(row=0, column=0)
        Frameeeeeee66=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee66.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee66=Label(Frameeeeeee66, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee66.grid(row=0, column=0)
        Frameeeeeeee66=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee66.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee66=Label(Frameeeeeeee66, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee66.grid(row=0, column=0)
        #break
      elif(checkbox_Failed>0): 
        print('Fail: Guideline 3.2.2 On Input; Checkbox is Identifiable and has missing information')
        
        Frame66=Frame(main_fm, bg='white', width=380, height=25) 
        Frame66.place(x=10, y=855, width=380, height=25)
        Lable66=Label(Frame66, text='Sc(3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable66.grid(row=0, column=0) 
        Framee66=Frame(main_fm, bg='white', width=110, height=25)
        Framee66.place(x=400, y=855, width=110, height=25)
        Lablee66=Label(Framee66, text=checkbox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee66.grid(row=0, column=0)
        Frameee66=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee66.place(x=530, y=855, width=480, height=25)
        Lableee66=Label(Frameee66, text='Checkbox is Identifiable and has Missing Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee66.grid(row=0, column=0)
        Frameeee66=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee66.place(x=1030, y=855, width=130, height=25) 
        Lableeee66=Label(Frameeee66,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee66.grid(row=0, column=0) 
        Frameeeee66=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee66.place(x=1180, y=855, width=80, height=25)
        Lableeeee66=Label(Frameeeee66, text=checkbox_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee66.grid(row=0, column=0)
        Frameeeeee66=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee66.place(x=1280, y=855, width=150, height=25)
        Lableeeeee66=Label(Frameeeeee66, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee66.grid(row=0, column=0)
        Frameeeeeee66=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee66.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee66=Label(Frameeeeeee66, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee66.grid(row=0, column=0)
        Frameeeeeeee66=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee66.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee66=Label(Frameeeeeeee66, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee66.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.2 On Input; Webpage has no Checkbox')
        NDcounter18=1; Pcounter18=0; Fcounter18=0; NTcounter18=0
        NDLevelA10=1; PLevelA10=0; FLevelA10=0; NTLevelA10=0
        VLevelA10=1; ADLevelA10=0; ETLevelA10=0

        NDVisionImpairment18=1; PVisionImpairment18=0; FVisionImpairment18=0; NTVisionImpairment18=0     
        NDHearingDifficulty18=0; PHearingDifficulty18=0; FHearingDifficulty18=0; NTHearingDifficulty18=0 
        NDCognitiveDisability18=1; PCognitiveDisability18=0; FCognitiveDisability18=0; NTCognitiveDisability18=0 
        NDMotionDisability18=0; PMotionDisability18=0; FMotionDisability18=0; NTMotionDisability18=0
        NDLearningDisability18=0; PLearningDisability18=0; FLearningDisability18=0; NTLearningDisability18=0
        
        Frame66=Frame(main_fm, bg='white', width=380, height=25) 
        Frame66.place(x=10, y=855, width=380, height=25)
        Lable66=Label(Frame66, text='Sc (3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable66.grid(row=0, column=0) 
        Framee66=Frame(main_fm, bg='white', width=110, height=25)
        Framee66.place(x=400, y=855, width=110, height=25)
        Lablee66=Label(Framee66, text=0, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee66.grid(row=0, column=0)
        Frameee66=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee66.place(x=530, y=855, width=480, height=25)
        Lableee66=Label(Frameee66, text='Webpage has no Checkbox', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee66.grid(row=0, column=0) 
        Frameeee66=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee66.place(x=1030, y=855, width=130, height=25) 
        Lableeee66=Label(Frameeee66, text='NOT DETECTED', fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee66.grid(row=0, column=0) 
        Frameeeee66=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee66.place(x=1180, y=855, width=80, height=25)
        Lableeeee66=Label(Frameeeee66, text=0, fg='dark goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee66.grid(row=0, column=0)
        Frameeeeee66=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee66.place(x=1280, y=855, width=150, height=25)
        Lableeeeee66=Label(Frameeeeee66, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee66.grid(row=0, column=0)
        Frameeeeeee66=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee66.place(x=1450, y=855, width=210, height=25)
        Lableeeeeee66=Label(Frameeeeeee66, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee66.grid(row=0, column=0)
        Frameeeeeeee66=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee66.place(x=1680, y=855, width=230, height=25)   
        Lableeeeeeee66=Label(Frameeeeeeee66, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee66.grid(row=0, column=0)


      ###--------------------------------###

      global combobox_totalCount

      ComboBox_Object=1

      counter=0
      combobox_Passed=0
      inputfield1 = soup.find_all('input')
      for item in inputfield1:
        if(item.get('name') == 'comboboxdemo' or 'combobox'):
          if(soup.find_all('select')):     
            if(item.get('name') != ' '):
              if(soup.find_all('option')):
                if(item.get('value') != ' '):
                  counter+=1  
                  combobox_Passed=counter                        
      print('Number of Passed Guideline for Combo Box:',combobox_Passed)

      counter=0
      combobox_Failed=0
      inputfield1 = soup.find_all('input')
      for item in inputfield1:
        if(item.get('name') == 'comboboxdemo' or 'combobox'):
          if(soup.find_all('select')):     
            if(item.get('name') == ' '):
              if(soup.find_all('option')):
                if(item.get('value') == ' '):
                  counter+=1  
                  combobox_Failed=counter                        
      print('Number of Failed Guideline for ComboBox:',combobox_Failed)

      combobox_totalCount=combobox_Passed+combobox_Failed
      print('The total count of checked for ComboBox:', combobox_totalCount)

      if(combobox_Failed<=0 and combobox_Passed>=1):
        print('Pass: Guideline 3.2.2 On Input; Webpage ComboBox have proper name and value')
        Frame67=Frame(main_fm, bg='white', width=380, height=25) 
        Frame67.place(x=10, y=880, width=380, height=25)
        Lable67=Label(Frame67, text='Sc (3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable67.grid(row=0, column=0) 
        Framee67=Frame(main_fm, bg='white', width=110, height=25)
        Framee67.place(x=400, y=880, width=110, height=25)
        Lablee67=Label(Framee67, text=combobox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee67.grid(row=0, column=0)
        Frameee67=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee67.place(x=530, y=880, width=480, height=25)
        Lableee67=Label(Frameee67, text='Webpage ComboBox have Proper Name and Value', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee67.grid(row=0, column=0)
        Frameeee67=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee67.place(x=1030, y=880, width=130, height=25) 
        Lableeee67=Label(Frameeee67, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee67.grid(row=0, column=0) 
        Frameeeee67=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee67.place(x=1180, y=880, width=80, height=25)
        Lableeeee67=Label(Frameeeee67, text=combobox_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee67.grid(row=0, column=0)
        Frameeeeee67=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee67.place(x=1280, y=880, width=150, height=25)
        Lableeeeee67=Label(Frameeeeee67, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee67.grid(row=0, column=0)
        Frameeeeeee67=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee67.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee67=Label(Frameeeeeee67, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee67.grid(row=0, column=0)
        Frameeeeeeee67=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee67.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee67=Label(Frameeeeeeee67, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee67.grid(row=0, column=0)
      elif(combobox_Failed>=1):
        print('Fail: Guideline 3.2.2 On Input;  Webpage ComboBox have missing name or values') 
        Frame67=Frame(main_fm, bg='white', width=380, height=25) 
        Frame67.place(x=10, y=880, width=380, height=25)
        Lable67=Label(Frame67, text='Sc (3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable67.grid(row=0, column=0) 
        Framee67=Frame(main_fm, bg='white', width=110, height=25)
        Framee67.place(x=400, y=880, width=110, height=25)
        Lablee67=Label(Framee67, text=combobox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee67.grid(row=0, column=0)
        Frameee67=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee67.place(x=530, y=880, width=480, height=25)
        Lableee67=Label(Frameee67, text='Webpage ComboBox have Missing Name or Values', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee67.grid(row=0, column=0) 
        Frameeee67=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee67.place(x=1030, y=880, width=130, height=25) 
        Lableeee67=Label(Frameeee67,text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee67.grid(row=0, column=0)
        Frameeeee67=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee67.place(x=1180, y=880, width=80, height=25)
        Lableeeee67=Label(Frameeeee67, text=combobox_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee67.grid(row=0, column=0) 
        Frameeeeee67=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee67.place(x=1280, y=880, width=150, height=25)
        Lableeeeee67=Label(Frameeeeee67, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee67.grid(row=0, column=0)
        Frameeeeeee67=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee67.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee67=Label(Frameeeeeee67, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee67.grid(row=0, column=0)
        Frameeeeeeee67=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee67.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee67=Label(Frameeeeeeee67, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee67.grid(row=0, column=0)
      else:
        print('Not Detected: Guideline 3.2.2 On Input;  Webpage has no ComboBox') 
        Frame67=Frame(main_fm, bg='white', width=380, height=25) 
        Frame67.place(x=10, y=880, width=380, height=25)
        Lable67=Label(Frame67, text='Sc (3.2.2) On Input', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable67.grid(row=0, column=0) 
        Framee67=Frame(main_fm, bg='white', width=110, height=25)
        Framee67.place(x=400, y=880, width=110, height=25)
        Lablee67=Label(Framee67, text=combobox_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee67.grid(row=0, column=0)
        Frameee67=Frame(main_fm, bg='white', width=480, height=25) 
        Frameee67.place(x=530, y=880, width=480, height=25)
        Lableee67=Label(Frameee67, text='Webpage has no ComboBox', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee67.grid(row=0, column=0) 
        Frameeee67=Frame(main_fm, bg='white', width=130, height=25) 
        Frameeee67.place(x=1030, y=880, width=130, height=25) 
        Lableeee67=Label(Frameeee67,text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold')) 
        Lableeee67.grid(row=0, column=0)
        Frameeeee67=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee67.place(x=1180, y=880, width=80, height=25)
        Lableeeee67=Label(Frameeeee67, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee67.grid(row=0, column=0) 
        Frameeeeee67=Frame(main_fm, bg='white', width=150, height=25)
        Frameeeeee67.place(x=1280, y=880, width=150, height=25)
        Lableeeeee67=Label(Frameeeeee67, text='Level A', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee67.grid(row=0, column=0)
        Frameeeeeee67=Frame(main_fm, bg='white', width=210, height=25)
        Frameeeeeee67.place(x=1450, y=880, width=210, height=25)
        Lableeeeeee67=Label(Frameeeeeee67, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee67.grid(row=0, column=0)
        Frameeeeeeee67=Frame(main_fm, bg='white', width=230, height=25) 
        Frameeeeeeee67.place(x=1680, y=880, width=230, height=25)   
        Lableeeeeeee67=Label(Frameeeeeeee67, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold')) 
        Lableeeeeeee67.grid(row=0, column=0)


      if((checkbox_Failed<=0 and checkbox_Passed>=1) and  (combobox_Failed<=0 and combobox_Passed>=1)):
        print('Pass: Guideline 3.2.2 On Input; Checkbox, ComboBox and DialogBox is Identifiable and has no missing information')
        Pcounter52=1; Fcounter52=0; NTcounter52=0; NDcounter52=0
        PLevelA24=1; FLevelA24=0; NTLevelA24=0; NDLevelA24=0
        VLevelA24=1; ADLevelA24=0; ETLevelA24=0

        PVisionImpairment52=1; FVisionImpairment52=0; NDVisionImpairment52=0; NTVisionImpairment52=0      
        PHearingDifficulty52=0; FHearingDifficulty52=0; NDHearingDifficulty52=0; NTHearingDifficulty52=0 
        PCognitiveDisability52=1; FCognitiveDisability52=0; NDCognitiveDisability52=0; NTCognitiveDisability52=0 
        PMotionDisability52=0; FMotionDisability52=0; NDMotionDisability52=0; NTMotionDisability52=0
        PLearningDisability52=0; FLearningDisability52=0; NDLearningDisability52=0; NTLearningDisability52=0
      elif((checkbox_Failed>0) or (combobox_Failed>0)): 
        print('Fail: Guideline 3.2.2 On Input; Checkbox,ComboBox and DialogBox is Identifiable and has missing information')
        Fcounter52=1; Pcounter52=0; NTcounter52=0; NDcounter52=0
        FLevelA24=1; PLevelA24=0; NTLevelA24=0; NDLevelA24=0
        ADLevelA24=1; VLevelA24=0; ETLevelA24=0

        FVisionImpairment52=1; PVisionImpairment52=0; NDVisionImpairment52=0; NTVisionImpairment52=0      
        FHearingDifficulty52=0; PHearingDifficulty52=0; NDHearingDifficulty52=0; NTHearingDifficulty52=0 
        FCognitiveDisability52=1; PCognitiveDisability52=0; NDCognitiveDisability52=0; NTCognitiveDisability52=0 
        FMotionDisability52=0; PMotionDisability52=0; NDMotionDisability52=0; NTMotionDisability52=0
        FLearningDisability52=0; PLearningDisability52=0; NDLearningDisability52=0; NTLearningDisability52=0
      else:
        print('Not Detected: Guideline 3.2.2 On Input; Webpage has no Checkbox,ComboBox and DialogBox')
        NDcounter52=1; Pcounter52=0; Fcounter52=0; NTcounter52=0
        NDLevelA24=1; PLevelA24=0; FLevelA24=0; NTLevelA24=0
        VLevelA24=1; ADLevelA24=0; ETLevelA24=0

        NDVisionImpairment52=1; PVisionImpairment52=0; FVisionImpairment52=0; NTVisionImpairment52=0     
        NDHearingDifficulty52=0; PHearingDifficulty52=0; FHearingDifficulty52=0; NTHearingDifficulty52=0 
        NDCognitiveDisability52=1; PCognitiveDisability52=0; FCognitiveDisability52=0; NTCognitiveDisability52=0 
        NDMotionDisability52=0; PMotionDisability52=0; FMotionDisability52=0; NTMotionDisability52=0
        NDLearningDisability52=0; PLearningDisability52=0; FLearningDisability52=0; NTLearningDisability52=0

      
      global SemanticObjects

      SemanticObjects=Image_Object+Video_Object+Word_Object+Text_Object+Title_Object+Language_Object+CheckBox_Object+ComboBox_Object
      print('The number of Cheked Objects for Semantics Aspects:', SemanticObjects)

      global Semantics_Pass
      global Semantics_Fail
      global Semantics_NotDetected
      global Semantics_NotTested

      Semantics_Pass= Pcounter29+Pcounter30+Pcounter31+Pcounter32+Pcounter33+Pcounter34+Pcounter35+Pcounter36+Pcounter37+Pcounter38+Pcounter39+Pcounter40+Pcounter41+Pcounter42+Pcounter43+Pcounter44+Pcounter45+Pcounter46+ Pcounter47+Pcounter48+Pcounter49+Pcounter50+Pcounter51+Pcounter52
      print('The number of Guideline has Passed:', Semantics_Pass)
      Semantics_Fail= Fcounter29+Fcounter30+Fcounter31+Fcounter32+Fcounter33+Fcounter34+Fcounter35+Fcounter36+Fcounter37+Fcounter38+Fcounter39+Fcounter40+Fcounter41+Fcounter42+Fcounter43+Fcounter44+Fcounter45+Fcounter46+Fcounter47+Fcounter48+Fcounter49+Fcounter50+Fcounter51+Fcounter52
      print('The number of Guideline has Failed:', Semantics_Fail)
      Semantics_NotDetected= NDcounter29+NDcounter30+NDcounter31+NDcounter32+NDcounter33+NDcounter34+NDcounter35+NDcounter36+NDcounter37+NDcounter38+NDcounter39+NDcounter40+NDcounter41+NDcounter42+NDcounter43+NDcounter44+NDcounter45+NDcounter46+NDcounter47+NDcounter48+NDcounter49+NDcounter50+NDcounter51+NDcounter52
      print('The number of Guideline has Not Detected:', Semantics_NotDetected)
      Semantics_NotTested= NTcounter29+NTcounter30+NTcounter31+NTcounter32+NTcounter33+NTcounter34+NTcounter35+NTcounter36+NTcounter37+NTcounter38+NTcounter39+NTcounter40+NTcounter41+NTcounter42+NTcounter43+NTcounter44+NTcounter45+NTcounter46+NTcounter47+NTcounter48+NTcounter49+NTcounter50+NTcounter51+NTcounter52
      print('The number of has Not Tested:', Semantics_NotTested)

      
      global Semantics_PassLevelA
      global Semantics_FailLevelA
      global Semantics_NDLevelA
      global Semantics_NTLevelA

      Semantics_PassLevelA= PLevelA15+PLevelA16+PLevelA17+PLevelA18+PLevelA19+PLevelA20+PLevelA21+PLevelA22+PLevelA23+PLevelA24
      print('The number of Guidelines under Level A have Passed:', Semantics_PassLevelA)
      Semantics_FailLevelA= FLevelA15+FLevelA16+FLevelA17+FLevelA18+FLevelA19+FLevelA20+FLevelA21+FLevelA22+FLevelA23+FLevelA24
      print('The number of Guidelines under Level A have Failed:', Semantics_FailLevelA)
      Semantics_NDLevelA= NDLevelA15+NDLevelA16+NDLevelA17+NDLevelA18+NDLevelA19+NDLevelA20+NDLevelA21+NDLevelA22+NDLevelA23+NDLevelA24
      print('The number of Guidelines under Level A have Not Detected:', Semantics_NDLevelA)
      Semantics_NTLevelA= NTLevelA15+NTLevelA16+NTLevelA17+NTLevelA18+NTLevelA19+NTLevelA20+NTLevelA21+NTLevelA22+NTLevelA23+NTLevelA24
      print('The number of Guidelines under Level A have Not Tested:', Semantics_NTLevelA)

      global Semantics_PassLevelAA
      global Semantics_FailLevelAA
      global Semantics_NDLevelAA
      global Semantics_NTLevelAA

      Semantics_PassLevelAA= PLevelAA8+PLevelAA9+PLevelAA10+PLevelAA11+PLevelAA12+PLevelAA13
      print('The number of Guidelines under Level AA have Passed:', Semantics_PassLevelAA)
      Semantics_FailLevelAA= FLevelAA8+FLevelAA9+FLevelAA10+FLevelAA11+FLevelAA12+FLevelAA13
      print('The number of Guidelines under Level AA have Failed:', Semantics_FailLevelAA)
      Semantics_NDLevelAA= NDLevelAA8+NDLevelAA9+NDLevelAA10+NDLevelAA11+NDLevelAA12+NDLevelAA13
      print('The number of Guidelines under Level AA have Not Detected:', Semantics_NDLevelAA)
      Semantics_NTLevelAA= NTLevelAA8+NTLevelAA9+NTLevelAA10+NTLevelAA11+NTLevelAA12+NTLevelAA13
      print('The number of Guidelines under Level AA have Not Tested:', Semantics_NTLevelAA)

      global Semantics_PassLevelAAA
      global Semantics_FailLevelAAA
      global Semantics_NTLevelAAA
      global Semantics_NDLevelAAA

      Semantics_PassLevelAAA= PLevelAAA8+PLevelAAA9+PLevelAAA10+PLevelAAA11+PLevelAAA12+PLevelAAA13+PLevelAAA14+PLevelAAA15
      print('The number of Guidelines under Level AAA have Passed:', Semantics_PassLevelAAA)
      Semantics_FailLevelAAA= FLevelAAA8+FLevelAAA9+FLevelAAA10+FLevelAAA11+FLevelAAA12+FLevelAAA13+ FLevelAAA14+FLevelAAA15
      print('The number of Guidelines under Level AAA have Failed:', Semantics_FailLevelAAA)
      Semantics_NTLevelAAA= NTLevelAAA8+NTLevelAAA9+NTLevelAAA10+NTLevelAAA11+NTLevelAAA12+NTLevelAAA13+NTLevelAAA14+NTLevelAAA15
      print('The number of Guidelines under Level AAA have Not Tested:', Semantics_NTLevelAAA)
      Semantics_NDLevelAAA= NDLevelAAA8+NDLevelAAA9+NDLevelAAA10+NDLevelAAA11+NDLevelAAA12+NDLevelAAA13+NDLevelAAA14+NDLevelAAA15
      print('The number of Guidelines under Level AAA have Not Detected:', Semantics_NDLevelAAA)


      global Semantics_PassCognitiveDisability
      global Semantics_FailCognitiveDisability
      global Semantics_NotDetectedCognitiveDisability
      global Semantics_NotTestedCognitiveDisability

      Semantics_PassCognitiveDisability=PCognitiveDisability29+PCognitiveDisability30+PCognitiveDisability31+PCognitiveDisability32+PCognitiveDisability33+PCognitiveDisability34+PCognitiveDisability35+PCognitiveDisability36+PCognitiveDisability37+PCognitiveDisability38+PCognitiveDisability39+PCognitiveDisability40+PCognitiveDisability41+PCognitiveDisability42+PCognitiveDisability43+PCognitiveDisability44+PCognitiveDisability45+PCognitiveDisability46+PCognitiveDisability47+PCognitiveDisability48+PCognitiveDisability49+PCognitiveDisability50+PCognitiveDisability51+PCognitiveDisability52
      print('The number of Guideline has Passed for Cognitive Disability:', Semantics_PassCognitiveDisability)
      Semantics_FailCognitiveDisability=FCognitiveDisability29+FCognitiveDisability30+FCognitiveDisability31+FCognitiveDisability32+FCognitiveDisability33+FCognitiveDisability34+FCognitiveDisability35+FCognitiveDisability36+FCognitiveDisability37+FCognitiveDisability38+FCognitiveDisability39+FCognitiveDisability40+FCognitiveDisability41+FCognitiveDisability42+FCognitiveDisability43+FCognitiveDisability44+FCognitiveDisability45+FCognitiveDisability46+FCognitiveDisability47+FCognitiveDisability48+FCognitiveDisability49+FCognitiveDisability50+FCognitiveDisability51+FCognitiveDisability52
      print('The number of Guideline has Failed for Cognitive Disability:', Semantics_FailCognitiveDisability)
      Semantics_NotDetectedCognitiveDisability= NDCognitiveDisability29+NDCognitiveDisability30+NDCognitiveDisability31+NDCognitiveDisability32+NDCognitiveDisability33+NDCognitiveDisability34+NDCognitiveDisability35+NDCognitiveDisability36+NDCognitiveDisability37+NDCognitiveDisability38+NDCognitiveDisability39+NDCognitiveDisability40+NDCognitiveDisability41+NDCognitiveDisability42+NDCognitiveDisability43+NDCognitiveDisability44+NDCognitiveDisability45+NDCognitiveDisability46+NDCognitiveDisability47+NDCognitiveDisability48+NDCognitiveDisability49+NDCognitiveDisability50+NDCognitiveDisability51+NDCognitiveDisability52
      print('The number of Guideline has Not Detected for Cognitive Disability:', Semantics_NotDetectedCognitiveDisability)
      Semantics_NotTestedCognitiveDisability= NTCognitiveDisability29+NTCognitiveDisability30+NTCognitiveDisability31+NTCognitiveDisability32+NTCognitiveDisability33+NTCognitiveDisability34+NTCognitiveDisability35+NTCognitiveDisability36+NTCognitiveDisability37+NTCognitiveDisability38+NTCognitiveDisability39+NTCognitiveDisability40+NTCognitiveDisability41+NTCognitiveDisability42+NTCognitiveDisability43+NTCognitiveDisability44+NTCognitiveDisability45+NTCognitiveDisability46+NTCognitiveDisability47+NTCognitiveDisability48+NTCognitiveDisability49+NTCognitiveDisability50+NTCognitiveDisability51+NTCognitiveDisability52
      print('The number of has Not Tested for Cognitive DIsability:', Semantics_NotTestedCognitiveDisability)


      global Semantics_PassVisionImpairment
      global Semantics_FailVisionImpairment
      global Semantics_NotDetectedVisionImpairment
      global Semantics_NotTestedVisionImpairment

      Semantics_PassVisionImpairment= PVisionImpairment29+PVisionImpairment30+PVisionImpairment31+PVisionImpairment32+PVisionImpairment33+PVisionImpairment34+PVisionImpairment35+PVisionImpairment36+PVisionImpairment37+PVisionImpairment38+PVisionImpairment39+PVisionImpairment40+PVisionImpairment41+PVisionImpairment42+PVisionImpairment43+PVisionImpairment44+PVisionImpairment45+PVisionImpairment46+PVisionImpairment47+PVisionImpairment48+PVisionImpairment49+PVisionImpairment50+PVisionImpairment51+PVisionImpairment52
      print('The number of Guideline has Passed for Vision Impairment:', Semantics_PassVisionImpairment)
      Semantics_FailVisionImpairment= FVisionImpairment29+FVisionImpairment30+FVisionImpairment31+FVisionImpairment32+FVisionImpairment33+FVisionImpairment34+FVisionImpairment35+FVisionImpairment36+FVisionImpairment37+FVisionImpairment38+FVisionImpairment39+FVisionImpairment40+FVisionImpairment41+FVisionImpairment42+FVisionImpairment43+FVisionImpairment44+FVisionImpairment45+FVisionImpairment46+FVisionImpairment47+FVisionImpairment48+FVisionImpairment49+FVisionImpairment50+FVisionImpairment51+FVisionImpairment52
      print('The number of Guideline has Failed for Vision Impairment:', Semantics_FailVisionImpairment)
      Semantics_NotDetectedVisionImpairment= NDVisionImpairment29+NDVisionImpairment30+NDVisionImpairment31+NDVisionImpairment32+NDVisionImpairment33+NDVisionImpairment34+NDVisionImpairment35+NDVisionImpairment36+NDVisionImpairment37+NDVisionImpairment38+NDVisionImpairment39+NDVisionImpairment40+NDVisionImpairment41+NDVisionImpairment42+NDVisionImpairment43+NDVisionImpairment44+NDVisionImpairment45+NDVisionImpairment46+NDVisionImpairment47+NDVisionImpairment48+NDVisionImpairment49+NDVisionImpairment50+NDVisionImpairment51+NDVisionImpairment52
      print('The number of Guideline has Not Detected for Vision Impairment:', Semantics_NotDetectedVisionImpairment)
      Semantics_NotTestedVisionImpairment= NTVisionImpairment29+NTVisionImpairment30+NTVisionImpairment31+NTVisionImpairment32+NTVisionImpairment33+NTVisionImpairment34+NTVisionImpairment35+NTVisionImpairment36+NTVisionImpairment37+NTVisionImpairment38+NTVisionImpairment39+NTVisionImpairment40+NTVisionImpairment41+NTVisionImpairment42+NTVisionImpairment43+NTVisionImpairment44+NTVisionImpairment45+NTVisionImpairment46+NTVisionImpairment47+NTVisionImpairment48+NTVisionImpairment49+NTVisionImpairment50+NTVisionImpairment51+NTVisionImpairment52
      print('The number of Guideline has Not Tested for Vision Impairment:', Semantics_NotTestedVisionImpairment)


      global Semantics_PassHearingDifficulty
      global Semantics_FailHearingDifficulty
      global Semantics_NotDetectedHearingDifficulty
      global Semantics_NotTestedHearingDifficulty

      Semantics_PassHearingDifficulty= PHearingDifficulty29+PHearingDifficulty30+PHearingDifficulty31+PHearingDifficulty32+PHearingDifficulty33+PHearingDifficulty34+PHearingDifficulty35+PHearingDifficulty36+PHearingDifficulty37+PHearingDifficulty38+PHearingDifficulty39+PHearingDifficulty40+PHearingDifficulty41+PHearingDifficulty42+PHearingDifficulty43+PHearingDifficulty44+PHearingDifficulty45+PHearingDifficulty46+PHearingDifficulty47+PHearingDifficulty48+PHearingDifficulty49+PHearingDifficulty50+PHearingDifficulty51+PHearingDifficulty52
      print('The number of Guideline has Passed for Hearing Difficulty:', Semantics_PassHearingDifficulty)
      Semantics_FailHearingDifficulty= FHearingDifficulty29+FHearingDifficulty30+FHearingDifficulty31+FHearingDifficulty32+FHearingDifficulty33+FHearingDifficulty34+FHearingDifficulty35+FHearingDifficulty36+FHearingDifficulty37+FHearingDifficulty38+FHearingDifficulty39+FHearingDifficulty40+FHearingDifficulty41+FHearingDifficulty42+FHearingDifficulty43+FHearingDifficulty44+FHearingDifficulty45+FHearingDifficulty46+FHearingDifficulty47+FHearingDifficulty48+FHearingDifficulty49+FHearingDifficulty50+FHearingDifficulty51+FHearingDifficulty52
      print('The number of Guideline has Failed for Hearing Difficulty:', Semantics_FailHearingDifficulty)
      Semantics_NotDetectedHearingDifficulty= NDHearingDifficulty29+NDHearingDifficulty30+NDHearingDifficulty31+NDHearingDifficulty32+NDHearingDifficulty33+NDHearingDifficulty34+NDHearingDifficulty35+NDHearingDifficulty36+NDHearingDifficulty37+NDHearingDifficulty38+NDHearingDifficulty39+NDHearingDifficulty40+NDHearingDifficulty41+NDHearingDifficulty42+NDHearingDifficulty43+NDHearingDifficulty44+NDHearingDifficulty45+NDHearingDifficulty46+NDHearingDifficulty47+NDHearingDifficulty48+NDHearingDifficulty49+NDHearingDifficulty50+NDHearingDifficulty51+NDHearingDifficulty52
      print('The number of Guideline has Not Detected for Hearing Difficulty:', Semantics_NotDetectedHearingDifficulty)
      Semantics_NotTestedHearingDifficulty= NTHearingDifficulty29+NTHearingDifficulty30+NTHearingDifficulty31+NTHearingDifficulty32+NTHearingDifficulty33+NTHearingDifficulty34+NTHearingDifficulty35+NTHearingDifficulty36+NTHearingDifficulty37+NTHearingDifficulty38+NTHearingDifficulty39+NTHearingDifficulty40+NTHearingDifficulty41+NTHearingDifficulty42+NTHearingDifficulty43+NTHearingDifficulty44+NTHearingDifficulty45+NTHearingDifficulty46+NTHearingDifficulty47+NTHearingDifficulty48+NTHearingDifficulty49+NTHearingDifficulty50+NTHearingDifficulty51+NTHearingDifficulty52
      print('The number of has Not Tested for Hearing Difficulty:', Semantics_NotTestedHearingDifficulty)

      
      global Semantics_PassMotionDisability
      global Semantics_FailMotionDisability
      global Semantics_NotDetectedMotionDisability
      global Semantics_NotTestedMotionDisability

      Semantics_PassMotionDisability= PMotionDisability29+PMotionDisability30+PMotionDisability31+PMotionDisability32+PMotionDisability33+PMotionDisability34+PMotionDisability35+PMotionDisability36+PMotionDisability37+PMotionDisability38+PMotionDisability39+PMotionDisability40+PMotionDisability41+PMotionDisability42+PMotionDisability43+PMotionDisability44+PMotionDisability45+PMotionDisability46+PMotionDisability47+PMotionDisability48+PMotionDisability49+PMotionDisability50+PMotionDisability51+PMotionDisability52
      print('The number of Guideline has Passed for Motion Disability:', Semantics_PassMotionDisability)
      Semantics_FailMotionDisability=FMotionDisability29+FMotionDisability30+FMotionDisability31+FMotionDisability32+FMotionDisability33+FMotionDisability34+FMotionDisability35+FMotionDisability36+FMotionDisability37+FMotionDisability38+FMotionDisability39+FMotionDisability40+FMotionDisability41+FMotionDisability42+FMotionDisability43+FMotionDisability44+FMotionDisability45+FMotionDisability46+FMotionDisability47+FMotionDisability48+FMotionDisability49+FMotionDisability50+FMotionDisability51+FMotionDisability52
      print('The number of Guideline has Failed for Motion Disability:', Semantics_FailMotionDisability)
      Semantics_NotDetectedMotionDisability= NDMotionDisability29+NDMotionDisability30+NDMotionDisability31+NDMotionDisability32+NDMotionDisability33+NDMotionDisability34+NDMotionDisability35+NDMotionDisability36+NDMotionDisability37+NDMotionDisability38+NDMotionDisability39+NDMotionDisability40+NDMotionDisability41+NDMotionDisability42+NDMotionDisability43+NDMotionDisability44+NDMotionDisability45+NDMotionDisability46+NDMotionDisability47+NDMotionDisability48+NDMotionDisability49+NDMotionDisability50+NDMotionDisability51+NDMotionDisability52
      print('The number of Guideline has Not Detected for Motion Disability:', Semantics_NotDetectedMotionDisability)
      Semantics_NotTestedMotionDisability= NTMotionDisability29+NTMotionDisability30+NTMotionDisability31+NTMotionDisability32+NTMotionDisability33+NTMotionDisability34+NTMotionDisability35+NTMotionDisability36+NTMotionDisability37+NTMotionDisability38+NTMotionDisability39+NTMotionDisability40+NTMotionDisability41+NTMotionDisability42+NTMotionDisability43+NTMotionDisability44+NTMotionDisability45+NTMotionDisability46+NTMotionDisability47+NTMotionDisability48+NTMotionDisability49+NTMotionDisability50+NTMotionDisability51+NTMotionDisability52
      print('The number of has Not Tested for Motion Disability:', Semantics_NotTestedMotionDisability)


      global Semantics_PassLearningDisability
      global Semantics_FailLearningDisability
      global Semantics_NotDetectedLearningDisability
      global Semantics_NotTestedLearningDisability

      Semantics_PassLearningDisability=PLearningDisability29+PLearningDisability30+PLearningDisability31+PLearningDisability32+PLearningDisability33+PLearningDisability34+PLearningDisability35+PLearningDisability36+PLearningDisability37+PLearningDisability38+PLearningDisability39+PLearningDisability40+PLearningDisability41+PLearningDisability42+PLearningDisability43+PLearningDisability44+PLearningDisability45+PLearningDisability46+PLearningDisability47+PLearningDisability48+PLearningDisability49+PLearningDisability50+PLearningDisability51+PLearningDisability52
      print('The number of Guideline has Passed for Learning Disability:', Semantics_PassLearningDisability)
      Semantics_FailLearningDisability=FLearningDisability29+FLearningDisability30+FLearningDisability31+FLearningDisability32+FLearningDisability33+FLearningDisability34+FLearningDisability35+FLearningDisability36+FLearningDisability37+FLearningDisability38+FLearningDisability39+FLearningDisability40+FLearningDisability41+FLearningDisability42+FLearningDisability43+FLearningDisability44+FLearningDisability45+FLearningDisability46+FLearningDisability47+FLearningDisability48+FLearningDisability49+FLearningDisability50+FLearningDisability51+FLearningDisability52
      print('The number of Guideline has Failed for Learning Disability:', Semantics_FailLearningDisability)
      Semantics_NotDetectedLearningDisability= NDLearningDisability29+NDLearningDisability30+NDLearningDisability31+NDLearningDisability32+NDLearningDisability33+NDLearningDisability34+NDLearningDisability35+NDLearningDisability36+NDLearningDisability37+NDLearningDisability38+NDLearningDisability39+NDLearningDisability40+NDLearningDisability41+NDLearningDisability42+NDLearningDisability43+NDLearningDisability44+NDLearningDisability45+NDLearningDisability46+NDLearningDisability47+NDLearningDisability48+NDLearningDisability49+NDLearningDisability50+NDLearningDisability51+NDLearningDisability51
      print('The number of Guideline has Not Detected for Learning Disability:', Semantics_NotDetectedLearningDisability)
      Semantics_NotTestedLearningDisability= NTLearningDisability29+NTLearningDisability30+NTLearningDisability31+NTLearningDisability32+NTLearningDisability33+NTLearningDisability34+NTLearningDisability35+NTLearningDisability36+NTLearningDisability37+NTLearningDisability38+NTLearningDisability39+NTLearningDisability40+NTLearningDisability41+NTLearningDisability42+NTLearningDisability43+NTLearningDisability44+NTLearningDisability45+NTLearningDisability46+NTLearningDisability47+NTLearningDisability48+NTLearningDisability49+NTLearningDisability50+NTLearningDisability51+NTLearningDisability52
      print('The number of has Not Tested for Learning Disability:', Semantics_NotTestedLearningDisability)
      
      global Semantics_HTML_Tag_Checked

      Semantics_HTML_Tag_Checked=img_totalCount+audioControlsAlt_totalCount+audioDescription_totalCount+audioLiveCaption_totalCount+audioPrerecordedDescription_totalCount+titleText_totalCount+bodyText_totalCount+buttonAriaLabel_totalCount+title_totalCount+titleHref_totalCount+heading_totalCount+Label_totalCount+titleLink_totalCount+header_totalCount+language_totalCount+titleLang_totalCount+bodyLang_totalCount+ checkbox_totalCount+ combobox_totalCount
      print('Semantics HTML Tag Checked:', Semantics_HTML_Tag_Checked)

      global Total_word_count
      global Total_Duplicate_word_count
      global Total_Unusual_word_count
      global Total_Abreviation_count
      global Total_Mispronounced_word_count

      Total_word_count=titleWord_totalCount+bodyWord_totalCount
      print('Total word count:',Total_word_count)

      Total_Duplicate_word_count=titleDuplicateWord_Failed+bodyDuplicateWord_Failed
      print('Total Duplicate Words count:', Total_Duplicate_word_count)

      Total_Unusual_word_count=titleUnusualWords_Failed+bodyUnusualWords_Failed
      print('Total Unusual Words count:',Total_Unusual_word_count)

      Total_Abreviation_count=titleAbreviation_Failed+bodyAbreviation_Failed
      print('Total Abreviation count:',Total_Abreviation_count)

      Total_Mispronounced_word_count=titleMispronouncedWords_Failed+bodyMispronouncedWord_Failed
      print('Total Mispronunced Words count:', Total_Mispronounced_word_count)


      global Semantics_VLevelA
      global Semantics_ADLevelA
      global Semantics_ETLevelA

      Semantics_VLevelA= VLevelA15+VLevelA16+VLevelA17+VLevelA18+VLevelA19+VLevelA20+VLevelA21+VLevelA22+VLevelA23+VLevelA24
      print('The number of Guidelines under Level A have Verified:', Semantics_VLevelA)
      Semantics_ADLevelA= ADLevelA15+ADLevelA16+ADLevelA17+ADLevelA18+ADLevelA19+ADLevelA20+ADLevelA21+ADLevelA22+ADLevelA23+ADLevelA24
      print('The number of Guidelines under Level A need Additional Checking:', Semantics_ADLevelA)
      Semantics_ETLevelA= ETLevelA15+ETLevelA16+ETLevelA17+ETLevelA18+ETLevelA19+ETLevelA20+ETLevelA21+ETLevelA22+ETLevelA23+ETLevelA24
      print('The number of Guidelines under Level A need Expert Testing:', Semantics_ETLevelA)
      

      global Semantics_VLevelAA
      global Semantics_ADLevelAA
      global Semantics_ETLevelAA

      Semantics_VLevelAA= VLevelAA8+VLevelAA9+VLevelAA10+VLevelAA11+VLevelAA12+VLevelAA13
      print('The number of Guidelines under Level AA have Verified:', Semantics_VLevelAA)
      Semantics_ADLevelAA= VLevelAA8+VLevelAA9+VLevelAA10+VLevelAA11+VLevelAA12+VLevelAA13
      print('The number of Guidelines under Level AA need Additional Checking:', Semantics_ADLevelAA)
      Semantics_ETLevelAA= ETLevelAA8+ETLevelAA9+ETLevelAA10+ETLevelAA11+ETLevelAA12+ETLevelAA13
      print('The number of Guidelines under Level AA need Expert Testing:', Semantics_ETLevelAA)

      global Semantics_VLevelAAA
      global Semantics_ADLevelAAA
      global Semantics_ETLevelAAA

      Semantics_VLevelAAA= VLevelAAA8+VLevelAAA9+VLevelAAA10+VLevelAAA11+VLevelAAA12+VLevelAAA13+VLevelAAA14+VLevelAAA15
      print('The number of Guidelines under Level AAA have Verified:', Semantics_VLevelAAA)
      Semantics_ADLevelAAA= ADLevelAAA8+ADLevelAAA9+ADLevelAAA10+ADLevelAAA11+ADLevelAAA12+ADLevelAAA13+ ADLevelAAA14+ADLevelAAA15
      print('The number of Guidelines under Level AAA need Additional Checking:', Semantics_ADLevelAAA)
      Semantics_ETLevelAAA= ETLevelAAA8+ETLevelAAA9+ETLevelAAA10+ETLevelAAA11+ETLevelAAA12+ETLevelAAA13+ETLevelAAA14+ETLevelAAA15
      print('The number of Guidelines under Level AAA need Expert Testing:', Semantics_ETLevelAAA)




    def user_Requirements_page():

      ####------------------------###
      
      # TitleFrame1=Frame(main_fm, bg='white smoke',width=800, height=30) #4A7A8c
      # TitleFrame1.place(x=490, y=5, width=800, height=30)
      # TitleLable1=Label(TitleFrame1, text='Additional Requirements or User Requirements', fg='black', bg='white smoke', font=("Arial", 17, 'bold'))
      # TitleLable1.grid(row=0, column=0)

      TitleFrame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=35) #highlightbackground="blue", highlightthickness=1
      TitleFrame1.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame1.place(relx=0.0, rely=0.0)

      TitleFrame=tk.Frame (TitleFrame1, bg="white smoke", width=2000, height=35)
      TitleFrame.pack(side=tk.LEFT,fill="both", expand=True)
      TitleFrame.place(relx=0.34, rely=0.0)
      label = tk.Label(TitleFrame, text="Additional Requirements or User Requirements",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()


      Frame0=tk.Frame(main_fm, bg='tomato',width=500, height=25)
      Frame0.place(x=10, y=50, width=500, height=25)
      Lable0=Label(Frame0, text='ADDITIONAL CRITERIA', fg='black',bg='tomato',font=("Arial", 12, 'bold'))
      Lable0.grid(row=0, column=0)
      Framee0=Frame(main_fm, bg='tomato', width=130, height=25)
      Framee0.place(x=525, y=50, width=130, height=25)
      Lablee0=Label(Framee0, text='TOTAL COUNT', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lablee0.grid(row=0, column=0)
      Frameee0=Frame(main_fm, bg='tomato', width=480, height=25)
      Frameee0.place(x=675, y=50, width=480, height=25)
      Lableee0=Label(Frameee0, text='FEEDBACK', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableee0.grid(row=0, column=0)
      Frameeee0=Frame(main_fm, bg='tomato', width=130, height=25)
      Frameeee0.place(x=1175, y=50, width=130, height=25)
      Lableeee0=Label(Frameeee0, text='RESULT', fg='black', bg='tomato', font=("Arial", 12, 'bold'))
      Lableeee0.grid(row=0, column=0)
      Frameeeee0=Frame(main_fm, bg='tomato', width=80, height=25)
      Frameeeee0.place(x=1325, y=50, width=80, height=25)
      Lableeeee0=Label(Frameeeee0, text='COUNT', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeee0.grid(row=0, column=0)
      Frameeeeeee0=Frame(main_fm,  bg='tomato', width=210, height=25)
      Frameeeeeee0.place(x=1425, y=50, width=210, height=25)
      Lableeeeeee0=Label(Frameeeeeee0, text='IMPAIRMENTS TYPE', fg='black',bg='tomato', font=("Arial", 12, 'bold'))
      Lableeeeeee0.grid(row=0, column=0)
      Frameeeeeeee0=Frame(main_fm, bg='tomato', width=230, height=25)
      Frameeeeeeee0.place(x=1655, y=50, width=230, height=25)
      Lableeeeeeee0=Label(Frameeeeeeee0, text='IMPROVEMENT DIRECTION', fg='black', bg='tomato', font=("Arial", 12, 'bold')) 
      Lableeeeeeee0.grid(row=0, column=0)


      #####===========================User/Additional Requiremenrs====================================####
      
      global loading_time_totalCount
      global loading_time

      loading_time_Object=1  

      start_time = time.time()
      response = requests.get(websiteLink)
      end_time = time.time()
      loading_time = end_time - start_time
      print(f"The loading time for the website {websiteLink} is {loading_time} seconds.")

      loading_time_totalCount=1


      if (loading_time<=0.3):
        print('Pass: Re. Minimize the website loading time')
        Pcounter1=1; Fcounter1=0; NTcounter1=0; NDcounter1=0

        PVisionImpairment1=0; FVisionImpairment1=0; NTVisionImpairment1=0; NDVisionImpairment1=0   
        PHearingDifficulty1=0; FHearingDifficulty1=0; NTHearingDifficulty1=0; NDHearingDifficulty1=0 
        PCognitiveDisability1=1; FCognitiveDisability1=0; NTCognitiveDisability1=0; NDCognitiveDisability1=0  
        PMotionDisability1=0; FMotionDisability1=0; NTMotionDisability1=0; NDMotionDisability1=0
        PLearningDisability1=0; FLearningDisability1=0; NTLearningDisability1=0; NDLearningDisability1=0
        
        Frame1=Frame(main_fm, bg='white', width=500, height=20)
        Frame1.place(x=10, y=80, width=310, height=20)
        Lable1=Label(Frame1, text='(Req1.) Minimize the Webpage Loading Time', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable1.grid(row=0, column=0)
        Framee1=Frame(main_fm, bg='white', width=130, height=25)
        Framee1.place(x=525, y=80, width=130, height=25)
        Lablee1=Label(Framee1, text=loading_time_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee1.grid(row=0, column=0)
        Frameee1=Frame(main_fm, bg='white', width=480, height=20)
        Frameee1.place(x=675, y=80, width=480, height=20)
        Lableee1=Label(Frameee1, text='Webpage Loading Time is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee1.grid(row=0, column=0)
        Frameeee1=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee1.place(x=1175, y=80, width=130, height=20)
        Lableeee1=Label(Frameeee1, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee1.grid(row=0, column=0)
        Frameeeee1=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee1.place(x=1325, y=80, width=80, height=25)
        Lableeeee1=Label(Frameeeee1, text='<=0.3', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee1.grid(row=0, column=0)
        Frameeeeeee1=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeeee1.place(x=1425, y=80, width=210, height=20)
        Lableeeeeee1=Label(Frameeeeeee1, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee1.grid(row=0, column=0)
        Frameeeeeeee1=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeeee1.place(x=1655, y=80, width=230, height=20)
        Lableeeeeeee1=Label(Frameeeeeeee1, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee1.grid(row=0, column=0)
      elif (loading_time>0.3):
        print('Fail: Re. Minimize the website loading time')
        Fcounter1=1; Pcounter1=0; NTcounter1=0; NDcounter1=0
        FLevelA1= 1; PLevelA1=0; NTLevelA1=0; NDLevelA1=0

        FVisionImpairment1=0; PVisionImpairment1=0; NTVisionImpairment1=0; NDVisionImpairment1=0   
        FHearingDifficulty1=0; PHearingDifficulty1=0; NTHearingDifficulty1=0; NDHearingDifficulty1=0  
        FCognitiveDisability1=1; PCognitiveDisability1=0; NTCognitiveDisability1=0; NDCognitiveDisability1=0
        FMotionDisability1=0; PMotionDisability1=0; NTMotionDisability1=0; NDMotionDisability1=0
        FLearningDisability1=0; PLearningDisability1=0; NTLearningDisability1=0; NDLearningDisability1=0
        
        Frame1=Frame(main_fm, bg='white', width=500, height=20)
        Frame1.place(x=10, y=80, width=500, height=20)
        Lable1= Label(Frame1, text='(Req1.) Minimize the Website Loading Time', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable1.grid(row=0, column=0)
        Framee1=Frame(main_fm, bg='white', width=130, height=25)
        Framee1.place(x=525, y=80, width=130, height=25)
        Lablee1=Label(Framee1, text=loading_time_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee1.grid(row=0, column=0)
        Frameee1=Frame(main_fm, bg='white', width=480, height=20)
        Frameee1.place(x=675, y=80, width=480, height=20)
        Lableee1= Label(Frameee1, text='Webpage Loading Time is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee1.grid(row=0, column=0)
        Frameeee1=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee1.place(x=1175, y=80, width=130, height=20)
        Lableeee1=Label(Frameeee1, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee1.grid(row=0, column=0)
        Frameeeee1=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee1.place(x=1325, y=80, width=80, height=25)
        Lableeeee1=Label(Frameeeee1, text='>0.3', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee1.grid(row=0, column=0)
        Frameeeeeee1=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeeee1.place(x=1425, y=80, width=210, height=20)
        Lableeeeeee1=Label(Frameeeeeee1, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee1.grid(row=0, column=0)
        Frameeeeeeee1=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeeee1.place(x=1655, y=80, width=230, height=20)
        Lableeeeeeee1=Label(Frameeeeeeee1, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeeee1.grid(row=0, column=0)

      ####-----------------------------------------###

      if (Total_word_count<=1500):
        print('Pass: Re. Content paragraph should not be lengthy ')
        Pcounter2=1; Fcounter2=0; NTcounter2=0; NDcounter2=0

        PVisionImpairment2=0; FVisionImpairment2=0; NTVisionImpairment2=0; NDVisionImpairment2=0   
        PHearingDifficulty2=0; FHearingDifficulty2=0; NTHearingDifficulty2=0; NDHearingDifficulty2=0 
        PCognitiveDisability2=1; FCognitiveDisability2=0; NTCognitiveDisability2=0; NDCognitiveDisability2=0  
        PMotionDisability2=0; FMotionDisability2=0; NTMotionDisability2=0; NDMotionDisability2=0
        PLearningDisability2=0; FLearningDisability2=0; NTLearningDisability2=0; NDLearningDisability2=0
        
        Frame2=Frame(main_fm, bg='white', width=500, height=20)
        Frame2.place(x=10, y=105, width=500, height=20)
        Lable2=Label(Frame2, text='(Req2.) Content Paragraph should not be Lengthy ', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable2.grid(row=0, column=0)
        Framee2=Frame(main_fm, bg='white', width=130, height=25)
        Framee2.place(x=525, y=105, width=130, height=25)
        Lablee2=Label(Framee2, text=Total_word_count, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee2.grid(row=0, column=0)
        Frameee2=Frame(main_fm, bg='white', width=480, height=20)
        Frameee2.place(x=675, y=105, width=480, height=20)
        Lableee2=Label(Frameee2, text='Webpage Length of Paragraph is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee2.grid(row=0, column=0)
        Frameeee2=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee2.place(x=1175, y=105, width=130, height=20)
        Lableeee2=Label(Frameeee2, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee2.grid(row=0, column=0)
        Frameeeee2=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee2.place(x=1325, y=105, width=80, height=25)
        Lableeeee2=Label(Frameeeee2, text='<1500', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee2.grid(row=0, column=0)
        Frameeeeee2=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee2.place(x=1425, y=105, width=210, height=20)
        Lableeeeee2=Label(Frameeeeee2, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee2.grid(row=0, column=0)
        Frameeeeeee2=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee2.place(x=1655, y=105, width=230, height=20)
        Lableeeeeee2=Label(Frameeeeeee2, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee2.grid(row=0, column=0)
      elif (Total_word_count>1500):
        print('Fail: Re. Content paragraph should not be lengthy ')
        Fcounter2=1; Pcounter2=0; NTcounter2=0; NDcounter2=0
        
        FVisionImpairment2=0; PVisionImpairment2=0; NTVisionImpairment2=0; NDVisionImpairment2=0   
        FHearingDifficulty2=0; PHearingDifficulty2=0; NTHearingDifficulty2=0; NDHearingDifficulty2=0  
        FCognitiveDisability2=1; PCognitiveDisability2=0; NTCognitiveDisability2=0; NDCognitiveDisability2=0
        FMotionDisability2=0; PMotionDisability2=0; NTMotionDisability2=0; NDMotionDisability2=0
        FLearningDisability2=0; PLearningDisability2=0; NTLearningDisability2=0; NDLearningDisability2=0
        
        Frame2=Frame(main_fm, bg='white', width=500, height=20)
        Frame2.place(x=10, y=105, width=500, height=20)
        Lable2= Label(Frame2, text='(Req2.) Content Paragraph should not be Lengthy ', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable2.grid(row=0, column=0)
        Framee2=Frame(main_fm, bg='white', width=130, height=25)
        Framee2.place(x=525, y=105, width=130, height=25)
        Lablee2=Label(Framee2, text=Total_word_count, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee2.grid(row=0, column=0)
        Frameee2=Frame(main_fm, bg='white', width=480, height=20)
        Frameee2.place(x=675, y=105, width=480, height=20)
        Lableee2= Label(Frameee2, text='Webpage Length of Paragraph is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee2.grid(row=0, column=0)
        Frameeee2=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee2.place(x=1175, y=105, width=130, height=20)
        Lableeee2=Label(Frameeee2, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee2.grid(row=0, column=0)
        Frameeeee2=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee2.place(x=1325, y=105, width=80, height=25)
        Lableeeee2=Label(Frameeeee2, text= '>1500', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee2.grid(row=0, column=0)
        Frameeeeee2=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee2.place(x=1425, y=105, width=210, height=20)
        Lableeeeee2=Label(Frameeeeee2, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee2.grid(row=0, column=0)
        Frameeeeeee2=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee2.place(x=1655, y=105, width=230, height=20)
        Lableeeeeee2=Label(Frameeeeeee2, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee2.grid(row=0, column=0)


       ####-----------------------------------------###

      if (link_totalCount<=50):
        print('Pass: Re. Website should not have too many links')
        Pcounter3=1; Fcounter3=0; NTcounter3=0; NDcounter3=0

        PVisionImpairment3=1; FVisionImpairment3=0; NTVisionImpairment3=0; NDVisionImpairment3=0   
        PHearingDifficulty3=0; FHearingDifficulty3=0; NTHearingDifficulty3=0; NDHearingDifficulty3=0 
        PCognitiveDisability3=1; FCognitiveDisability3=0; NTCognitiveDisability3=0; NDCognitiveDisability3=0  
        PMotionDisability3=0; FMotionDisability3=0; NTMotionDisability3=0; NDMotionDisability3=0
        PLearningDisability3=0; FLearningDisability3=0; NTLearningDisability3=0; NDLearningDisability3=0
        
        Frame3=Frame(main_fm, bg='white', width=500, height=20)
        Frame3.place(x=10, y=130, width=500, height=20)
        Lable3=Label(Frame3, text='(Req3.) Website should not have Many Links', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable3.grid(row=0, column=0)
        Framee3=Frame(main_fm, bg='white', width=130, height=25)
        Framee3.place(x=525, y=130, width=130, height=25)
        Lablee3=Label(Framee3, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee3.grid(row=0, column=0)
        Frameee3=Frame(main_fm, bg='white', width=480, height=20)
        Frameee3.place(x=675, y=130, width=480, height=20)
        Lableee3=Label(Frameee3, text='Number of Links in the Webpage is Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee3.grid(row=0, column=0)
        Frameeee3=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee3.place(x=1175, y=130, width=130, height=20)
        Lableeee3=Label(Frameeee3, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee3.grid(row=0, column=0)
        Frameeeee3=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee3.place(x=1325, y=130, width=80, height=25)
        Lableeeee3=Label(Frameeeee3, text='<50', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee3.grid(row=0, column=0)
        Frameeeeee3=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee3.place(x=1425, y=130, width=210, height=20)
        Lableeeeee3=Label(Frameeeeee3, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee3.grid(row=0, column=0)
        Frameeeeeee3=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee3.place(x=1655, y=130, width=230, height=20)
        Lableeeeeee3=Label(Frameeeeeee3, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee3.grid(row=0, column=0)
      elif (link_totalCount>50):
        print('Fail: Re. Website should not have too many links')
        Fcounter3=1; Pcounter3=0; NTcounter3=0; NDcounter3=0
        
        FVisionImpairment3=1; PVisionImpairment3=0; NTVisionImpairment3=0; NDVisionImpairment3=0   
        FHearingDifficulty3=0; PHearingDifficulty3=0; NTHearingDifficulty3=0; NDHearingDifficulty3=0  
        FCognitiveDisability3=1; PCognitiveDisability3=0; NTCognitiveDisability3=0; NDCognitiveDisability3=0
        FMotionDisability3=0; PMotionDisability3=0; NTMotionDisability3=0; NDMotionDisability3=0
        FLearningDisability3=0; PLearningDisability3=0; NTLearningDisability3=0; NDLearningDisability3=0
        
        Frame3=Frame(main_fm, bg='white', width=500, height=20)
        Frame3.place(x=10, y=130, width=500, height=20)
        Lable3= Label(Frame3, text='(Req3.) Webpage should not have Many Links', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable3.grid(row=0, column=0)
        Framee3=Frame(main_fm, bg='white', width=130, height=25)
        Framee3.place(x=525, y=130, width=130, height=25)
        Lablee3=Label(Framee3, text=link_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee3.grid(row=0, column=0)
        Frameee3=Frame(main_fm, bg='white', width=480, height=20)
        Frameee3.place(x=675, y=130, width=480, height=20)
        Lableee3= Label(Frameee3, text='Large Number of Links in the Website is not Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee3.grid(row=0, column=0)
        Frameeee3=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee3.place(x=1175, y=130, width=130, height=20)
        Lableeee3=Label(Frameeee3, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee3.grid(row=0, column=0)
        Frameeeee3=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee3.place(x=1325, y=130, width=80, height=25)
        Lableeeee3=Label(Frameeeee3, text= '>50', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee3.grid(row=0, column=0)
        Frameeeeee3=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee3.place(x=1425, y=130, width=210, height=20)
        Lableeeeee3=Label(Frameeeeee3, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee3.grid(row=0, column=0)
        Frameeeeeee3=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee3.place(x=1655, y=130, width=230, height=20)
        Lableeeeeee3=Label(Frameeeeeee3, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee3.grid(row=0, column=0)


      #####----------------------------------------#####
      #titleLanguage=detect(Titletext)
      #bodyLanguage=detect(Final_Body_text)
      #pageLanguage = soup.find_all('html')

      print(language)
      
      if('en' in [language]):
          print('Pass: Re. Webpage should have at least English version')
          Pcounter4=1; Fcounter4=0; NTcounter4=0; NDcounter4=0

          PVisionImpairment4=1; FVisionImpairment4=0; NTVisionImpairment4=0; NDVisionImpairment4=0   
          PHearingDifficulty4=0; FHearingDifficulty4=0; NTHearingDifficulty4=0; NDHearingDifficulty4=0 
          PCognitiveDisability4=1; FCognitiveDisability4=0; NTCognitiveDisability4=0; NDCognitiveDisability4=0  
          PMotionDisability4=0; FMotionDisability4=0; NTMotionDisability4=0; NDMotionDisability4=0
          PLearningDisability4=1; FLearningDisability4=0; NTLearningDisability4=0; NDLearningDisability4=0
        
          Frame4=Frame(main_fm, bg='white', width=500, height=20)
          Frame4.place(x=10, y=155, width=500, height=20)
          Lable4=Label(Frame4, text='(Req4.) Webpage should have English Version', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=130, height=25)
          Framee4.place(x=525, y=155, width=130, height=25)
          Lablee4=Label(Framee4, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=675, y=155, width=480, height=20)
          Lableee4=Label(Frameee4, text='Webpage Languge is English', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1175, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1325, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=language_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeee4.place(x=1425, y=155, width=210, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeee4.place(x=1655, y=155, width=230, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)
      elif('en-US' in [language]):
          print('Pass: Re. Webpage should have at least English version')
          Pcounter4=1; Fcounter4=0; NTcounter4=0; NDcounter4=0

          PVisionImpairment4=1; FVisionImpairment4=0; NTVisionImpairment4=0; NDVisionImpairment4=0   
          PHearingDifficulty4=0; FHearingDifficulty4=0; NTHearingDifficulty4=0; NDHearingDifficulty4=0 
          PCognitiveDisability4=1; FCognitiveDisability4=0; NTCognitiveDisability4=0; NDCognitiveDisability4=0  
          PMotionDisability4=0; FMotionDisability4=0; NTMotionDisability4=0; NDMotionDisability4=0
          PLearningDisability4=1; FLearningDisability4=0; NTLearningDisability4=0; NDLearningDisability4=0
        
          Frame4=Frame(main_fm, bg='white', width=500, height=20)
          Frame4.place(x=10, y=155, width=500, height=20)
          Lable4=Label(Frame4, text='(Req4.) Webpage should have English Version', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=130, height=25)
          Framee4.place(x=525, y=155, width=130, height=25)
          Lablee4=Label(Framee4, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=675, y=155, width=480, height=20)
          Lableee4=Label(Frameee4, text='Webpage Languge is English', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1175, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1325, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=language_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeee4.place(x=1425, y=155, width=210, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeee4.place(x=1655, y=155, width=230, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)
      elif('en-GB' in [language]):
          print('Pass: Re. Webpage should have at least English version')
          Pcounter4=1; Fcounter4=0; NTcounter4=0; NDcounter4=0

          PVisionImpairment4=1; FVisionImpairment4=0; NTVisionImpairment4=0; NDVisionImpairment4=0   
          PHearingDifficulty4=0; FHearingDifficulty4=0; NTHearingDifficulty4=0; NDHearingDifficulty4=0 
          PCognitiveDisability4=1; FCognitiveDisability4=0; NTCognitiveDisability4=0; NDCognitiveDisability4=0  
          PMotionDisability4=0; FMotionDisability4=0; NTMotionDisability4=0; NDMotionDisability4=0
          PLearningDisability4=1; FLearningDisability4=0; NTLearningDisability4=0; NDLearningDisability4=0
        
          Frame4=Frame(main_fm, bg='white', width=500, height=20)
          Frame4.place(x=10, y=155, width=500, height=20)
          Lable4=Label(Frame4, text='(Req4.) Webpage should have English Version', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=130, height=25)
          Framee4.place(x=525, y=155, width=130, height=25)
          Lablee4=Label(Framee4, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=675, y=155, width=480, height=20)
          Lableee4=Label(Frameee4, text='Webpage Languge is English', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1175, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1325, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=language_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeee4.place(x=1425, y=155, width=210, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeee4.place(x=1655, y=155, width=230, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)
        #elif(language != "en" or "en-US" or "en-GB"):
      else:
          print('Fail: Re. Website should have English version')
          Fcounter4=1; Pcounter4=0; NTcounter4=0; NDcounter4=0
          
          FVisionImpairment4=1; PVisionImpairment4=0; NTVisionImpairment4=0; NDVisionImpairment4=0   
          FHearingDifficulty4=0; PHearingDifficulty4=0; NTHearingDifficulty4=0; NDHearingDifficulty4=0  
          FCognitiveDisability4=1; PCognitiveDisability4=0; NTCognitiveDisability4=0; NDCognitiveDisability4=0
          FMotionDisability4=0; PMotionDisability4=0; NTMotionDisability4=0; NDMotionDisability4=0
          FLearningDisability4=1; PLearningDisability4=0; NTLearningDisability4=0; NDLearningDisability4=0
        
          Frame4=Frame(main_fm, bg='white', width=500, height=20)
          Frame4.place(x=10, y=155, width=500, height=20)
          Lable4= Label(Frame4, text='(Req4.) Webpage should have English Version', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lable4.grid(row=0, column=0)
          Framee4=Frame(main_fm, bg='white', width=130, height=25)
          Framee4.place(x=525, y=155, width=130, height=25)
          Lablee4=Label(Framee4, text=language_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
          Lablee4.grid(row=0, column=0)
          Frameee4=Frame(main_fm, bg='white', width=480, height=20)
          Frameee4.place(x=675, y=155, width=480, height=20)
          Lableee4= Label(Frameee4, text='Webpage Language is not English', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableee4.grid(row=0, column=0)
          Frameeee4=Frame(main_fm, bg='white', width=130, height=20)
          Frameeee4.place(x=1175, y=155, width=130, height=20)
          Lableeee4=Label(Frameeee4, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
          Lableeee4.grid(row=0, column=0)
          Frameeeee4=Frame(main_fm, bg='white', width=80, height=25)
          Frameeeee4.place(x=1325, y=155, width=80, height=25)
          Lableeeee4=Label(Frameeeee4, text=language_totalCount, fg='red',bg='white', font=("Arial", 11, 'bold'))
          Lableeeee4.grid(row=0, column=0)
          Frameeeeee4=Frame(main_fm, bg='white', width=210, height=20)
          Frameeeeee4.place(x=1425, y=155, width=210, height=20)
          Lableeeeee4=Label(Frameeeeee4, text='Vision/Cognitive/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeee4.grid(row=0, column=0)
          Frameeeeeee4=Frame(main_fm, bg='white', width=230, height=20)
          Frameeeeeee4.place(x=1655, y=155, width=230, height=20)
          Lableeeeeee4=Label(Frameeeeeee4, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
          Lableeeeeee4.grid(row=0, column=0)


      #####----------------------------------------#####

      global page_length_totalCount

      page_length_Object=1

      page_length_totalCount=1
      
      if(page_length_KB <=14):
        print('Pass: Re. Webpage should not be very lengthy')
        Pcounter5=1; Fcounter5=0; NTcounter5=0; NDcounter5=0

        PVisionImpairment5=0; FVisionImpairment5=0; NTVisionImpairment5=0; NDVisionImpairment5=0   
        PHearingDifficulty5=0; FHearingDifficulty5=0; NTHearingDifficulty5=0; NDHearingDifficulty5=0 
        PCognitiveDisability5=1; FCognitiveDisability5=0; NTCognitiveDisability5=0; NDCognitiveDisability5=0  
        PMotionDisability5=1; FMotionDisability5=0; NTMotionDisability5=0; NDMotionDisability5=0
        PLearningDisability5=1; FLearningDisability5=0; NTLearningDisability5=0; NDLearningDisability5=0
        
        Frame5=Frame(main_fm, bg='white', width=500, height=20)
        Frame5.place(x=10, y=180, width=500, height=20)
        Lable5=Label(Frame5, text='(Req5.) Webpage should not be Very Lengthy', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable5.grid(row=0, column=0)
        Framee5=Frame(main_fm, bg='white', width=130, height=25)
        Framee5.place(x=525, y=180, width=130, height=25)
        Lablee5=Label(Framee5, text=page_length_KB, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee5.grid(row=0, column=0)
        Frameee5=Frame(main_fm, bg='white', width=480, height=20)
        Frameee5.place(x=675, y=180, width=480, height=20)
        Lableee5=Label(Frameee5, text='Webpage Length is Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee5.grid(row=0, column=0)
        Frameeee5=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee5.place(x=1175, y=180, width=130, height=20)
        Lableeee5=Label(Frameeee5, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee5.grid(row=0, column=0)
        Frameeeee5=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee5.place(x=1325, y=180, width=80, height=25)
        Lableeeee5=Label(Frameeeee5, text='<14KB', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee5.grid(row=0, column=0)
        Frameeeeee5=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee5.place(x=1425, y=180, width=210, height=20)
        Lableeeeee5=Label(Frameeeeee5, text='Cognitive/Motion/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee5.grid(row=0, column=0)
        Frameeeeeee5=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee5.place(x=1655, y=180, width=230, height=20)
        Lableeeeeee5=Label(Frameeeeeee5, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee5.grid(row=0, column=0)
      elif (page_length_KB>14):
        print('Fail: Re. Webpage should not be very lengthy')
        Fcounter5=1; Pcounter5=0; NTcounter5=0; NDcounter5=0
        
        FVisionImpairment5=0; PVisionImpairment5=0; NTVisionImpairment5=0; NDVisionImpairment5=0   
        FHearingDifficulty5=0; PHearingDifficulty5=0; NTHearingDifficulty5=0; NDHearingDifficulty5=0  
        FCognitiveDisability5=1; PCognitiveDisability5=0; NTCognitiveDisability5=0; NDCognitiveDisability5=0
        FMotionDisability5=1; PMotionDisability5=0; NTMotionDisability5=0; NDMotionDisability5=0
        FLearningDisability5=1; PLearningDisability5=0; NTLearningDisability5=0; NDLearningDisability5=0
        
        Frame5=Frame(main_fm, bg='white', width=500, height=20)
        Frame5.place(x=10, y=180, width=500, height=20)
        Lable5= Label(Frame5, text='(Req5.) Webpage should not be Very Lengthy', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable5.grid(row=0, column=0)
        Framee5=Frame(main_fm, bg='white', width=130, height=25)
        Framee5.place(x=525, y=180, width=130, height=25)
        Lablee5=Label(Framee5, text=page_length_KB, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee5.grid(row=0, column=0)
        Frameee5=Frame(main_fm, bg='white', width=480, height=20)
        Frameee5.place(x=675, y=180, width=480, height=20)
        Lableee5= Label(Frameee5, text='Webpage Length is not Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee5.grid(row=0, column=0)
        Frameeee5=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee5.place(x=1175, y=180, width=130, height=20)
        Lableeee5=Label(Frameeee5, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee5.grid(row=0, column=0)
        Frameeeee5=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee5.place(x=1325, y=180, width=80, height=25)
        Lableeeee5=Label(Frameeeee5, text= '>14KB', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee5.grid(row=0, column=0)
        Frameeeeee5=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee5.place(x=1425, y=180, width=210, height=20)
        Lableeeeee5=Label(Frameeeeee5, text='Cognitive/Motion/Learning', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee5.grid(row=0, column=0)
        Frameeeeeee5=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee5.place(x=1655, y=180, width=230, height=20)
        Lableeeeeee5=Label(Frameeeeeee5, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee5.grid(row=0, column=0)



      #####----------------------------------------#####
      
      headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
      response = requests.get(websiteLink, headers=headers)
      if (response.status_code == 200):
        print('{} is active'.format(websiteLink))
        print('Pass: Re. Website server should not be down')
        Pcounter6=1; Fcounter6=0; NTcounter6=0; NDcounter6=0

        PVisionImpairment6=0; FVisionImpairment6=0; NTVisionImpairment6=0; NDVisionImpairment6=0   
        PHearingDifficulty6=0; FHearingDifficulty6=0; NTHearingDifficulty6=0; NDHearingDifficulty6=0 
        PCognitiveDisability6=1; FCognitiveDisability6=0; NTCognitiveDisability6=0; NDCognitiveDisability6=0  
        PMotionDisability6=0; FMotionDisability6=0; NTMotionDisability6=0; NDMotionDisability6=0
        PLearningDisability6=0; FLearningDisability6=0; NTLearningDisability6=0; NDLearningDisability6=0
        
        Frame6=Frame(main_fm, bg='white', width=500, height=20)
        Frame6.place(x=10, y=205, width=500, height=20)
        Lable6=Label(Frame6, text='(Req6.) Webpage Server should not be Down', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable6.grid(row=0, column=0)
        Framee6=Frame(main_fm, bg='white', width=130, height=25)
        Framee6.place(x=525, y=205, width=130, height=25)
        Lablee6=Label(Framee6, text=1, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee6.grid(row=0, column=0)
        Frameee6=Frame(main_fm, bg='white', width=480, height=20)
        Frameee6.place(x=675, y=205, width=480, height=20)
        Lableee6=Label(Frameee6, text='Webpage Server is Active', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee6.grid(row=0, column=0)
        Frameeee6=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee6.place(x=1175, y=205, width=130, height=20)
        Lableeee6=Label(Frameeee6, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee6.grid(row=0, column=0)
        Frameeeee6=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee6.place(x=1325, y=205, width=80, height=25)
        Lableeeee6=Label(Frameeeee6, text=1, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee6.grid(row=0, column=0)
        Frameeeeee6=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee6.place(x=1425, y=205, width=210, height=20)
        Lableeeeee6=Label(Frameeeeee6, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee6.grid(row=0, column=0)
        Frameeeeeee6=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee6.place(x=1655, y=205, width=230, height=20)
        Lableeeeeee6=Label(Frameeeeeee6, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee6.grid(row=0, column=0)
      elif (response.status_code != 200):
        print('Fail: Re. Website server should not be down')
        Fcounter6=1; Pcounter6=0; NTcounter6=0; NDcounter6=0
        
        FVisionImpairment6=0; PVisionImpairment6=0; NTVisionImpairment6=0; NDVisionImpairment6=0   
        FHearingDifficulty6=0; PHearingDifficulty6=0; NTHearingDifficulty6=0; NDHearingDifficulty6=0  
        FCognitiveDisability6=1; PCognitiveDisability6=0; NTCognitiveDisability6=0; NDCognitiveDisability6=0
        FMotionDisability6=0; PMotionDisability6=0; NTMotionDisability6=0; NDMotionDisability6=0
        FLearningDisability6=0; PLearningDisability6=0; NTLearningDisability6=0; NDLearningDisability6=0
        
        Frame6=Frame(main_fm, bg='white', width=500, height=20)
        Frame6.place(x=10, y=205, width=500, height=20)
        Lable6= Label(Frame6, text='(Req6.) Webpage Server should not be Down', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable6.grid(row=0, column=0)
        Framee6=Frame(main_fm, bg='white', width=130, height=25)
        Framee6.place(x=525, y=205, width=130, height=25)
        Lablee6=Label(Framee6, text=1, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee6.grid(row=0, column=0)
        Frameee6=Frame(main_fm, bg='white', width=480, height=20)
        Frameee6.place(x=675, y=205, width=480, height=20)
        Lableee6= Label(Frameee6, text='Webpage Sever is Down/not Active', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee6.grid(row=0, column=0)
        Frameeee6=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee6.place(x=1175, y=205, width=130, height=20)
        Lableeee6=Label(Frameeee6, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee6.grid(row=0, column=0)
        Frameeeee6=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee6.place(x=1325, y=205, width=80, height=25)
        Lableeeee6=Label(Frameeeee6, text= 1, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee6.grid(row=0, column=0)
        Frameeeeee6=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee6.place(x=1425, y=205, width=210, height=20)
        Lableeeeee6=Label(Frameeeeee6, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee6.grid(row=0, column=0)
        Frameeeeeee6=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee6.place(x=1655, y=205, width=230, height=20)
        Lableeeeeee6=Label(Frameeeeeee6, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee6.grid(row=0, column=0)


      ####------------------------------------------------###

      Labels = soup.find_all(re.compile('label'))
      print(Labels)
      if(Labels==[]):
        print('Not Detected: Re. Website should not demand user information')
        NDcounter7=1; Pcounter7=0; Fcounter7=0; NTcounter7=0 

        NDVisionImpairment7=0; PVisionImpairment7=0; FVisionImpairment7=0; NTVisionImpairment7=0   
        NDHearingDifficulty7=0; PHearingDifficulty7=0; FHearingDifficulty7=0; NTHearingDifficulty7=0  
        NDCognitiveDisability7=1; PCognitiveDisability7=0; FCognitiveDisability7=0; NTCognitiveDisability7=0  
        NDMotionDisability7=0; PMotionDisability7=0; FMotionDisability7=0; NTMotionDisability7=0
        NDLearningDisability7=0; PLearningDisability7=0; FLearningDisability7=0; NTLearningDisability7=0
        
        Frame7=Frame(main_fm, bg='white', width=500, height=20)
        Frame7.place(x=10, y=230, width=500, height=20)
        Lable7=Label(Frame7, text='(Req7.) Webpage should not Demand User Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable7.grid(row=0, column=0)
        Framee7=Frame(main_fm, bg='white', width=130, height=25)
        Framee7.place(x=525, y=230, width=130, height=25)
        Lablee7=Label(Framee7, text=Label_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee7.grid(row=0, column=0)
        Frameee7=Frame(main_fm, bg='white', width=480, height=20)
        Frameee7.place(x=675, y=230, width=480, height=20)
        Lableee7=Label(Frameee7, text='Webpage Required User Information is not Identifiable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee7.grid(row=0, column=0)
        Frameeee7=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee7.place(x=1175, y=230, width=130, height=20)
        Lableeee7=Label(Frameeee7, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee7.grid(row=0, column=0)
        Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee7.place(x=1325, y=230, width=80, height=25)
        Lableeeee7=Label(Frameeeee7, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee7.grid(row=0, column=0)
        Frameeeeee7=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee7.place(x=1425, y=230, width=210, height=20)
        Lableeeeee7=Label(Frameeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee7.grid(row=0, column=0)
        Frameeeeeee7=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee7.place(x=1655, y=230, width=230, height=20)
        Lableeeeeee7=Label(Frameeeeeee7, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee7.grid(row=0, column=0)
      elif(Labels != []):
        for item in Labels:
          if(item.text == 'Username' and 'Password'):
            # print('Username and Password is required')
            print('Fail: Re. Website should not demand user information')
            Fcounter7=1; Pcounter7=0; NTcounter7=0; NDcounter7=0
        
            FVisionImpairment7=0; PVisionImpairment7=0; NTVisionImpairment7=0; NDVisionImpairment7=0   
            FHearingDifficulty7=0; PHearingDifficulty7=0; NTHearingDifficulty7=0; NDHearingDifficulty7=0  
            FCognitiveDisability7=1; PCognitiveDisability7=0; NTCognitiveDisability7=0; NDCognitiveDisability7=0
            FMotionDisability7=0; PMotionDisability7=0; NTMotionDisability7=0; NDMotionDisability7=0
            FLearningDisability7=0; PLearningDisability7=0; NTLearningDisability7=0; NDLearningDisability7=0
        
            Frame7=Frame(main_fm, bg='white', width=500, height=20)
            Frame7.place(x=10, y=230, width=500, height=20)
            Lable7= Label(Frame7, text='(Req7.) Webpage should not Demand User Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lable7.grid(row=0, column=0)
            Framee7=Frame(main_fm, bg='white', width=130, height=25)
            Framee7.place(x=525, y=230, width=130, height=25)
            Lablee7=Label(Framee7, text=Label_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
            Lablee7.grid(row=0, column=0)
            Frameee7=Frame(main_fm, bg='white', width=480, height=20)
            Frameee7.place(x=675, y=230, width=480, height=20)
            Lableee7= Label(Frameee7, text='Webpage Require User Information to Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableee7.grid(row=0, column=0)
            Frameeee7=Frame(main_fm, bg='white', width=130, height=20)
            Frameeee7.place(x=1175, y=230, width=130, height=20)
            Lableeee7=Label(Frameeee7, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
            Lableeee7.grid(row=0, column=0)
            Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
            Frameeeee7.place(x=1325, y=230, width=80, height=25)
            Lableeeee7=Label(Frameeeee7, text= Label_totalCount, fg='red',bg='white', font=("Arial", 11, 'bold'))
            Lableeeee7.grid(row=0, column=0)
            Frameeeeee7=Frame(main_fm, bg='white', width=210, height=20)
            Frameeeeee7.place(x=1425, y=230, width=210, height=20)
            Lableeeeee7=Label(Frameeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableeeeee7.grid(row=0, column=0)
            Frameeeeeee7=Frame(main_fm, bg='white', width=230, height=20)
            Frameeeeeee7.place(x=1655, y=230, width=230, height=20)
            Lableeeeeee7=Label(Frameeeeeee7, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableeeeeee7.grid(row=0, column=0)
          elif(item.text != 'Username' and 'Password'):
            print('Pass: Re. Website should not demand user information')
            Pcounter7=1; Fcounter7=0; NTcounter7=0; NDcounter7=0

            PVisionImpairment7=0; FVisionImpairment7=0; NTVisionImpairment7=0; NDVisionImpairment7=0   
            PHearingDifficulty7=0; FHearingDifficulty7=0; NTHearingDifficulty7=0; NDHearingDifficulty7=0 
            PCognitiveDisability7=1; FCognitiveDisability7=0; NTCognitiveDisability7=0; NDCognitiveDisability7=0  
            PMotionDisability7=0; FMotionDisability7=0; NTMotionDisability7=0; NDMotionDisability7=0
            PLearningDisability7=0; FLearningDisability7=0; NTLearningDisability7=0; NDLearningDisability7=0
        
            Frame7=Frame(main_fm, bg='white', width=500, height=20)
            Frame7.place(x=10, y=230, width=500, height=20)
            Lable7=Label(Frame7, text='(Req7.) Webpage should not Demand User Information', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lable7.grid(row=0, column=0)
            Framee7=Frame(main_fm, bg='white', width=130, height=25)
            Framee7.place(x=525, y=230, width=130, height=25)
            Lablee7=Label(Framee7, text=Label_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
            Lablee7.grid(row=0, column=0)
            Frameee7=Frame(main_fm, bg='white', width=480, height=20)
            Frameee7.place(x=675, y=230, width=480, height=20)
            Lableee7=Label(Frameee7, text='Webpage does not Require User Information to Access', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableee7.grid(row=0, column=0)
            Frameeee7=Frame(main_fm, bg='white', width=130, height=20)
            Frameeee7.place(x=1175, y=230, width=130, height=20)
            Lableeee7=Label(Frameeee7, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
            Lableeee7.grid(row=0, column=0)
            Frameeeee7=Frame(main_fm, bg='white', width=80, height=25)
            Frameeeee7.place(x=1325, y=230, width=80, height=25)
            Lableeeee7=Label(Frameeeee7, text=Label_totalCount, fg='green',bg='white', font=("Arial", 11, 'bold'))
            Lableeeee7.grid(row=0, column=0)
            Frameeeeee7=Frame(main_fm, bg='white', width=210, height=20)
            Frameeeeee7.place(x=1425, y=230, width=210, height=20)
            Lableeeeee7=Label(Frameeeeee7, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableeeeee7.grid(row=0, column=0)
            Frameeeeeee7=Frame(main_fm, bg='white', width=230, height=20)
            Frameeeeeee7.place(x=1655, y=230, width=230, height=20)
            Lableeeeeee7=Label(Frameeeeeee7, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
            Lableeeeeee7.grid(row=0, column=0)





      ###---------------------------------####
      
      global Div_totalCount

      CAPTCHA_Object=1  

      counter=0
      DivCAPTCHA_passed=0
      Div=soup.find_all('div')
      for item in Div:
        if('id' in item):
          if ('id'== 'captchaBlock'):
            counter+=1  
            DivCAPTCHA_passed=counter
      print('Total number of Passed guideline for CAPTCHA:', DivCAPTCHA_passed)

      counter=0
      DivCAPTCHA_failed=0
      Div=soup.find_all('div')
      for item in Div:
        if('id' in item):
          if ('id'!= 'captchaBlock'):
            counter+=1  
            DivCAPTCHA_failed=counter
      print('Total number of Failed guideline for CAPTCHA:', DivCAPTCHA_failed)

      Div_totalCount=DivCAPTCHA_passed +DivCAPTCHA_failed
      print('Total count of CAPTCHA:', Div_totalCount) 
          
    
      if (DivCAPTCHA_failed>1):
        print('Fail: Re. Website should not contain any CAPTCHA')
        Fcounter8=1; Pcounter8=0; NTcounter8=0; NDcounter8=0
        
        FVisionImpairment8=0; PVisionImpairment8=0; NTVisionImpairment8=0; NDVisionImpairment8=0   
        FHearingDifficulty8=0; PHearingDifficulty8=0; NTHearingDifficulty8=0; NDHearingDifficulty8=0  
        FCognitiveDisability8=1; PCognitiveDisability8=0; NTCognitiveDisability8=0; NDCognitiveDisability8=0
        FMotionDisability8=0; PMotionDisability8=0; NTMotionDisability8=0; NDMotionDisability8=0
        FLearningDisability8=0; PLearningDisability8=0; NTLearningDisability8=0; NDLearningDisability8=0
        
        Frame8=Frame(main_fm, bg='white', width=500, height=20)
        Frame8.place(x=10, y=255, width=500, height=20)
        Lable8= Label(Frame8, text='(Req8.) Webpage should not Contain any CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0)
        Framee8=Frame(main_fm, bg='white', width=130, height=25)
        Framee8.place(x=525, y=255, width=130, height=25)
        Lablee8=Label(Framee8, text=Div_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=20)
        Frameee8.place(x=675, y=255, width=480, height=20)
        Lableee8= Label(Frameee8, text='Webpage has CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee8.place(x=1175, y=255, width=130, height=20)
        Lableeee8=Label(Frameeee8, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee8.grid(row=0, column=0)
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1325, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text= DivCAPTCHA_failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee8.place(x=1425, y=255, width=210, height=20)
        Lableeeeee8=Label(Frameeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee8.place(x=1655, y=255, width=230, height=20)
        Lableeeeeee8=Label(Frameeeeeee8, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)
        #break
      elif(DivCAPTCHA_failed<=0 and DivCAPTCHA_passed>=1):
        #print('website has no captcha')
        print('Pass: Re. Webpage has no CAPTCHA')
        Pcounter8=1; Fcounter8=0; NTcounter8=0; NDcounter8=0

        PVisionImpairment8=0; FVisionImpairment8=0; NTVisionImpairment8=0; NDVisionImpairment8=0   
        PHearingDifficulty8=0; FHearingDifficulty8=0; NTHearingDifficulty8=0; NDHearingDifficulty8=0 
        PCognitiveDisability8=1; FCognitiveDisability8=0; NTCognitiveDisability8=0; NDCognitiveDisability8=0  
        PMotionDisability8=0; FMotionDisability8=0; NTMotionDisability8=0; NDMotionDisability8=0
        PLearningDisability8=0; FLearningDisability8=0; NTLearningDisability8=0; NDLearningDisability8=0
        
        Frame8=Frame(main_fm, bg='white', width=500, height=20)
        Frame8.place(x=10, y=255, width=500, height=20)
        Lable8=Label(Frame8, text='(Req8.) Webpage should not Contain any CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0)
        Framee8=Frame(main_fm, bg='white', width=130, height=25)
        Framee8.place(x=525, y=255, width=130, height=25)
        Lablee8=Label(Framee8, text=Div_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=20)
        Frameee8.place(x=675, y=255, width=480, height=20)
        Lableee8=Label(Frameee8, text='Webpage has no CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee8.place(x=1175, y=255, width=130, height=20)
        Lableeee8=Label(Frameeee8, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee8.grid(row=0, column=0)
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1325, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text=DivCAPTCHA_passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee8.place(x=1425, y=255, width=210, height=20)
        Lableeeeee8=Label(Frameeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee8.place(x=1655, y=255, width=230, height=20)
        Lableeeeeee8=Label(Frameeeeeee8, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)
        #break
      else:
        #print('website has no captcha')
        print('Pass: Re. Webpage has no CAPTCHA')
        Pcounter8=1; Fcounter8=0; NTcounter8=0; NDcounter8=0

        PVisionImpairment8=0; FVisionImpairment8=0; NTVisionImpairment8=0; NDVisionImpairment8=0   
        PHearingDifficulty8=0; FHearingDifficulty8=0; NTHearingDifficulty8=0; NDHearingDifficulty8=0 
        PCognitiveDisability8=1; FCognitiveDisability8=0; NTCognitiveDisability8=0; NDCognitiveDisability8=0  
        PMotionDisability8=0; FMotionDisability8=0; NTMotionDisability8=0; NDMotionDisability8=0
        PLearningDisability8=0; FLearningDisability8=0; NTLearningDisability8=0; NDLearningDisability8=0
        
        Frame8=Frame(main_fm, bg='white', width=500, height=20)
        Frame8.place(x=10, y=255, width=500, height=20)
        Lable8=Label(Frame8, text='(Req8.) Webpage should not Contain any CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable8.grid(row=0, column=0)
        Framee8=Frame(main_fm, bg='white', width=130, height=25)
        Framee8.place(x=525, y=255, width=130, height=25)
        Lablee8=Label(Framee8, text=Div_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee8.grid(row=0, column=0)
        Frameee8=Frame(main_fm, bg='white', width=480, height=20)
        Frameee8.place(x=675, y=255, width=480, height=20)
        Lableee8=Label(Frameee8, text='Webpage has no CAPTCHA', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee8.grid(row=0, column=0)
        Frameeee8=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee8.place(x=1175, y=255, width=130, height=20)
        Lableeee8=Label(Frameeee8, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee8.grid(row=0, column=0)
        Frameeeee8=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee8.place(x=1325, y=255, width=80, height=25)
        Lableeeee8=Label(Frameeeee8, text=DivCAPTCHA_passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee8.grid(row=0, column=0)
        Frameeeeee8=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee8.place(x=1425, y=255, width=210, height=20)
        Lableeeeee8=Label(Frameeeeee8, text='Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee8.grid(row=0, column=0)
        Frameeeeeee8=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee8.place(x=1655, y=255, width=230, height=20)
        Lableeeeeee8=Label(Frameeeeeee8, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee8.grid(row=0, column=0)


      ###------------------------------------------------###

      global multiLanguage_totalCount

      multiLanguage_Object=1  

      counter=0
      multiLanguage_totalCount=0
      for item in soup.find_all('nav'):
        for item in soup.find_all('ul'):
          for item in soup.find_all('li'):
            for item in soup.find_all('a'):
              if('onclick' in item):
                #if('onclick' != ' '):
                counter+=1  
                multiLanguage_totalCount=counter                        
      print('Number of Passed Guideline for Multiple Language:', multiLanguage_totalCount)


      if(multiLanguage_totalCount<=2):
        print('Fail: Re. Webpage should have multiple languages version')
        Fcounter9=1; Pcounter9=0; NTcounter9=0; NDcounter9=0
        
        FVisionImpairment9=0; PVisionImpairment9=0; NTVisionImpairment9=0; NDVisionImpairment9=0   
        FHearingDifficulty9=0; PHearingDifficulty9=0; NTHearingDifficulty9=0; NDHearingDifficulty9=0  
        FCognitiveDisability9=1; PCognitiveDisability9=0; NTCognitiveDisability9=0; NDCognitiveDisability9=0
        FMotionDisability9=0; PMotionDisability9=0; NTMotionDisability9=0; NDMotionDisability9=0
        FLearningDisability9=1; PLearningDisability9=0; NTLearningDisability9=0; NDLearningDisability9=0
        
        Frame9=Frame(main_fm, bg='white', width=500, height=20)
        Frame9.place(x=10, y=280, width=500, height=20)
        Lable9= Label(Frame9, text='(Req9.) Webpage should have Multiple Languages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable9.grid(row=0, column=0)
        Framee9=Frame(main_fm, bg='white', width=130, height=25)
        Framee9.place(x=525, y=280, width=130, height=25)
        Lablee9=Label(Framee9, text=multiLanguage_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee9.grid(row=0, column=0)
        Frameee9=Frame(main_fm, bg='white', width=480, height=20)
        Frameee9.place(x=675, y=280, width=480, height=20)
        Lableee9= Label(Frameee9, text='Webpage has no Multiple Languages Version', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee9.grid(row=0, column=0)
        Frameeee9=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee9.place(x=1175, y=280, width=130, height=20)
        Lableeee9=Label(Frameeee9, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee9.grid(row=0, column=0)
        Frameeeee9=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee9.place(x=1325, y=280, width=80, height=25)
        Lableeeee9=Label(Frameeeee9, text= '<=1', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee9.grid(row=0, column=0)
        Frameeeeee9=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee9.place(x=1425, y=280, width=210, height=20)
        Lableeeeee9=Label(Frameeeeee9, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee9.grid(row=0, column=0)
        Frameeeeeee9=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee9.place(x=1655, y=280, width=230, height=20)
        Lableeeeeee9=Label(Frameeeeeee9, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee9.grid(row=0, column=0)
      else:
        #print('website has no captcha')
        print('Pass: Re. Webpage should have multiple languages version')
        Pcounter9=1; Fcounter9=0; NTcounter9=0; NDcounter9=0

        PVisionImpairment9=0; FVisionImpairment9=0; NTVisionImpairment9=0; NDVisionImpairment9=0   
        PHearingDifficulty9=0; FHearingDifficulty9=0; NTHearingDifficulty9=0; NDHearingDifficulty9=0 
        PCognitiveDisability9=1; FCognitiveDisability9=0; NTCognitiveDisability9=0; NDCognitiveDisability9=0  
        PMotionDisability9=0; FMotionDisability9=0; NTMotionDisability9=0; NDMotionDisability9=0
        PLearningDisability9=1; FLearningDisability9=0; NTLearningDisability9=0; NDLearningDisability9=0
        
        Frame9=Frame(main_fm, bg='white', width=500, height=20)
        Frame9.place(x=10, y=280, width=500, height=20)
        Lable9=Label(Frame9, text='(Req9.) Webpage should have Multiple Languages', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable9.grid(row=0, column=0)
        Framee9=Frame(main_fm, bg='white', width=130, height=25)
        Framee9.place(x=525, y=280, width=130, height=25)
        Lablee9=Label(Framee9, text=multiLanguage_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee9.grid(row=0, column=0)
        Frameee9=Frame(main_fm, bg='white', width=480, height=20)
        Frameee9.place(x=675, y=280, width=480, height=20)
        Lableee9=Label(Frameee9, text='Webpage has Multiple Languages Version',fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee9.grid(row=0, column=0)
        Frameeee9=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee9.place(x=1175, y=280, width=130, height=20)
        Lableeee9=Label(Frameeee9, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee9.grid(row=0, column=0)
        Frameeeee9=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee9.place(x=1325, y=280, width=80, height=25)
        Lableeeee9=Label(Frameeeee9, text='>=2', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee9.grid(row=0, column=0)
        Frameeeeee9=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee9.place(x=1425, y=280, width=210, height=20)
        Lableeeeee9=Label(Frameeeeee9, text='Cognitive/Learning Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee9.grid(row=0, column=0)
        Frameeeeeee9=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee9.place(x=1655, y=280, width=230, height=20)
        Lableeeeeee9=Label(Frameeeeeee9, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee9.grid(row=0, column=0)


      ###---------------------------------------###

      if(img_totalCount>10):
        print('Fail: Re. Webpage should not have too many images')
        Fcounter10=1; Pcounter10=0; NTcounter10=0; NDcounter10=0
        
        FVisionImpairment10=1; PVisionImpairment10=0; NTVisionImpairment10=0; NDVisionImpairment10=0   
        FHearingDifficulty10=0; PHearingDifficulty10=0; NTHearingDifficulty10=0; NDHearingDifficulty10=0  
        FCognitiveDisability10=1; PCognitiveDisability10=0; NTCognitiveDisability10=0; NDCognitiveDisability10=0
        FMotionDisability10=0; PMotionDisability10=0; NTMotionDisability10=0; NDMotionDisability10=0
        FLearningDisability10=0; PLearningDisability10=0; NTLearningDisability10=0; NDLearningDisability10=0
        
        Frame10=Frame(main_fm, bg='white', width=500, height=20)
        Frame10.place(x=10, y=305, width=500, height=20)
        Lable10= Label(Frame10, text='(Req10.) Webpage should not have Many Images', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=130, height=25)
        Framee10.place(x=525, y=305, width=130, height=25)
        Lablee10=Label(Framee10, text=img_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=20)
        Frameee10.place(x=675, y=305, width=480, height=20)
        Lableee10= Label(Frameee10, text='Number of Images in the Webpage is not Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee10.place(x=1175, y=305, width=130, height=20)
        Lableeee10=Label(Frameeee10, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1325, y=305, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text= '>10', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee10.place(x=1425, y=305, width=210, height=20)
        Lableeeeee10=Label(Frameeeeee10, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee10.place(x=1655, y=305, width=230, height=20)
        Lableeeeeee10=Label(Frameeeeeee10, text='Required Additional Checking', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)
      else:
        #print('website has no captcha')
        print('Pass: Re. Webpage should not have too many images')
        Pcounter10=1; Fcounter10=0; NTcounter10=0; NDcounter10=0

        PVisionImpairment10=0; FVisionImpairment10=0; NTVisionImpairment10=0; NDVisionImpairment10=0   
        PHearingDifficulty10=0; FHearingDifficulty10=0; NTHearingDifficulty10=0; NDHearingDifficulty10=0 
        PCognitiveDisability10=1; FCognitiveDisability10=0; NTCognitiveDisability10=0; NDCognitiveDisability10=0  
        PMotionDisability10=0; FMotionDisability10=0; NTMotionDisability10=0; NDMotionDisability10=0
        PLearningDisability10=0; FLearningDisability10=0; NTLearningDisability10=0; NDLearningDisability10=0
        
        Frame10=Frame(main_fm, bg='white', width=500, height=20)
        Frame10.place(x=10, y=305, width=500, height=20)
        Lable10=Label(Frame10, text='(Req10.) Webpage should not have Many Images', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable10.grid(row=0, column=0)
        Framee10=Frame(main_fm, bg='white', width=130, height=25)
        Framee10.place(x=525, y=305, width=130, height=25)
        Lablee10=Label(Framee10, text=img_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee10.grid(row=0, column=0)
        Frameee10=Frame(main_fm, bg='white', width=480, height=20)
        Frameee10.place(x=675, y=305, width=480, height=20)
        Lableee10=Label(Frameee10, text='Number of Images in the Webpage is Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee10.grid(row=0, column=0)
        Frameeee10=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee10.place(x=1175, y=305, width=130, height=20)
        Lableeee10=Label(Frameeee10, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee10.grid(row=0, column=0)
        Frameeeee10=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee10.place(x=1325, y=305, width=80, height=25)
        Lableeeee10=Label(Frameeeee10, text='<=10', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee10.grid(row=0, column=0)
        Frameeeeee10=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee10.place(x=1425, y=305, width=210, height=20)
        Lableeeeee10=Label(Frameeeeee10, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee10.grid(row=0, column=0)
        Frameeeeeee10=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee10.place(x=1655, y=305, width=230, height=20)
        Lableeeeeee10=Label(Frameeeeeee10, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee10.grid(row=0, column=0)



      ###--------------------------------------###

      global text_Resize_Option_totalCount

      text_Resize_Option_Object=1  

      text_Resize_Option_totalCount=0

      print('Not Tested: Re. Webpage should have Text resize option or font changing option')
      NTcounter11=1; Fcounter11=0; Pcounter11=0; NDcounter11=0
        
      FVisionImpairment11=1; PVisionImpairment11=0; NTVisionImpairment11=0; NDVisionImpairment11=0   
      FHearingDifficulty11=0; PHearingDifficulty11=0; NTHearingDifficulty11=0; NDHearingDifficulty11=0  
      FCognitiveDisability11=1; PCognitiveDisability11=0; NTCognitiveDisability11=0; NDCognitiveDisability11=0
      FMotionDisability11=0; PMotionDisability11=0; NTMotionDisability11=0; NDMotionDisability11=0
      FLearningDisability11=0; PLearningDisability11=0; NTLearningDisability11=0; NDLearningDisability11=0
        
      Frame11=Frame(main_fm, bg='white', width=500, height=20)
      Frame11.place(x=10, y=330, width=500, height=20)
      Lable11= Label(Frame11, text='(Req11.) Webpage should have Font Changing Option', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lable11.grid(row=0, column=0)
      Framee11=Frame(main_fm, bg='white', width=130, height=25)
      Framee11.place(x=525, y=330, width=130, height=25)
      Lablee11=Label(Framee11, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
      Lablee11.grid(row=0, column=0)
      Frameee11=Frame(main_fm, bg='white', width=480, height=20)
      Frameee11.place(x=675, y=330, width=480, height=20)
      Lableee11= Label(Frameee11, text='Webpage Font Changing Option was not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableee11.grid(row=0, column=0)
      Frameeee11=Frame(main_fm, bg='white', width=130, height=20)
      Frameeee11.place(x=1175, y=330, width=130, height=20)
      Lableeee11=Label(Frameeee11, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold'))
      Lableeee11.grid(row=0, column=0)
      Frameeeee11=Frame(main_fm, bg='white', width=80, height=25)
      Frameeeee11.place(x=1325, y=330, width=80, height=25)
      Lableeeee11=Label(Frameeeee11, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
      Lableeeee11.grid(row=0, column=0)
      Frameeeeee11=Frame(main_fm, bg='white', width=210, height=20)
      Frameeeeee11.place(x=1425, y=330, width=210, height=20)
      Lableeeeee11=Label(Frameeeeee11, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeee11.grid(row=0, column=0)
      Frameeeeeee11=Frame(main_fm, bg='white', width=230, height=20)
      Frameeeeeee11.place(x=1655, y=330, width=230, height=20)
      Lableeeeeee11=Label(Frameeeeeee11, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeee11.grid(row=0, column=0)


      ###--------------------------------------###

      global color_Changing_Option_totalCount

      color_Changing_Option=1 

      color_Changing_Option_totalCount=0 

      print('Not Tested: Re. Webpage should have Color changing option ')
      NTcounter12=1; Pcounter12=0; Fcounter12=0; NDcounter12=0
      
      FVisionImpairment12=1; PVisionImpairment12=0; NTVisionImpairment12=0; NDVisionImpairment12=0   
      FHearingDifficulty12=0; PHearingDifficulty12=0; NTHearingDifficulty12=0; NDHearingDifficulty12=0  
      FCognitiveDisability12=1; PCognitiveDisability12=0; NTCognitiveDisability12=0; NDCognitiveDisability12=0
      FMotionDisability12=0; PMotionDisability12=0; NTMotionDisability12=0; NDMotionDisability12=0
      FLearningDisability12=0; PLearningDisability12=0; NTLearningDisability12=0; NDLearningDisability12=0
        
      Frame12=Frame(main_fm, bg='white', width=500, height=20)
      Frame12.place(x=10, y=355, width=500, height=20)
      Lable12= Label(Frame12, text='(Req12.) Webpage should have Color Changing Option', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lable12.grid(row=0, column=0)
      Framee12=Frame(main_fm, bg='white', width=130, height=25)
      Framee12.place(x=525, y=355, width=130, height=25)
      Lablee12=Label(Framee12, text='---', fg='black',bg='white', font=("Arial", 11, 'bold'))
      Lablee12.grid(row=0, column=0)
      Frameee12=Frame(main_fm, bg='white', width=480, height=20)
      Frameee12.place(x=675, y=355, width=480, height=20)
      Lableee12= Label(Frameee12, text='Webpage Color Changing Option was not Tested', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableee12.grid(row=0, column=0)
      Frameeee12=Frame(main_fm, bg='white', width=130, height=20)
      Frameeee12.place(x=1175, y=355, width=130, height=20)
      Lableeee12=Label(Frameeee12, text='NOT TESTED', fg='dark blue', bg='white',font=("Arial", 11, 'bold'))
      Lableeee12.grid(row=0, column=0)
      Frameeeee12=Frame(main_fm, bg='white', width=80, height=25)
      Frameeeee12.place(x=1325, y=355, width=80, height=25)
      Lableeeee12=Label(Frameeeee12, text='---', fg='dark blue',bg='white', font=("Arial", 11, 'bold'))
      Lableeeee12.grid(row=0, column=0)
      Frameeeeee12=Frame(main_fm, bg='white', width=210, height=20)
      Frameeeeee12.place(x=1425, y=355, width=210, height=20)
      Lableeeeee12=Label(Frameeeeee12, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeee12.grid(row=0, column=0)
      Frameeeeeee12=Frame(main_fm, bg='white', width=230, height=20)
      Frameeeeeee12.place(x=1655, y=355, width=230, height=20)
      Lableeeeeee12=Label(Frameeeeeee12, text='Required Expert Testing', fg='black', bg='white',font=("Arial", 11, 'bold'))
      Lableeeeeee12.grid(row=0, column=0)


      ###-------------------------------------------------------------------####

      global paragraphTextFontFamily_totalCount

      font_Family_Object=1  

      counter=0
      paragraphTextFontFamily_Passed=0
      TextFontFamily_paragraph = soup.find_all('p')         
      for item in TextFontFamily_paragraph:
        if ((('style="font-family: Tahoma"') or ('style="font-family: Calibri"') or ('style="font-family: Helvetica"') or ('style="font-family: Arial"') or ('style="font-family: Verdana"') or ('style="font-family: Times New Roman"')) in item):
          counter+=1  
          paragraphTextFontFamily_Passed=counter                         
      print('Paragraph has Defined Proper Font-Family:', paragraphTextFontFamily_Passed)

      counter=0
      paragraphTextFontFamily_Failed=0
      TextFontFamily_paragraph = soup.find_all('p')         
      for item in TextFontFamily_paragraph:
        if ((('style="font-family: Tahoma"') or ('style="font-family: Calibri"') or ('style="font-family: Helvetica"') or ('style="font-family: Arial"') or ('style="font-family: Verdana"') or ('style="font-family: Times New Roman"')) not in item):
          counter+=1  
          paragraphTextFontFamily_Failed=counter                         
      print('Paragraph has no Proper Font-Family:', paragraphTextFontFamily_Failed)

      paragraphTextFontFamily_totalCount=paragraphTextFontFamily_Passed +paragraphTextFontFamily_Failed
      print('Total Number of Guideline Checked for Paragraph Text Font-Family', paragraphTextFontFamily_totalCount)
      
      
      if (paragraphTextFontFamily_Failed<=0 and paragraphTextFontFamily_Passed>=1):
        print('Pass: Re. Webpage Paragraph has Defined Proper Fontsize')
        Frame13=Frame(main_fm, bg='white', width=500, height=20)
        Frame13.place(x=10, y=380, width=500, height=20)
        Lable13= Label(Frame13, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0)
        Framee13=Frame(main_fm, bg='white', width=130, height=25)
        Framee13.place(x=525, y=380, width=130, height=25)
        Lablee13=Label(Framee13, text=paragraphTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=20)
        Frameee13.place(x=675, y=380, width=480, height=20)
        Lableee13= Label(Frameee13, text='Webpage Paragraph has Defined Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0)
        Frameeee13=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee13.place(x=1175, y=380, width=130, height=20)
        Lableeee13=Label(Frameeee13, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee13.grid(row=0, column=0)
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1325, y=380, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=paragraphTextFontFamily_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee13.place(x=1425, y=380, width=210, height=20)
        Lableeeeee13=Label(Frameeeeee13, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee13.place(x=1655, y=380, width=230, height=20)
        Lableeeeeee13=Label(Frameeeeeee13, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)
      elif(paragraphTextFontFamily_Failed>0):
        print('Failed: Re. Webpage Paragraph has no Defined Proper Font-Family')
        Frame13=Frame(main_fm, bg='white', width=500, height=20)
        Frame13.place(x=10, y=380, width=500, height=20)
        Lable13= Label(Frame13, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0)
        Framee13=Frame(main_fm, bg='white', width=130, height=25)
        Framee13.place(x=525, y=380, width=130, height=25)
        Lablee13=Label(Framee13, text=paragraphTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=20)
        Frameee13.place(x=675, y=380, width=480, height=20)
        Lableee13= Label(Frameee13, text='Webpage Paragraph has no Defined Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0)
        Frameeee13=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee13.place(x=1175, y=380, width=130, height=20)
        Lableeee13=Label(Frameeee13, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee13.grid(row=0, column=0)
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1325, y=380, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=paragraphTextFontFamily_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee13.place(x=1425, y=380, width=210, height=20)
        Lableeeeee13=Label(Frameeeeee13, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee13.place(x=1655, y=380, width=230, height=20)
        Lableeeeeee13=Label(Frameeeeeee13, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage has no Paragraph to check Font-Family')
        Frame13=Frame(main_fm, bg='white', width=500, height=20)
        Frame13.place(x=10, y=380, width=500, height=20)
        Lable13= Label(Frame13, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable13.grid(row=0, column=0)
        Framee13=Frame(main_fm, bg='white', width=130, height=25)
        Framee13.place(x=525, y=380, width=130, height=25)
        Lablee13=Label(Framee13, text=paragraphTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee13.grid(row=0, column=0)
        Frameee13=Frame(main_fm, bg='white', width=480, height=20)
        Frameee13.place(x=675, y=380, width=480, height=20)
        Lableee13= Label(Frameee13, text='Webpage has no Paragraph to Check Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee13.grid(row=0, column=0)
        Frameeee13=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee13.place(x=1175, y=380, width=130, height=20)
        Lableeee13=Label(Frameeee13, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee13.grid(row=0, column=0)
        Frameeeee13=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee13.place(x=1325, y=380, width=80, height=25)
        Lableeeee13=Label(Frameeeee13, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee13.grid(row=0, column=0)
        Frameeeeee13=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee13.place(x=1425, y=380, width=210, height=20)
        Lableeeeee13=Label(Frameeeeee13, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee13.grid(row=0, column=0)
        Frameeeeeee13=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee13.place(x=1655, y=380, width=230, height=20)
        Lableeeeeee13=Label(Frameeeeeee13, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee13.grid(row=0, column=0)


      #####---------------------------------------###

      global headingTextFontFamily_totalCount

      counter=0
      TextFontFamily_heading_Passed=0
      TextFontFamily_heading = soup.find_all(re.compile('^h[1-6]'))         
      for item in TextFontFamily_heading:
        if ((('style="font-family: Tahoma"') or ('style="font-family: Calibri"') or ('style="font-family: Helvetica"') or ('style="font-family: Arial"') or ('style="font-family: Verdana"') or ('style="font-family: Times New Roman"')) in item):
          counter+=1  
          TextFontFamily_heading_Passed=counter                         
      print('Heading Text has Proper Font-Family:', TextFontFamily_heading_Passed)

      counter=0
      TextFontFamily_heading_Failed=0
      TextFontFamily_heading = soup.find_all(re.compile('^h[1-6]'))        
      for item in TextFontFamily_heading:
        if ((('style="font-family: Tahoma"') or ('style="font-family: Calibri"') or ('style="font-family: Helvetica"') or ('style="font-family: Arial"') or ('style="font-family: Verdana"') or ('style="font-family: Times New Roman"')) not in item):
          counter+=1  
          TextFontFamily_heading_Failed=counter                         
      print('Heading Text has no Proper Font-Family:', TextFontFamily_heading_Failed)

      
      headingTextFontFamily_totalCount=TextFontFamily_heading_Passed +TextFontFamily_heading_Failed
      print('Total Number of Guideline Checked for Heading Text Font-Family', headingTextFontFamily_totalCount)


      if (TextFontFamily_heading_Failed<=0 and TextFontFamily_heading_Passed>=1):
        print('Pass: Re. Webpage Heading Text has Defined Proper Font-Family')
        Frame14=Frame(main_fm, bg='white', width=500, height=20)
        Frame14.place(x=10, y=405, width=500, height=20)
        Lable14= Label(Frame14, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0)
        Framee14=Frame(main_fm, bg='white', width=130, height=25)
        Framee14.place(x=525, y=405, width=130, height=25)
        Lablee14=Label(Framee14, text=headingTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=20)
        Frameee14.place(x=675, y=405, width=480, height=20)
        Lableee14= Label(Frameee14, text='Webpage Heading Text has Defined Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0)
        Frameeee14=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee14.place(x=1175, y=405, width=130, height=20)
        Lableeee14=Label(Frameeee14, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee14.grid(row=0, column=0)
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1325, y=405, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=TextFontFamily_heading_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee14.place(x=1425, y=405, width=210, height=20)
        Lableeeeee14=Label(Frameeeeee14, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee14.place(x=1655, y=405, width=230, height=20)
        Lableeeeeee14=Label(Frameeeeeee14, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)
      elif(TextFontFamily_heading_Failed>0):
        print('Failed: Re. Webpage Heading Text has no Defined Proper Font-Family')
        Frame14=Frame(main_fm, bg='white', width=500, height=20)
        Frame14.place(x=10, y=405, width=500, height=20)
        Lable14= Label(Frame14, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0)
        Framee14=Frame(main_fm, bg='white', width=130, height=25)
        Framee14.place(x=525, y=405, width=130, height=25)
        Lablee14=Label(Framee14, text=headingTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=20)
        Frameee14.place(x=675, y=405, width=480, height=20)
        Lableee14= Label(Frameee14, text='Webpage Heading Text has no Defined Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0)
        Frameeee14=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee14.place(x=1175, y=405, width=130, height=20)
        Lableeee14=Label(Frameeee14, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee14.grid(row=0, column=0)
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1325, y=405, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=TextFontFamily_heading_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee14.place(x=1425, y=405, width=210, height=20)
        Lableeeeee14=Label(Frameeeeee14, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee14.place(x=1655, y=405, width=230, height=20)
        Lableeeeeee14=Label(Frameeeeeee14, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage has no Headings to check Font-Family')
        Frame14=Frame(main_fm, bg='white', width=500, height=20)
        Frame14.place(x=10, y=405, width=500, height=20)
        Lable14= Label(Frame14, text='(Req13.) Webpage should have Proper Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable14.grid(row=0, column=0)
        Framee14=Frame(main_fm, bg='white', width=130, height=25)
        Framee14.place(x=525, y=405, width=130, height=25)
        Lablee14=Label(Framee14, text=headingTextFontFamily_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee14.grid(row=0, column=0)
        Frameee14=Frame(main_fm, bg='white', width=480, height=20)
        Frameee14.place(x=675, y=405, width=480, height=20)
        Lableee14= Label(Frameee14, text='Webpage has no Headings to Check Font-Family', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee14.grid(row=0, column=0)
        Frameeee14=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee14.place(x=1175, y=405, width=130, height=20)
        Lableeee14=Label(Frameeee14, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee14.grid(row=0, column=0)
        Frameeeee14=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee14.place(x=1325, y=405, width=80, height=25)
        Lableeeee14=Label(Frameeeee14, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee14.grid(row=0, column=0)
        Frameeeeee14=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee14.place(x=1425, y=405, width=210, height=20)
        Lableeeeee14=Label(Frameeeeee14, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee14.grid(row=0, column=0)
        Frameeeeeee14=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee14.place(x=1655, y=405, width=230, height=20)
        Lableeeeeee14=Label(Frameeeeeee14, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee14.grid(row=0, column=0)

      if ((paragraphTextFontFamily_Failed<=0 and paragraphTextFontFamily_Passed>=1) and (TextFontFamily_heading_Failed<=0 and TextFontFamily_heading_Passed>=1)):
        print('Pass: Re. Webpage Paragraph and Heading Text has Defined Proper Font-Family')
        Pcounter13=1; Fcounter13=0; NDcounter13=0; NTcounter13=0
      
        PVisionImpairment13=1; FVisionImpairment13=0; NTVisionImpairment13=0; NDVisionImpairment13=0   
        PHearingDifficulty13=0; FHearingDifficulty13=0; NTHearingDifficulty13=0; NDHearingDifficulty13=0  
        PCognitiveDisability13=1; FCognitiveDisability13=0; NTCognitiveDisability13=0; NDCognitiveDisability13=0
        PMotionDisability13=0; FMotionDisability13=0; NTMotionDisability13=0; NDMotionDisability13=0
        PLearningDisability13=0; FLearningDisability13=0; NTLearningDisability13=0; NDLearningDisability13=0
      elif((paragraphTextFontFamily_Failed>0) or (TextFontFamily_heading_Failed>0)):
        print('Failed: Re. Webpage Paragraph and Heading Text has no Defined Proper Font-Family')
        Fcounter13=1; Pcounter13=0; NDcounter13=0; NTcounter13=0

        FVisionImpairment13=1; PVisionImpairment13=0; NTVisionImpairment13=0; NDVisionImpairment13=0   
        FHearingDifficulty13=0; PHearingDifficulty13=0; NTHearingDifficulty13=0; NDHearingDifficulty13=0  
        FCognitiveDisability13=1; PCognitiveDisability13=0; NTCognitiveDisability13=0; NDCognitiveDisability13=0
        FMotionDisability13=0; PMotionDisability13=0; NTMotionDisability13=0; NDMotionDisability13=0
        FLearningDisability13=0; PLearningDisability13=0; NTLearningDisability13=0; NDLearningDisability13=0
      else:
        print('Not Detected: Re. Webpage has no Paragraph or Headings to check Defined Proper Font-Family')
        NDcounter13=1; Pcounter13=0; Fcounter13=0; NTcounter13=0

        NDVisionImpairment13=1; PVisionImpairment13=0; FVisionImpairment13=0; NTVisionImpairment13=0   
        NDHearingDifficulty13=0; PHearingDifficulty13=0; FHearingDifficulty13=0; NTHearingDifficulty13=0  
        NDCognitiveDisability13=1; PCognitiveDisability13=0; FCognitiveDisability13=0; NTCognitiveDisability13=0
        NDMotionDisability13=0; PMotionDisability13=0; FMotionDisability13=0; NTMotionDisability13=0
        NDLearningDisability13=0; PLearningDisability13=0; FLearningDisability13=0; NTLearningDisability13=0




      ###-------------------------------------------------------------------####

      global paragraphTextFontSize_totalCount

      font_Size_Object=1  

      counter=0
      paragraphTextFontSize_Passed=0
      TextFontSize_paragraph = soup.find_all('p')         
      for item in TextFontSize_paragraph:
        if ((('style="font-size: 16px"') or ('style="font-size: 17px"') or ('style="font-size: 18px"') or ('style="font-size: 19px"') or ('style="font-size: 20px"')) in item):
          counter+=1  
          paragraphTextFontSize_Passed=counter                         
      print('Paragraph has Defined Proper Fontsize:', paragraphTextFontSize_Passed)

      counter=0
      paragraphTextFontSize_Failed=0
      TextFontSize_paragraph = soup.find_all('p')         
      for item in TextFontSize_paragraph:
        if ((('style="font-size: 16px"') or ('style="font-size: 17px"') or ('style="font-size: 18px"') or ('style="font-size: 19px"') or ('style="font-size: 20px"')) not in item):
          counter+=1  
          paragraphTextFontSize_Failed=counter                         
      print('Paragraph has no Proper Fontsize:', paragraphTextFontSize_Failed)

      paragraphTextFontSize_totalCount=paragraphTextFontSize_Passed +paragraphTextFontSize_Failed
      print('Total Number of Guideline Checked for Paragraph Text Fontsize', paragraphTextFontSize_totalCount)
      
      
      if (paragraphTextFontSize_Failed<=0 and paragraphTextFontSize_Passed>=1):
        print('Pass: Re. Webpage Paragraph has Defined Proper Fontsize')
        Frame15=Frame(main_fm, bg='white', width=500, height=20)
        Frame15.place(x=10, y=430, width=500, height=20)
        Lable15= Label(Frame15, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0)
        Framee15=Frame(main_fm, bg='white', width=130, height=25)
        Framee15.place(x=525, y=430, width=130, height=25)
        Lablee15=Label(Framee15, text=paragraphTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=20)
        Frameee15.place(x=675, y=430, width=480, height=20)
        Lableee15= Label(Frameee15, text='Webpage Paragraph has Defined Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0)
        Frameeee15=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee15.place(x=1175, y=430, width=130, height=20)
        Lableeee15=Label(Frameeee15, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee15.grid(row=0, column=0)
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1325, y=430, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=paragraphTextFontSize_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee15.place(x=1425, y=430, width=210, height=20)
        Lableeeeee15=Label(Frameeeeee15, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee15.place(x=1655, y=430, width=230, height=20)
        Lableeeeeee15=Label(Frameeeeeee15, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)
      elif(paragraphTextFontSize_Failed>0):
        print('Failed: Re. Webpage Paragraph has no Defined Proper Fontsize')
        Frame15=Frame(main_fm, bg='white', width=500, height=20)
        Frame15.place(x=10, y=430, width=500, height=20)
        Lable15= Label(Frame15, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0)
        Framee15=Frame(main_fm, bg='white', width=130, height=25)
        Framee15.place(x=525, y=430, width=130, height=25)
        Lablee15=Label(Framee15, text=paragraphTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=20)
        Frameee15.place(x=675, y=430, width=480, height=20)
        Lableee15= Label(Frameee15, text='Webpage Paragraph has no Defined Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0)
        Frameeee15=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee15.place(x=1175, y=430, width=130, height=20)
        Lableeee15=Label(Frameeee15, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee15.grid(row=0, column=0)
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1325, y=430, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=paragraphTextFontSize_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee15.place(x=1425, y=430, width=210, height=20)
        Lableeeeee15=Label(Frameeeeee15, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee15.place(x=1655, y=430, width=230, height=20)
        Lableeeeeee15=Label(Frameeeeeee15, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage has no Paragraph to check Fontsize')
        Frame15=Frame(main_fm, bg='white', width=500, height=20)
        Frame15.place(x=10, y=430, width=500, height=20)
        Lable15= Label(Frame15, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable15.grid(row=0, column=0)
        Framee15=Frame(main_fm, bg='white', width=130, height=25)
        Framee15.place(x=525, y=430, width=130, height=25)
        Lablee15=Label(Framee15, text=paragraphTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee15.grid(row=0, column=0)
        Frameee15=Frame(main_fm, bg='white', width=480, height=20)
        Frameee15.place(x=675, y=430, width=480, height=20)
        Lableee15= Label(Frameee15, text='Webpage has no Paragraph to Check Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee15.grid(row=0, column=0)
        Frameeee15=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee15.place(x=1175, y=430, width=130, height=20)
        Lableeee15=Label(Frameeee15, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee15.grid(row=0, column=0)
        Frameeeee15=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee15.place(x=1325, y=430, width=80, height=25)
        Lableeeee15=Label(Frameeeee15, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee15.grid(row=0, column=0)
        Frameeeeee15=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee15.place(x=1425, y=430, width=210, height=20)
        Lableeeeee15=Label(Frameeeeee15, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee15.grid(row=0, column=0)
        Frameeeeeee15=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee15.place(x=1655, y=430, width=230, height=20)
        Lableeeeeee15=Label(Frameeeeeee15, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee15.grid(row=0, column=0)

      #####---------------------------------------###

      global headingTextFontSize_totalCount

      counter=0
      TextFontSize_heading_Passed=0
      TextFontSize_heading = soup.find_all(re.compile('^h[1-6]'))         
      for item in TextFontSize_heading:
        if ((('style="font-size: 16px"') or ('style="font-size: 17px"') or ('style="font-size: 18px"') or ('style="font-size: 19px"') or ('style="font-size: 20px"')) in item):
          counter+=1  
          TextFontSize_heading_Passed=counter                         
      print('Heading Text has Proper Fontsize:', TextFontSize_heading_Passed)

      counter=0
      TextFontSize_heading_Failed=0
      TextFontSize_heading = soup.find_all(re.compile('^h[1-6]'))        
      for item in TextFontSize_heading:
        if ((('style="font-size: 16px"') or ('style="font-size: 17px"') or ('style="font-size: 18px"') or ('style="font-size: 19px"') or ('style="font-size: 20px"')) not in item):
          counter+=1  
          TextFontSize_heading_Failed=counter                         
      print('Heading Text has no Proper Fontsize:', TextFontSize_heading_Failed)

      
      headingTextFontSize_totalCount=TextFontSize_heading_Passed +TextFontSize_heading_Failed
      print('Total Number of Guideline Checked for Heading Text Fontsize', headingTextFontSize_totalCount)


      if (TextFontSize_heading_Failed<=0 and TextFontSize_heading_Passed>=1):
        print('Pass: Re. Webpage Heading Text has Defined Proper Fontsize')
        Frame16=Frame(main_fm, bg='white', width=500, height=20)
        Frame16.place(x=10, y=455, width=500, height=20)
        Lable16= Label(Frame16, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable16.grid(row=0, column=0)
        Framee16=Frame(main_fm, bg='white', width=130, height=25)
        Framee16.place(x=525, y=455, width=130, height=25)
        Lablee16=Label(Framee16, text=headingTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee16.grid(row=0, column=0)
        Frameee16=Frame(main_fm, bg='white', width=480, height=20)
        Frameee16.place(x=675, y=455, width=480, height=20)
        Lableee16= Label(Frameee16, text='Webpage Heading Text has Defined Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee16.grid(row=0, column=0)
        Frameeee16=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee16.place(x=1175, y=455, width=130, height=20)
        Lableeee16=Label(Frameeee16, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee16.grid(row=0, column=0)
        Frameeeee16=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee16.place(x=1325, y=455, width=80, height=25)
        Lableeeee16=Label(Frameeeee16, text=TextFontSize_heading_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee16.grid(row=0, column=0)
        Frameeeeee16=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee16.place(x=1425, y=455, width=210, height=20)
        Lableeeeee16=Label(Frameeeeee16, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee16.grid(row=0, column=0)
        Frameeeeeee16=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee16.place(x=1655, y=455, width=230, height=20)
        Lableeeeeee16=Label(Frameeeeeee16, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee16.grid(row=0, column=0)
      elif(TextFontSize_heading_Failed>0):
        print('Failed: Re. Webpage Heading Text has no Defined Proper Fontsize')
        Frame16=Frame(main_fm, bg='white', width=500, height=20)
        Frame16.place(x=10, y=455, width=500, height=20)
        Lable16= Label(Frame16, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable16.grid(row=0, column=0)
        Framee16=Frame(main_fm, bg='white', width=130, height=25)
        Framee16.place(x=525, y=455, width=130, height=25)
        Lablee16=Label(Framee16, text=headingTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee16.grid(row=0, column=0)
        Frameee16=Frame(main_fm, bg='white', width=480, height=20)
        Frameee16.place(x=675, y=455, width=480, height=20)
        Lableee16= Label(Frameee16, text='Webpage Heading Text has no Defined Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee16.grid(row=0, column=0)
        Frameeee16=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee16.place(x=1175, y=455, width=130, height=20)
        Lableeee16=Label(Frameeee16, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee16.grid(row=0, column=0)
        Frameeeee16=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee16.place(x=1325, y=455, width=80, height=25)
        Lableeeee16=Label(Frameeeee16, text=TextFontSize_heading_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee16.grid(row=0, column=0)
        Frameeeeee16=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee16.place(x=1425, y=455, width=210, height=20)
        Lableeeeee16=Label(Frameeeeee16, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee16.grid(row=0, column=0)
        Frameeeeeee16=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee16.place(x=1655, y=455, width=230, height=20)
        Lableeeeeee16=Label(Frameeeeeee16, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee16.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage has no Headings to check Fontsize')
        Frame16=Frame(main_fm, bg='white', width=500, height=20)
        Frame16.place(x=10, y=455, width=500, height=20)
        Lable16= Label(Frame16, text='(Req14.) Webpage should have Proper Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable16.grid(row=0, column=0)
        Framee16=Frame(main_fm, bg='white', width=130, height=25)
        Framee16.place(x=525, y=455, width=130, height=25)
        Lablee16=Label(Framee16, text=headingTextFontSize_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee16.grid(row=0, column=0)
        Frameee16=Frame(main_fm, bg='white', width=480, height=20)
        Frameee16.place(x=675, y=455, width=480, height=20)
        Lableee16= Label(Frameee16, text='Webpage has no Headings to Check Fontsize', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee16.grid(row=0, column=0)
        Frameeee16=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee16.place(x=1175, y=455, width=130, height=20)
        Lableeee16=Label(Frameeee16, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee16.grid(row=0, column=0)
        Frameeeee16=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee16.place(x=1325, y=455, width=80, height=25)
        Lableeeee16=Label(Frameeeee16, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee16.grid(row=0, column=0)
        Frameeeeee16=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee16.place(x=1425, y=455, width=210, height=20)
        Lableeeeee16=Label(Frameeeeee16, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee16.grid(row=0, column=0)
        Frameeeeeee16=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee16.place(x=1655, y=455, width=230, height=20)
        Lableeeeeee16=Label(Frameeeeeee16, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee16.grid(row=0, column=0)

      if ((paragraphTextFontSize_Failed<=0 and paragraphTextFontSize_Passed>=1) and (TextFontSize_heading_Failed<=0 and TextFontSize_heading_Passed>=1)):
        print('Pass: Re. Webpage Paragraph and Heading Text has Defined Proper Fontsize')
        Pcounter14=1; Fcounter14=0; NDcounter14=0; NTcounter14=0
      
        PVisionImpairment14=1; FVisionImpairment14=0; NTVisionImpairment14=0; NDVisionImpairment14=0   
        PHearingDifficulty14=0; FHearingDifficulty14=0; NTHearingDifficulty14=0; NDHearingDifficulty14=0  
        PCognitiveDisability14=1; FCognitiveDisability14=0; NTCognitiveDisability14=0; NDCognitiveDisability14=0
        PMotionDisability14=0; FMotionDisability14=0; NTMotionDisability14=0; NDMotionDisability14=0
        PLearningDisability14=0; FLearningDisability14=0; NTLearningDisability14=0; NDLearningDisability14=0
      elif((paragraphTextFontSize_Failed>0) or (TextFontSize_heading_Failed>0)):
        print('Failed: Re. Webpage Paragraph and Heading Text has no Defined Proper Fontsize')
        Fcounter14=1; Pcounter14=0; NDcounter14=0; NTcounter14=0

        FVisionImpairment14=1; PVisionImpairment14=0; NTVisionImpairment14=0; NDVisionImpairment14=0   
        FHearingDifficulty14=0; PHearingDifficulty14=0; NTHearingDifficulty14=0; NDHearingDifficulty14=0  
        FCognitiveDisability14=1; PCognitiveDisability14=0; NTCognitiveDisability14=0; NDCognitiveDisability14=0
        FMotionDisability14=0; PMotionDisability14=0; NTMotionDisability14=0; NDMotionDisability14=0
        FLearningDisability14=0; PLearningDisability14=0; NTLearningDisability14=0; NDLearningDisability14=0
      else:
        print('Not Detected: Re. Webpage has no Paragraph or Headings to check Defined Proper Fontsize')
        NDcounter14=1; Pcounter14=0; Fcounter14=0; NTcounter14=0

        NDVisionImpairment14=1; PVisionImpairment14=0; FVisionImpairment14=0; NTVisionImpairment14=0   
        NDHearingDifficulty14=0; PHearingDifficulty14=0; FHearingDifficulty14=0; NTHearingDifficulty14=0  
        NDCognitiveDisability14=1; PCognitiveDisability14=0; FCognitiveDisability14=0; NTCognitiveDisability14=0
        NDMotionDisability14=0; PMotionDisability14=0; FMotionDisability14=0; NTMotionDisability14=0
        NDLearningDisability14=0; PLearningDisability14=0; FLearningDisability14=0; NTLearningDisability14=0





      ###---------------------------------------------------###

      global TextPattern_totalCount
      
      text_Pattern_Object=1  

      counter=0
      Bold_Text_Passed=0
      Text_Bold=soup.find_all('p')        
      for item in Text_Bold:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<b>') == []):
          counter+=1
          Bold_Text_Passed=counter
      print('Paragraph has no Bold Text:', Bold_Text_Passed)

      counter=0
      Bold_Text_Failed=0
      Text_Bold=soup.find_all('p')        
      for item in Text_Bold:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<b>') != []):
          counter+=1  
          Bold_Text_Failed=counter
      print('Paragraph has Bold Text:', Bold_Text_Failed)

      ####------------------------------------### 

      counter=0
      Strong_Text_Passed=0
      Text_Strong=soup.find_all('p')        
      for item in Text_Strong:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<strong>') == []):
          counter+=1
          Strong_Text_Passed=counter
      print('Paragraph has no Highlighted Text:', Strong_Text_Passed)

      counter=0
      Strong_Text_Failed=0
      Text_Strong=soup.find_all('p')        
      for item in Text_Strong:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<strong>') != []):
          counter+=1  
          Strong_Text_Failed=counter
      print('Paragraph has Highlighted Text:', Strong_Text_Failed)


      ####------------------------------------### 

      counter=0
      Italic_Text_Passed=0
      Text_Italic=soup.find_all('p')        
      for item in Text_Italic:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<i>') == []):
          counter+=1
          Italic_Text_Passed=counter
      print('Paragraph has no Italic Text:', Italic_Text_Passed)

      counter=0
      Italic_Text_Failed=0
      Text_Italic=soup.find_all('p')        
      for item in Text_Italic:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<i>') != []):
          counter+=1  
          Italic_Text_Failed=counter
      print('Paragraph has Italic Text:', Italic_Text_Failed)


      ####------------------------------------### 

      counter=0
      Emphasized_Text_Passed=0
      Text_Emphasized=soup.find_all('p')        
      for item in Text_Emphasized:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<em>') == []):
          counter+=1
          Emphasized_Text_Passed=counter
      print('Paragraph has no Emphasized Text:', Emphasized_Text_Passed)

      counter=0
      Emphasized_Text_Failed=0
      Text_Emphasized=soup.find_all('p')        
      for item in Text_Emphasized:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<em>') != []):
          counter+=1  
          Emphasized_Text_Failed=counter
      print('Paragraph has Emphasized Text:', Emphasized_Text_Failed)


      ####------------------------------------### 

      counter=0
      Marked_Text_Passed=0
      Text_Marked=soup.find_all('p')        
      for item in Text_Marked:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<mark>') == []):
          counter+=1
          Marked_Text_Passed=counter
      print('Paragraph has no Marked Text:', Marked_Text_Passed)

      counter=0
      Marked_Text_Failed=0
      Text_Marked=soup.find_all('p')        
      for item in Text_Marked:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<mark>') != []):
          counter+=1  
          Marked_Text_Failed=counter
      print('Paragraph has Marked Text:', Marked_Text_Failed)

      ####------------------------------------###

      counter=0
      Subscript_Text_Passed=0
      Text_Subscript=soup.find_all('p')        
      for item in Text_Subscript:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<sub>') == []):
          counter+=1
          Subscript_Text_Passed=counter
      print('Paragraph has no Subscript Text:', Subscript_Text_Passed)

      counter=0
      Subscript_Text_Failed=0
      Text_Subscript=soup.find_all('p')        
      for item in Text_Subscript:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<sub>') != []):
          counter+=1  
          Subscript_Text_Failed=counter
      print('Paragraph has Subscript Text:', Subscript_Text_Failed)

      ####------------------------------------###

      counter=0
      Superscript_Text_Passed=0
      Text_Superscript=soup.find_all('p')        
      for item in Text_Superscript:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<sup>') == []):
          counter+=1
          Superscript_Text_Passed=counter
      print('Paragraph has no Superscript Text:', Superscript_Text_Passed)

      counter=0
      Superscript_Text_Failed=0
      Text_Superscript=soup.find_all('p')        
      for item in Text_Superscript:
        #print(soup.find_all('<b>'))
        if (soup.find_all('<sup>') != []):
          counter+=1  
          Superscript_Text_Failed=counter
      print('Paragraph has Superscript Text:', Superscript_Text_Failed)


      TextPattern_totalCount=Bold_Text_Passed+Bold_Text_Failed+Strong_Text_Passed+Strong_Text_Failed+Italic_Text_Passed+Italic_Text_Failed+Emphasized_Text_Passed+Emphasized_Text_Failed+Marked_Text_Passed+Marked_Text_Failed+Subscript_Text_Passed+Subscript_Text_Failed+Superscript_Text_Passed+Superscript_Text_Failed
      print('Total Number of Guideline Checked for Text Pattern', TextPattern_totalCount)

      TextPattern_totalCount_Passed=Bold_Text_Passed+Strong_Text_Passed+Italic_Text_Passed+Emphasized_Text_Passed+Marked_Text_Passed+Subscript_Text_Passed+Superscript_Text_Passed
      print('Total Number of Guideline Passed for Text Pattern', TextPattern_totalCount_Passed)

      TextPattern_totalCount_Failed=Bold_Text_Failed+Strong_Text_Failed+Italic_Text_Failed+Emphasized_Text_Failed+Marked_Text_Failed+Subscript_Text_Failed+Superscript_Text_Failed
      print('Total Number of Guideline Failed for Text Pattern', TextPattern_totalCount_Failed)


      if((Bold_Text_Failed<=0 and Bold_Text_Passed>=1) and (Strong_Text_Failed<=0 and Strong_Text_Passed>=1) and (Italic_Text_Failed<=0 and Italic_Text_Passed>=1) and (Emphasized_Text_Failed<=0 and Emphasized_Text_Passed>=1) and (Marked_Text_Failed<=0 and Marked_Text_Passed>=1) and (Subscript_Text_Failed<=0 and Subscript_Text_Passed>=1) and (Superscript_Text_Failed<=0 and Superscript_Text_Passed>=1)):
        print('Pass: Re. Webpage Text has Proper Text Pattern')
        Frame17=Frame(main_fm, bg='white', width=500, height=20)
        Frame17.place(x=10, y=480, width=500, height=20)
        Lable17= Label(Frame17, text='(Req15.) Text should have Proper Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=130, height=25)
        Framee17.place(x=525, y=480, width=130, height=25)
        Lablee17=Label(Framee17, text=TextPattern_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=20)
        Frameee17.place(x=675, y=480, width=480, height=20)
        Lableee17= Label(Frameee17, text='Webpage Text has Proper Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee17.place(x=1175, y=480, width=130, height=20)
        Lableeee17=Label(Frameeee17, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1325, y=480, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=TextPattern_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee17.place(x=1425, y=480, width=210, height=20)
        Lableeeeee17=Label(Frameeeeee17, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee17.place(x=1655, y=480, width=230, height=20)
        Lableeeeeee17=Label(Frameeeeeee17, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
      elif ((Bold_Text_Failed>0) or (Strong_Text_Failed>0) or (Italic_Text_Failed>0) or (Emphasized_Text_Failed>0) or (Marked_Text_Failed>0) or (Subscript_Text_Failed>0) or (Superscript_Text_Failed>0)):
        print('Failed: Re. Webpage Text has no Proper Text Pattern')
        Frame17=Frame(main_fm, bg='white', width=500, height=20)
        Frame17.place(x=10, y=480, width=500, height=20)
        Lable17= Label(Frame17, text='(Req15.) Text should have Proper Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=130, height=25)
        Framee17.place(x=525, y=480, width=130, height=25)
        Lablee17=Label(Framee17, text=TextPattern_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=20)
        Frameee17.place(x=675, y=480, width=480, height=20)
        Lableee17= Label(Frameee17, text='Webpage Text has no Proper Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee17.place(x=1175, y=480, width=130, height=20)
        Lableeee17=Label(Frameeee17, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1325, y=480, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=TextPattern_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee17.place(x=1425, y=480, width=210, height=20)
        Lableeeeee17=Label(Frameeeeee17, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee17.place(x=1655, y=480, width=230, height=20)
        Lableeeeeee17=Label(Frameeeeeee17, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage Content should have Proper Text Pattern')
        Frame17=Frame(main_fm, bg='white', width=500, height=20)
        Frame17.place(x=10, y=480, width=500, height=20)
        Lable17= Label(Frame17, text='(Req15.) Text should have Proper Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable17.grid(row=0, column=0)
        Framee17=Frame(main_fm, bg='white', width=130, height=25)
        Framee17.place(x=525, y=480, width=130, height=25)
        Lablee17=Label(Framee17, text=TextPattern_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee17.grid(row=0, column=0)
        Frameee17=Frame(main_fm, bg='white', width=480, height=20)
        Frameee17.place(x=675, y=480, width=480, height=20)
        Lableee17= Label(Frameee17, text='Webpage has no Textual Content to Check Text Pattern', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee17.grid(row=0, column=0)
        Frameeee17=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee17.place(x=1175, y=480, width=130, height=20)
        Lableeee17=Label(Frameeee17, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee17.grid(row=0, column=0)
        Frameeeee17=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee17.place(x=1325, y=480, width=80, height=25)
        Lableeeee17=Label(Frameeeee17, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee17.grid(row=0, column=0)
        Frameeeeee17=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee17.place(x=1425, y=480, width=210, height=20)
        Lableeeeee17=Label(Frameeeeee17, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee17.grid(row=0, column=0)
        Frameeeeeee17=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee17.place(x=1655, y=480, width=230, height=20)
        Lableeeeeee17=Label(Frameeeeeee17, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee17.grid(row=0, column=0)


      if((Bold_Text_Failed<=0 and Bold_Text_Passed>=1) and (Strong_Text_Failed<=0 and Strong_Text_Passed>=1) and (Italic_Text_Failed<=0 and Italic_Text_Passed>=1) and (Emphasized_Text_Failed<=0 and Emphasized_Text_Passed>=1) and (Marked_Text_Failed<=0 and Marked_Text_Passed>=1) and (Subscript_Text_Failed<=0 and Subscript_Text_Passed>=1) and (Superscript_Text_Failed<=0 and Superscript_Text_Passed>=1)):
        print('Pass: Re. Webpage Paragraph and Heading Text has Defined Proper Fontsize')
        Pcounter15=1; Fcounter15=0; NDcounter15=0; NTcounter15=0
      
        PVisionImpairment15=1; FVisionImpairment15=0; NTVisionImpairment15=0; NDVisionImpairment15=0   
        PHearingDifficulty15=0; FHearingDifficulty15=0; NTHearingDifficulty15=0; NDHearingDifficulty15=0  
        PCognitiveDisability15=1; FCognitiveDisability15=0; NTCognitiveDisability15=0; NDCognitiveDisability15=0
        PMotionDisability15=0; FMotionDisability15=0; NTMotionDisability15=0; NDMotionDisability15=0
        PLearningDisability15=0; FLearningDisability15=0; NTLearningDisability15=0; NDLearningDisability15=0
      
      elif((Bold_Text_Failed>0) or (Strong_Text_Failed>0) or (Italic_Text_Failed>0) or (Emphasized_Text_Failed>0) or (Marked_Text_Failed>0) or (Subscript_Text_Failed>0) or (Superscript_Text_Failed>0)):
        print('Failed: Re. Webpage Paragraph and Heading Text has no Defined Proper Fontsize')
        Fcounter15=1; Pcounter15=0; NDcounter15=0; NTcounter15=0

        FVisionImpairment15=1; PVisionImpairment15=0; NTVisionImpairment15=0; NDVisionImpairment15=0   
        FHearingDifficulty15=0; PHearingDifficulty15=0; NTHearingDifficulty15=0; NDHearingDifficulty15=0  
        FCognitiveDisability15=1; PCognitiveDisability15=0; NTCognitiveDisability15=0; NDCognitiveDisability15=0
        FMotionDisability15=0; PMotionDisability15=0; NTMotionDisability15=0; NDMotionDisability15=0
        FLearningDisability15=0; PLearningDisability15=0; NTLearningDisability15=0; NDLearningDisability15=0
      else:
        print('Not Detected: Re. Webpage has no Paragraph or Headings to check Defined Proper Fontsize')
        NDcounter15=1; Pcounter15=0; Fcounter15=0; NTcounter15=0

        NDVisionImpairment15=1; PVisionImpairment15=0; FVisionImpairment15=0; NTVisionImpairment15=0   
        NDHearingDifficulty15=0; PHearingDifficulty15=0; FHearingDifficulty15=0; NTHearingDifficulty15=0  
        NDCognitiveDisability15=1; PCognitiveDisability15=0; FCognitiveDisability15=0; NTCognitiveDisability15=0
        NDMotionDisability15=0; PMotionDisability15=0; FMotionDisability15=0; NTMotionDisability15=0
        NDLearningDisability15=0; PLearningDisability15=0; FLearningDisability15=0; NTLearningDisability15=0



      ####---------------------------------------------------------###

      global TextImgVideo_totalCount

      content_Type_Object=1  

      counter=0
      Text_Passed=0
      TextulaContent=soup.find_all('p')        
      for item in TextulaContent:
        if (item != []):
          counter+=1
          Text_Passed=counter
      print('Webpage have Textual Content:', Text_Passed)

      counter=0
      Text_Failed=0
      TextulaContent=soup.find_all('p')        
      for item in TextulaContent:
        if (item == []):
          counter+=1
          Text_Failed=counter
      print('Webpage have no Textual Content:', Text_Failed)

      counter=0
      Image_Passed=0
      ImageContent=soup.find_all('img')        
      for item in ImageContent:
        if (item != []):
          counter+=1
          Image_Passed=counter
      print('Webpage have Image Content:', Image_Passed)

      counter=0
      Image_Failed=0
      ImageContent=soup.find_all('img')        
      for item in ImageContent:
        if (item == []):
          counter+=1
          Image_Failed=counter
      print('Webpage have no Image Content:', Image_Failed)

      counter=0
      Video_Passed=0
      VideoContent=soup.find_all('video')        
      for item in VideoContent:
        if (item != []):
          counter+=1
          Video_Passed=counter
      print('Webpage have Video Content:', Video_Passed)

      counter=0
      Video_Failed=0
      VideoContent=soup.find_all('video')        
      for item in VideoContent:
        if (item == []):
          counter+=1
          Video_Failed=counter
      print('Webpage have no Video Content:', Video_Failed)

      TextImgVideo_totalCount=Text_Passed+Text_Failed+Image_Passed+Image_Failed+Video_Passed+Video_Failed
      print('Total Number of Guideline Checked for Text/Image/Video', TextImgVideo_totalCount)

      TextImgVideo_totalCount_Passed=Text_Passed+Image_Passed+Video_Passed
      print('Total Number of Guideline Passed for Text/Image/Video', TextImgVideo_totalCount_Passed)

      TextImgVideo_totalCount_Failed=Text_Failed+Image_Failed+Video_Failed
      print('Total Number of Guideline Failed for Text/Image/Video', TextImgVideo_totalCount_Failed)


      if((Text_Failed<=0 and Text_Passed>=1) and (Image_Failed<=0 and Image_Passed>=1) and (Video_Failed<=0 and Video_Passed>=1)):
        print('Pass: Re. Webpage have Text, Image and Video Content')
        Frame18=Frame(main_fm, bg='white', width=500, height=20)
        Frame18.place(x=10, y=505, width=500, height=20)
        Lable18= Label(Frame18, text='(Req16.) Webpage should have Text,Image, Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0)
        Framee18=Frame(main_fm, bg='white', width=130, height=25)
        Framee18.place(x=525, y=505, width=130, height=25)
        Lablee18=Label(Framee18, text=TextImgVideo_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=20)
        Frameee18.place(x=675, y=505, width=480, height=20)
        Lableee18= Label(Frameee18, text='Webpage have Text, Image and Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0)
        Frameeee18=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee18.place(x=1175, y=505, width=130, height=20)
        Lableeee18=Label(Frameeee18, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee18.grid(row=0, column=0)
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1325, y=505, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=TextImgVideo_totalCount_Passed, fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee18.place(x=1425, y=505, width=210, height=20)
        Lableeeeee18=Label(Frameeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee18.place(x=1655, y=505, width=230, height=20)
        Lableeeeeee18=Label(Frameeeeeee18, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)
      elif((Text_Failed>0) or (Image_Failed>0) or (Video_Failed>0)):
        print('Failed: Re. Webpage have Missing Text/Image/Video Content')
        Frame18=Frame(main_fm, bg='white', width=500, height=20)
        Frame18.place(x=10, y=505, width=500, height=20)
        Lable18= Label(Frame18, text='(Req16.) Webpage should have Text, Image, Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0)
        Framee18=Frame(main_fm, bg='white', width=130, height=25)
        Framee18.place(x=525, y=505, width=130, height=25)
        Lablee18=Label(Framee18, text=TextImgVideo_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=20)
        Frameee18.place(x=675, y=505, width=480, height=20)
        Lableee18= Label(Frameee18, text='Webpage have Missing Text/Image/Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0)
        Frameeee18=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee18.place(x=1175, y=505, width=130, height=20)
        Lableeee18=Label(Frameeee18, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee18.grid(row=0, column=0)
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1325, y=505, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=TextImgVideo_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee18.place(x=1425, y=505, width=210, height=20)
        Lableeeeee18=Label(Frameeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee18.place(x=1655, y=505, width=230, height=20)
        Lableeeeeee18=Label(Frameeeeeee18, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Webpage have Missing Text/Image/Video Content')
        Frame18=Frame(main_fm, bg='white', width=500, height=20)
        Frame18.place(x=10, y=505, width=500, height=20)
        Lable18= Label(Frame18, text='(Req16.) Webpage should have Text, Image, Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable18.grid(row=0, column=0)
        Framee18=Frame(main_fm, bg='white', width=130, height=25)
        Framee18.place(x=525, y=505, width=130, height=25)
        Lablee18=Label(Framee18, text=TextImgVideo_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee18.grid(row=0, column=0)
        Frameee18=Frame(main_fm, bg='white', width=480, height=20)
        Frameee18.place(x=675, y=505, width=480, height=20)
        Lableee18= Label(Frameee18, text='Webpage have Missing Text/Image/Video', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee18.grid(row=0, column=0)
        Frameeee18=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee18.place(x=1175, y=505, width=130, height=20)
        Lableeee18=Label(Frameeee18, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee18.grid(row=0, column=0)
        Frameeeee18=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee18.place(x=1325, y=505, width=80, height=25)
        Lableeeee18=Label(Frameeeee18, text=TextImgVideo_totalCount_Failed, fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee18.grid(row=0, column=0)
        Frameeeeee18=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee18.place(x=1425, y=505, width=210, height=20)
        Lableeeeee18=Label(Frameeeeee18, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee18.grid(row=0, column=0)
        Frameeeeeee18=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee18.place(x=1655, y=505, width=230, height=20)
        Lableeeeeee18=Label(Frameeeeeee18, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee18.grid(row=0, column=0)


      if((Text_Failed<=0 and Text_Passed>=1) and (Image_Failed<=0 and Image_Passed>=1) and (Video_Failed<=0 and Video_Passed>=1)):
        print('Pass: Re. Webpage have Text/Image/Video Content')
        Pcounter16=1; Fcounter16=0; NDcounter16=0; NTcounter16=0
      
        PVisionImpairment16=1; FVisionImpairment16=0; NTVisionImpairment16=0; NDVisionImpairment16=0   
        PHearingDifficulty16=0; FHearingDifficulty16=0; NTHearingDifficulty16=0; NDHearingDifficulty16=0  
        PCognitiveDisability16=1; FCognitiveDisability16=0; NTCognitiveDisability16=0; NDCognitiveDisability16=0
        PMotionDisability16=0; FMotionDisability16=0; NTMotionDisability16=0; NDMotionDisability16=0
        PLearningDisability16=0; FLearningDisability16=0; NTLearningDisability16=0; NDLearningDisability16=0

      elif((Text_Failed>0) or (Image_Failed>0) or (Video_Failed>0)):
        print('Failed: Re. Webpage have Missing Text/Image/Video Content')
        Fcounter16=1; Pcounter16=0; NDcounter16=0; NTcounter16=0

        FVisionImpairment16=1; PVisionImpairment16=0; NTVisionImpairment16=0; NDVisionImpairment16=0   
        FHearingDifficulty16=0; PHearingDifficulty16=0; NTHearingDifficulty16=0; NDHearingDifficulty16=0  
        FCognitiveDisability16=1; PCognitiveDisability16=0; NTCognitiveDisability16=0; NDCognitiveDisability16=0
        FMotionDisability16=0; PMotionDisability16=0; NTMotionDisability16=0; NDMotionDisability16=0
        FLearningDisability16=0; PLearningDisability16=0; NTLearningDisability16=0; NDLearningDisability16=0

      else:
        print('Not Detected: Re. Webpage have Missing Text/Image/Video Content')
        NDcounter16=1; Pcounter16=0; Fcounter16=0; NTcounter16=0

        NDVisionImpairment16=1; PVisionImpairment16=0; FVisionImpairment16=0; NTVisionImpairment16=0   
        NDHearingDifficulty16=0; PHearingDifficulty16=0; FHearingDifficulty16=0; NTHearingDifficulty16=0  
        NDCognitiveDisability16=1; PCognitiveDisability16=0; FCognitiveDisability16=0; NTCognitiveDisability16=0
        NDMotionDisability16=0; PMotionDisability16=0; FMotionDisability16=0; NTMotionDisability16=0
        NDLearningDisability16=0; PLearningDisability16=0; FLearningDisability16=0; NTLearningDisability16=0


      #####---------------------------------------------------------------####

      counter=0
      Audio_Passed=0
      AudioContent=soup.find_all('audio')        
      for item in AudioContent:
        if (item != []):
          counter+=1
          Audio_Passed=counter
      print('Webpage have Audio Content:', Audio_Passed)


      Audio_totalCount=Audio_Passed
      print('Total Number of Guideline Checked for Audio', Audio_totalCount)

      if(Audio_Passed >=1 and Audio_Passed <=2):
        print('Pass: Re. Number of Audio should be Accessible')
        Frame19=Frame(main_fm, bg='white', width=500, height=20)
        Frame19.place(x=10, y=530, width=500, height=20)
        Lable19= Label(Frame19, text='(Req17.) Number of Audio should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0)
        Framee19=Frame(main_fm, bg='white', width=130, height=25)
        Framee19.place(x=525, y=530, width=130, height=25)
        Lablee19=Label(Framee19, text=Audio_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=20)
        Frameee19.place(x=675, y=530, width=480, height=20)
        Lableee19= Label(Frameee19, text='Number of Audio Content is Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0)
        Frameeee19=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee19.place(x=1175, y=530, width=130, height=20)
        Lableeee19=Label(Frameeee19, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee19.grid(row=0, column=0)
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1325, y=530, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text='>=1 to <=2', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee19.place(x=1425, y=530, width=210, height=20)
        Lableeeeee19=Label(Frameeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee19.place(x=1655, y=530, width=230, height=20)
        Lableeeeeee19=Label(Frameeeeeee19, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)
      elif(Audio_Passed >2):
        print('Failed: Re. Number of Audio should be Accessible')
        Frame19=Frame(main_fm, bg='white', width=500, height=20)
        Frame19.place(x=10, y=530, width=500, height=20)
        Lable19= Label(Frame19, text='(Req17.) Number of Audio should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0)
        Framee19=Frame(main_fm, bg='white', width=130, height=25)
        Framee19.place(x=525, y=530, width=130, height=25)
        Lablee19=Label(Framee19, text=Audio_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=20)
        Frameee19.place(x=675, y=530, width=480, height=20)
        Lableee19= Label(Frameee19, text='Number of Audio Content is not Accptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0)
        Frameeee19=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee19.place(x=1175, y=530, width=130, height=20)
        Lableeee19=Label(Frameeee19, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee19.grid(row=0, column=0)
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1325, y=530, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text='>2', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee19.place(x=1425, y=530, width=210, height=20)
        Lableeeeee19=Label(Frameeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee19.place(x=1655, y=530, width=230, height=20)
        Lableeeeeee19=Label(Frameeeeeee19, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Number of Audio should be Accessible')
        Frame19=Frame(main_fm, bg='white', width=500, height=20)
        Frame19.place(x=10, y=530, width=500, height=20)
        Lable19= Label(Frame19, text='(Req17.) Number of Audio should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable19.grid(row=0, column=0)
        Framee19=Frame(main_fm, bg='white', width=130, height=25)
        Framee19.place(x=525, y=530, width=130, height=25)
        Lablee19=Label(Framee19, text=Audio_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee19.grid(row=0, column=0)
        Frameee19=Frame(main_fm, bg='white', width=480, height=20)
        Frameee19.place(x=675, y=530, width=480, height=20)
        Lableee19= Label(Frameee19, text='Webpage has no Audio Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee19.grid(row=0, column=0)
        Frameeee19=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee19.place(x=1175, y=530, width=130, height=20)
        Lableeee19=Label(Frameeee19, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee19.grid(row=0, column=0)
        Frameeeee19=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee19.place(x=1325, y=530, width=80, height=25)
        Lableeeee19=Label(Frameeeee19, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee19.grid(row=0, column=0)
        Frameeeeee19=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee19.place(x=1425, y=530, width=210, height=20)
        Lableeeeee19=Label(Frameeeeee19, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee19.grid(row=0, column=0)
        Frameeeeeee19=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee19.place(x=1655, y=530, width=230, height=20)
        Lableeeeeee19=Label(Frameeeeeee19, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee19.grid(row=0, column=0)


      if(Audio_Passed >=1 and Audio_Passed <=2):
        print('Pass: Re. Number of Audio Content are Accptable')
        Pcounter17=1; Fcounter17=0; NDcounter17=0; NTcounter17=0
      
        PVisionImpairment17=1; FVisionImpairment17=0; NTVisionImpairment17=0; NDVisionImpairment17=0   
        PHearingDifficulty17=0; FHearingDifficulty17=0; NTHearingDifficulty17=0; NDHearingDifficulty17=0  
        PCognitiveDisability17=1; FCognitiveDisability17=0; NTCognitiveDisability17=0; NDCognitiveDisability17=0
        PMotionDisability17=0; FMotionDisability17=0; NTMotionDisability17=0; NDMotionDisability17=0
        PLearningDisability17=0; FLearningDisability17=0; NTLearningDisability17=0; NDLearningDisability17=0

      elif(Audio_Passed >2):
        print('Failed: Re. Number of Audio Content are not Accptable')
        Fcounter17=1; Pcounter17=0; NDcounter17=0; NTcounter17=0

        FVisionImpairment17=1; PVisionImpairment17=0; NTVisionImpairment17=0; NDVisionImpairment17=0   
        FHearingDifficulty17=0; PHearingDifficulty17=0; NTHearingDifficulty17=0; NDHearingDifficulty17=0  
        FCognitiveDisability17=1; PCognitiveDisability17=0; NTCognitiveDisability17=0; NDCognitiveDisability17=0
        FMotionDisability17=0; PMotionDisability17=0; NTMotionDisability17=0; NDMotionDisability17=0
        FLearningDisability17=0; PLearningDisability17=0; NTLearningDisability17=0; NDLearningDisability17=0

      else:
        print('Not Detected: Re. Webpage has no Audio Content')
        NDcounter17=1; Pcounter17=0; Fcounter17=0; NTcounter17=0

        NDVisionImpairment17=1; PVisionImpairment17=0; FVisionImpairment17=0; NTVisionImpairment17=0   
        NDHearingDifficulty17=0; PHearingDifficulty17=0; FHearingDifficulty17=0; NTHearingDifficulty17=0  
        NDCognitiveDisability17=1; PCognitiveDisability17=0; FCognitiveDisability17=0; NTCognitiveDisability17=0
        NDMotionDisability17=0; PMotionDisability17=0; FMotionDisability17=0; NTMotionDisability17=0
        NDLearningDisability17=0; PLearningDisability17=0; FLearningDisability17=0; NTLearningDisability17=0



      #####---------------------------------------------------------------####

      counter=0
      Video_Passed=0
      VideoContent=soup.find_all('video')        
      for item in VideoContent:
        if (item != []):
          counter+=1
          Video_Passed=counter
      print('Webpage have Video Content:', Video_Passed)


      Video_totalCount=Video_Passed
      print('Total Number of Guideline Checked for Video', Video_totalCount)

      if(Video_Passed >=1 and Video_Passed <=2):
        print('Pass: Re. Number of Video should be Accessible')
        Frame20=Frame(main_fm, bg='white', width=500, height=20)
        Frame20.place(x=10, y=555, width=500, height=20)
        Lable20= Label(Frame20, text='(Req18.) Number of Video should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0)
        Framee20=Frame(main_fm, bg='white', width=130, height=25)
        Framee20.place(x=525, y=555, width=130, height=25)
        Lablee20=Label(Framee20, text=Video_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=20)
        Frameee20.place(x=675, y=555, width=480, height=20)
        Lableee20= Label(Frameee20, text='Number of Video Content is Accptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0)
        Frameeee20=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee20.place(x=1175, y=555, width=130, height=20)
        Lableeee20=Label(Frameeee20, text='PASSED', fg='green', bg='white',font=("Arial", 11, 'bold'))
        Lableeee20.grid(row=0, column=0)
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1325, y=555, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text='>=1 to <=2', fg='green',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0)
        Frameeeeee20=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee20.place(x=1425, y=555, width=210, height=20)
        Lableeeeee20=Label(Frameeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee20.place(x=1655, y=555, width=230, height=20)
        Lableeeeeee20=Label(Frameeeeeee20, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)
      elif(Video_Passed >2):
        print('Failed: Re. Number of Video should be Accessible')
        Frame20=Frame(main_fm, bg='white', width=500, height=20)
        Frame20.place(x=10, y=555, width=500, height=20)
        Lable20= Label(Frame20, text='(Req18.) Number of Video should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0)
        Framee20=Frame(main_fm, bg='white', width=130, height=25)
        Framee20.place(x=525, y=555, width=130, height=25)
        Lablee20=Label(Framee20, text=Video_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=20)
        Frameee20.place(x=675, y=555, width=480, height=20)
        Lableee20= Label(Frameee20, text='Number of Video Content is not Acceptable', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0)
        Frameeee20=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee20.place(x=1175, y=555, width=130, height=20)
        Lableeee20=Label(Frameeee20, text='FAILED', fg='red', bg='white',font=("Arial", 11, 'bold'))
        Lableeee20.grid(row=0, column=0)
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1325, y=555, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text='>2', fg='red',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0)
        Frameeeeee20=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee20.place(x=1425, y=555, width=210, height=20)
        Lableeeeee20=Label(Frameeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee20.place(x=1655, y=555, width=230, height=20)
        Lableeeeeee20=Label(Frameeeeeee20, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)
      else:
        print('Not Detected: Re. Number of Video should be Accessible')
        Frame20=Frame(main_fm, bg='white', width=500, height=20)
        Frame20.place(x=10, y=555, width=500, height=20)
        Lable20= Label(Frame20, text='(Req18.) Number of Video should be Accessible', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lable20.grid(row=0, column=0)
        Framee20=Frame(main_fm, bg='white', width=130, height=25)
        Framee20.place(x=525, y=555, width=130, height=25)
        Lablee20=Label(Framee20, text=Video_totalCount, fg='black',bg='white', font=("Arial", 11, 'bold'))
        Lablee20.grid(row=0, column=0)
        Frameee20=Frame(main_fm, bg='white', width=480, height=20)
        Frameee20.place(x=675, y=555, width=480, height=20)
        Lableee20= Label(Frameee20, text='Webpage has no Video Content', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableee20.grid(row=0, column=0)
        Frameeee20=Frame(main_fm, bg='white', width=130, height=20)
        Frameeee20.place(x=1175, y=555, width=130, height=20)
        Lableeee20=Label(Frameeee20, text='NOT DETECTED', fg='goldenrod', bg='white',font=("Arial", 11, 'bold'))
        Lableeee20.grid(row=0, column=0)
        Frameeeee20=Frame(main_fm, bg='white', width=80, height=25)
        Frameeeee20.place(x=1325, y=555, width=80, height=25)
        Lableeeee20=Label(Frameeeee20, text=0, fg='goldenrod',bg='white', font=("Arial", 11, 'bold'))
        Lableeeee20.grid(row=0, column=0)
        Frameeeeee20=Frame(main_fm, bg='white', width=210, height=20)
        Frameeeeee20.place(x=1425, y=555, width=210, height=20)
        Lableeeeee20=Label(Frameeeeee20, text='Vision/Cognitive Problem', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeee20.grid(row=0, column=0)
        Frameeeeeee20=Frame(main_fm, bg='white', width=230, height=20)
        Frameeeeeee20.place(x=1655, y=555, width=230, height=20)
        Lableeeeeee20=Label(Frameeeeeee20, text='Verified', fg='black', bg='white',font=("Arial", 11, 'bold'))
        Lableeeeeee20.grid(row=0, column=0)


      if(Video_Passed >=1 and Video_Passed <=2):
        print('Pass: Re. Number of Video Content are Accptable')
        Pcounter18=1; Fcounter18=0; NDcounter18=0; NTcounter18=0
      
        PVisionImpairment18=1; FVisionImpairment18=0; NTVisionImpairment18=0; NDVisionImpairment18=0   
        PHearingDifficulty18=0; FHearingDifficulty18=0; NTHearingDifficulty18=0; NDHearingDifficulty18=0  
        PCognitiveDisability18=1; FCognitiveDisability18=0; NTCognitiveDisability18=0; NDCognitiveDisability18=0
        PMotionDisability18=0; FMotionDisability18=0; NTMotionDisability18=0; NDMotionDisability18=0
        PLearningDisability18=0; FLearningDisability18=0; NTLearningDisability18=0; NDLearningDisability18=0

      elif(Video_Passed >2):
        print('Failed: Re. Number of Video Content are not Accptable')
        Fcounter18=1; Pcounter18=0; NDcounter18=0; NTcounter18=0

        FVisionImpairment18=1; PVisionImpairment18=0; NTVisionImpairment18=0; NDVisionImpairment18=0   
        FHearingDifficulty18=0; PHearingDifficulty18=0; NTHearingDifficulty18=0; NDHearingDifficulty18=0  
        FCognitiveDisability18=1; PCognitiveDisability18=0; NTCognitiveDisability18=0; NDCognitiveDisability18=0
        FMotionDisability18=0; PMotionDisability18=0; NTMotionDisability18=0; NDMotionDisability18=0
        FLearningDisability18=0; PLearningDisability18=0; NTLearningDisability18=0; NDLearningDisability18=0

      else:
        print('Not Detected: Re. Webpage has no Video Content')
        NDcounter18=1; Pcounter18=0; Fcounter18=0; NTcounter18=0

        NDVisionImpairment18=1; PVisionImpairment18=0; FVisionImpairment18=0; NTVisionImpairment18=0   
        NDHearingDifficulty18=0; PHearingDifficulty18=0; FHearingDifficulty18=0; NTHearingDifficulty18=0  
        NDCognitiveDisability18=1; PCognitiveDisability18=0; FCognitiveDisability18=0; NTCognitiveDisability18=0
        NDMotionDisability18=0; PMotionDisability18=0; FMotionDisability18=0; NTMotionDisability18=0
        NDLearningDisability18=0; PLearningDisability18=0; FLearningDisability18=0; NTLearningDisability18=0




      global userRequirementsObjects
      
      userRequirementsObjects= loading_time_Object+page_length_Object+CAPTCHA_Object+multiLanguage_Object+text_Resize_Option_Object+color_Changing_Option+font_Family_Object+font_Size_Object+text_Pattern_Object+content_Type_Object
      print('Totla Checked Objects for User Requirements:', userRequirementsObjects)


      global userRequirements_Pass
      global userRequirements_Fail
      global userRequirements_NotDetected
      global userRequirements_NotTested

      userRequirements_Pass=Pcounter1+Pcounter2+Pcounter3+Pcounter4+Pcounter5+Pcounter6+Pcounter7+Pcounter8+Pcounter9+Pcounter10+Pcounter11+Pcounter12+Pcounter13+Pcounter14+Pcounter15+Pcounter16+Pcounter17+Pcounter18
      print('The number of Guideline has Passed:', userRequirements_Pass)
      userRequirements_Fail=Fcounter1+Fcounter2+Fcounter3+Fcounter4+Fcounter5+Fcounter6+Fcounter7+Fcounter8+Fcounter9+Fcounter10+Fcounter11+Fcounter12+Fcounter13+Fcounter14+Fcounter15+Fcounter16+Fcounter17+Fcounter18
      print('The number of Guideline has Failed:', userRequirements_Fail)
      userRequirements_NotDetected= NDcounter1+NDcounter2+NDcounter3+NDcounter4+NDcounter5+NDcounter6+NDcounter7+NDcounter8+NDcounter9+NDcounter10+NDcounter11+NDcounter12+NDcounter13+NDcounter14+NDcounter15+NDcounter16+NDcounter17+NDcounter18
      print('The number of Guideline has Not Detected:', userRequirements_NotDetected)
      userRequirements_NotTested= NTcounter1+NTcounter2+NTcounter3+NTcounter4+NTcounter5+NTcounter6+NTcounter7+NTcounter8+NTcounter9+NTcounter10+NTcounter11+NTcounter12+NTcounter13+NTcounter14+NTcounter15+NTcounter16+NTcounter17+NTcounter18
      print('The number of has Not Tested:', userRequirements_NotTested)

      
      global userRequirements_PassCognitiveDisability
      global userRequirements_FailCognitiveDisability
      global userRequirements_NotDetectedCognitiveDisability
      global userRequirements_NotTestedCognitiveDisability

      userRequirements_PassCognitiveDisability=PCognitiveDisability1+PCognitiveDisability2+PCognitiveDisability3+PCognitiveDisability4+PCognitiveDisability5+PCognitiveDisability6+PCognitiveDisability7+PCognitiveDisability8+PCognitiveDisability9+PCognitiveDisability10+PCognitiveDisability11+PCognitiveDisability12+PCognitiveDisability13+PCognitiveDisability14+PCognitiveDisability15+PCognitiveDisability16+PCognitiveDisability17+PCognitiveDisability18
      print('The number of Guideline has Passed for Cognitive Disability:', userRequirements_PassCognitiveDisability)
      userRequirements_FailCognitiveDisability=FCognitiveDisability1+FCognitiveDisability2+FCognitiveDisability3+FCognitiveDisability4+FCognitiveDisability5+FCognitiveDisability6+FCognitiveDisability7+FCognitiveDisability8+FCognitiveDisability9+FCognitiveDisability10+FCognitiveDisability11+FCognitiveDisability12+FCognitiveDisability13+FCognitiveDisability14+FCognitiveDisability15+FCognitiveDisability16+FCognitiveDisability17+FCognitiveDisability18
      print('The number of Guideline has Failed for Cognitive Disability:', userRequirements_FailCognitiveDisability)
      userRequirements_NotDetectedCognitiveDisability= NDCognitiveDisability1+NDCognitiveDisability2+NDCognitiveDisability3+NDCognitiveDisability4+NDCognitiveDisability5+NDCognitiveDisability6+NDCognitiveDisability7+NDCognitiveDisability8+NDCognitiveDisability9+NDCognitiveDisability10+NDCognitiveDisability11+NDCognitiveDisability12+NDCognitiveDisability13+NDCognitiveDisability14+NDCognitiveDisability15+NDCognitiveDisability16+NDCognitiveDisability17+NDCognitiveDisability18
      print('The number of Guideline has Not Detected for Cognitive Disability:', userRequirements_NotDetectedCognitiveDisability)
      userRequirements_NotTestedCognitiveDisability= NTCognitiveDisability1+NTCognitiveDisability2+NTCognitiveDisability3+NTCognitiveDisability4+NTCognitiveDisability5+NTCognitiveDisability6+NTCognitiveDisability7+NTCognitiveDisability8+NTCognitiveDisability9+NTCognitiveDisability10+NTCognitiveDisability11+NTCognitiveDisability12+NTCognitiveDisability13+NTCognitiveDisability14+NTCognitiveDisability15+NTCognitiveDisability16+NTCognitiveDisability17+NTCognitiveDisability18
      print('The number of has Not Tested for Cognitive DIsability:', userRequirements_NotTestedCognitiveDisability)


      global userRequirements_PassVisionImpairment
      global userRequirements_FailVisionImpairment
      global userRequirements_NotDetectedVisionImpairment
      global userRequirements_NotTestedVisionImpairment

      userRequirements_PassVisionImpairment=PVisionImpairment1+PVisionImpairment2+PVisionImpairment3+PVisionImpairment4+PVisionImpairment5+PVisionImpairment6+PVisionImpairment7+PVisionImpairment8+PVisionImpairment9+PVisionImpairment10+PVisionImpairment11+PVisionImpairment12+PVisionImpairment13+PVisionImpairment14+PVisionImpairment15+PVisionImpairment16+PVisionImpairment17+PVisionImpairment18
      print('The number of Guideline has Passed for Vision Impairment:', userRequirements_PassVisionImpairment)
      userRequirements_FailVisionImpairment=FVisionImpairment1+FVisionImpairment2+FVisionImpairment3+FVisionImpairment4+FVisionImpairment5+FVisionImpairment6+FVisionImpairment7+FVisionImpairment8+FVisionImpairment9+FVisionImpairment10+FVisionImpairment11+FVisionImpairment12+FVisionImpairment13+FVisionImpairment14+FVisionImpairment15+FVisionImpairment16+FVisionImpairment17+FVisionImpairment18
      print('The number of Guideline has Failed for Vision Impairment:', userRequirements_FailVisionImpairment)
      userRequirements_NotDetectedVisionImpairment= NDVisionImpairment1+NDVisionImpairment2+NDVisionImpairment3+NDVisionImpairment4+NDVisionImpairment5+NDVisionImpairment6+NDVisionImpairment7+NDVisionImpairment8+NDVisionImpairment9+NDVisionImpairment10+NDVisionImpairment11+NDVisionImpairment12+NDVisionImpairment13+NDVisionImpairment14+NDVisionImpairment15+NDVisionImpairment16+NDVisionImpairment17+NDVisionImpairment18
      print('The number of Guideline has Not Detected for Vision Impairment:', userRequirements_NotDetectedVisionImpairment)
      userRequirements_NotTestedVisionImpairment= NTVisionImpairment1+NTVisionImpairment2+NTVisionImpairment3+NTVisionImpairment4+NTVisionImpairment5+NTVisionImpairment6+NTVisionImpairment7+NTVisionImpairment8+NTVisionImpairment9+NTVisionImpairment10+NTVisionImpairment11+NTVisionImpairment12+NTVisionImpairment13+NTVisionImpairment14+NTVisionImpairment15+NTVisionImpairment16+NTVisionImpairment17+NTVisionImpairment18
      print('The number of Guideline has Not Tested for Vision Impairment:', userRequirements_NotTestedVisionImpairment)


      global userRequirements_PassHearingDifficulty
      global userRequirements_FailHearingDifficulty
      global userRequirements_NotDetectedHearingDifficulty
      global userRequirements_NotTestedHearingDifficulty

      userRequirements_PassHearingDifficulty=PHearingDifficulty1+PHearingDifficulty2+PHearingDifficulty3+PHearingDifficulty4+PHearingDifficulty5+PHearingDifficulty6+PHearingDifficulty7+PHearingDifficulty8+PHearingDifficulty9+PHearingDifficulty10+PHearingDifficulty11+PHearingDifficulty12+PHearingDifficulty13+PHearingDifficulty14+PHearingDifficulty15+PHearingDifficulty16+PHearingDifficulty17+PHearingDifficulty18
      print('The number of Guideline has Passed for Hearing Difficulty:', userRequirements_PassHearingDifficulty)
      userRequirements_FailHearingDifficulty=FHearingDifficulty1+FHearingDifficulty2+FHearingDifficulty3+FHearingDifficulty4+FHearingDifficulty5+FHearingDifficulty6+FHearingDifficulty7+FHearingDifficulty8+FHearingDifficulty9+FHearingDifficulty10+FHearingDifficulty11+FHearingDifficulty12+FHearingDifficulty13+FHearingDifficulty14+FHearingDifficulty15+FHearingDifficulty16+FHearingDifficulty17+FHearingDifficulty18
      print('The number of Guideline has Failed for Hearing Difficulty:', userRequirements_FailHearingDifficulty)
      userRequirements_NotDetectedHearingDifficulty= NDHearingDifficulty1+NDHearingDifficulty2+NDHearingDifficulty3+NDHearingDifficulty4+NDHearingDifficulty5+NDHearingDifficulty6+NDHearingDifficulty7+NDHearingDifficulty8+NDHearingDifficulty9+NDHearingDifficulty10+NDHearingDifficulty11+NDHearingDifficulty12+NDHearingDifficulty13+NDHearingDifficulty14+NDHearingDifficulty15+NDHearingDifficulty16+NDHearingDifficulty17+NDHearingDifficulty18
      print('The number of Guideline has Not Detected for Hearing Difficulty:', userRequirements_NotDetectedHearingDifficulty)
      userRequirements_NotTestedHearingDifficulty= NTHearingDifficulty1+NTHearingDifficulty2+NTHearingDifficulty3+NTHearingDifficulty4+NTHearingDifficulty5+NTHearingDifficulty6+NTHearingDifficulty7+NTHearingDifficulty8+NTHearingDifficulty9+NTHearingDifficulty10+NTHearingDifficulty11+NTHearingDifficulty12+NTHearingDifficulty13+NTHearingDifficulty14+NTHearingDifficulty15+NTHearingDifficulty16+NTHearingDifficulty17+NTHearingDifficulty18
      print('The number of has Not Tested for Hearing Difficulty:', userRequirements_NotTestedHearingDifficulty)

      global userRequirements_PassMotionDisability
      global userRequirements_FailMotionDisability
      global userRequirements_NotDetectedMotionDisability
      global userRequirements_NotTestedMotionDisability

      userRequirements_PassMotionDisability=PMotionDisability1+PMotionDisability2+PMotionDisability3+PMotionDisability4+PMotionDisability5+PMotionDisability6+PMotionDisability7+PMotionDisability8+PMotionDisability9+PMotionDisability10+PMotionDisability11+PMotionDisability12+PMotionDisability13+PMotionDisability14+PMotionDisability15+PMotionDisability16+PMotionDisability17+PMotionDisability18
      print('The number of Guideline has Passed for Motion Disability:', userRequirements_PassMotionDisability)
      userRequirements_FailMotionDisability=FMotionDisability1+FMotionDisability2+FMotionDisability3+FMotionDisability4+FMotionDisability5+FMotionDisability6+FMotionDisability7+FMotionDisability8+FMotionDisability9+FMotionDisability10+FMotionDisability11+FMotionDisability12+FMotionDisability13+FMotionDisability14+FMotionDisability15+FMotionDisability16+FMotionDisability17+FMotionDisability18
      print('The number of Guideline has Failed for Motion Disability:', userRequirements_FailMotionDisability)
      userRequirements_NotDetectedMotionDisability= NDMotionDisability1+NDMotionDisability2+NDMotionDisability3+NDMotionDisability4+NDMotionDisability5+NDMotionDisability6+NDMotionDisability7+NDMotionDisability8+NDMotionDisability9+NDMotionDisability10+NDMotionDisability11+NDMotionDisability12+NDMotionDisability13+NDMotionDisability14+NDMotionDisability15+NDMotionDisability16+NDMotionDisability17+NDMotionDisability18
      print('The number of Guideline has Not Detected for Motion Disability:', userRequirements_NotDetectedMotionDisability)
      userRequirements_NotTestedMotionDisability= NTMotionDisability1+NTMotionDisability2+NTMotionDisability3+NTMotionDisability4+NTMotionDisability5+NTMotionDisability6+NTMotionDisability7+NTMotionDisability8+NTMotionDisability9+NTMotionDisability10+NTMotionDisability11+NTMotionDisability12+NTMotionDisability13+NTMotionDisability14+NTMotionDisability15+NTMotionDisability16+NTMotionDisability17+NTMotionDisability18
      print('The number of has Not Tested for Motion Disability:', userRequirements_NotTestedMotionDisability)

        
      global userRequirements_PassLearningDisability
      global userRequirements_FailLearningDisability
      global userRequirements_NotDetectedLearningDisability
      global userRequirements_NotTestedLearningDisability

      userRequirements_PassLearningDisability=PLearningDisability1+PLearningDisability2+PLearningDisability3+PLearningDisability4+PLearningDisability5+PLearningDisability6+PLearningDisability7+PLearningDisability8+PLearningDisability9+PLearningDisability10+PLearningDisability11+PLearningDisability12+PLearningDisability13+PLearningDisability14+PLearningDisability15+PLearningDisability16+PLearningDisability17+PLearningDisability18
      print('The number of Guideline has Passed for Learning Disability:', userRequirements_PassLearningDisability)
      userRequirements_FailLearningDisability=FLearningDisability1+FLearningDisability2+FLearningDisability3+FLearningDisability4+FLearningDisability5+FLearningDisability6+FLearningDisability7+FLearningDisability8+FLearningDisability9+FLearningDisability10+FLearningDisability11+FLearningDisability12+FLearningDisability13+FLearningDisability14+FLearningDisability15+FLearningDisability16+FLearningDisability17+FLearningDisability18
      print('The number of Guideline has Failed for Learning Disability:', userRequirements_FailLearningDisability)
      userRequirements_NotDetectedLearningDisability= NDLearningDisability1+NDLearningDisability2+NDLearningDisability3+NDLearningDisability4+NDLearningDisability5+NDLearningDisability6+NDLearningDisability7+NDLearningDisability8+NDLearningDisability9+NDLearningDisability10+NDLearningDisability11+NDLearningDisability12+NDLearningDisability13+NDLearningDisability14+NDLearningDisability15+NDLearningDisability16+NDLearningDisability17+NDLearningDisability18
      print('The number of Guideline has Not Detected for Learning Disability:', userRequirements_NotDetectedLearningDisability)
      userRequirements_NotTestedLearningDisability= NTLearningDisability1+NTLearningDisability2+NTLearningDisability3+NTLearningDisability4+NTLearningDisability5+NTLearningDisability6+NTLearningDisability7+NTLearningDisability8+NTLearningDisability9+NTLearningDisability10+NTLearningDisability11+NTLearningDisability12+NTLearningDisability13+NTLearningDisability14+NTLearningDisability15+NTLearningDisability16+NTLearningDisability17+NTLearningDisability18
      print('The number of has Not Tested for Learning Disability:', userRequirements_NotTestedLearningDisability)

      

      global TotalCheckedCognitiveDisability_userRequirements
      global TotalCheckedVisionImpairment_userRequirements
      global TotalCheckedHearingDifficulty_userRequirements
      global TotalCheckedMotionDisability_userRequirements
      global TotalCheckedLearningDisability_userRequirements

      TotalCheckedCognitiveDisability_userRequirements= userRequirements_PassCognitiveDisability+userRequirements_FailCognitiveDisability+userRequirements_NotDetectedCognitiveDisability+userRequirements_NotTestedCognitiveDisability
      
      TotalCheckedVisionImpairment_userRequirements= userRequirements_PassVisionImpairment+userRequirements_FailVisionImpairment+userRequirements_NotDetectedVisionImpairment+userRequirements_NotTestedVisionImpairment

      TotalCheckedHearingDifficulty_userRequirements=userRequirements_PassHearingDifficulty+userRequirements_FailHearingDifficulty+userRequirements_NotDetectedHearingDifficulty+userRequirements_NotTestedHearingDifficulty

      TotalCheckedMotionDisability_userRequirements= userRequirements_PassMotionDisability+userRequirements_FailMotionDisability+userRequirements_NotDetectedMotionDisability+userRequirements_NotTestedMotionDisability

      TotalCheckedLearningDisability_userRequirements=userRequirements_PassLearningDisability+userRequirements_FailLearningDisability+userRequirements_NotDetectedLearningDisability+userRequirements_NotTestedLearningDisability

      global userRequirement_HTML_Tag_Checked

      userRequirement_HTML_Tag_Checked= loading_time_totalCount+link_totalCount+language_totalCount+Label_totalCount+Div_totalCount+multiLanguage_totalCount+img_totalCount+paragraphTextFontFamily_totalCount+headingTextFontFamily_totalCount+TextPattern_totalCount+TextImgVideo_totalCount+Audio_totalCount+Video_totalCount
      print('HTML Tag Checked for User Requirements Aspects:', userRequirement_HTML_Tag_Checked)



    
    def summary_page():

      global TotalChecked_WCAG
      global TotalPassed_WCAG
      global TotalFailed_WCAG
      global TotalNotDetected_WCAG
      global TotalNotTested_WCAG
      global TotalLevelA
      global TotalLevelAA
      global TotalLevelAAA
      global TotalCheckedCognitiveDisability
      global TotalCheckedVisionImpairment
      global TotalCheckedHearingDifficulty
      global TotalCheckedMotionDisability
      global TotalCheckedLearningDisability
      global TotalLevelA
      global TotalLevelA_Passed
      global TotalLevelA_Failed
      global TotalLevelA_NotDetected
      global TotalLevelA_NotTested
      global TotalLevelAA
      global TotalLevelAA_Passed
      global TotalLevelAA_Failed
      global TotalLevelAA_NotDetected
      global TotalLevelAA_NotTested
      global TotalLevelAAA
      global TotalLevelAAA_Passed
      global TotalLevelAAA_Failed
      global TotalLevelAAA_NotDetected
      global TotalLevelAAA_NotTested

      global TotalCheckedCognitiveDisability_Passed
      global TotalCheckedVisionImpairment_Passed
      global TotalCheckedHearingDifficulty_Passed
      global TotalCheckedMotionDisability_Passed
      global TotalCheckedLearningDisability_Passed

      global TotalCheckedCognitiveDisability_Failed
      global TotalCheckedVisionImpairment_Failed
      global TotalCheckedHearingDifficulty_Failed
      global TotalCheckedMotionDisability_Failed
      global TotalCheckedLearningDisability_Failed

      global TotalCheckedCognitiveDisability_NotDetected
      global TotalCheckedVisionImpairment_NotDetected
      global TotalCheckedHearingDifficulty_NotDetected
      global TotalCheckedMotionDisability_NotDetected
      global TotalCheckedLearningDisability_NotDetected

      global TotalCheckedCognitiveDisability_NotTested
      global TotalCheckedVisionImpairment_NotTested
      global TotalCheckedHearingDifficulty_NotTested
      global TotalCheckedMotionDisability_NotTested
      global TotalCheckedLearningDisability_NotTested


      frame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=40) #highlightbackground="blue", highlightthickness=1
      frame1.pack(side=tk.LEFT,fill="both", expand=True)
      frame1.place(relx=0.0, rely=0.0)

      frame=tk.Frame (frame1, bg="white smoke", width=2000, height=35)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.30, rely=0.03)
      label = tk.Label(frame, text="Summary of the Accessibility Report of Evaluated Webpage",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()
      
      TotalChecked_WCAG= nonSemantics_Pass + Semantics_Pass+nonSemantics_Fail + Semantics_Fail+nonSemantics_NotDetected +Semantics_NotDetected+nonSemantics_NotTested+Semantics_NotTested
      print('Total Number of WCAG Success Criteria have Checked:', TotalChecked_WCAG)

      TotalPassed_WCAG= nonSemantics_Pass + Semantics_Pass
      print('Total Number of WCAG Success Criteria have Passed:', TotalPassed_WCAG)
      TotalFailed_WCAG= nonSemantics_Fail + Semantics_Fail
      print('Total Number of WCAG Success Criteria have Failed:', TotalFailed_WCAG)
      TotalNotDetected_WCAG= nonSemantics_NotDetected +Semantics_NotDetected
      print('Total Number of WCAG Success Criteria have Not Detected:', TotalNotDetected_WCAG)
      TotalNotTested_WCAG= nonSemantics_NotTested+Semantics_NotTested
      print('Total Number of WCAG Success Criteria have Not Tested:', TotalNotTested_WCAG)


      frame2=tk.Frame (main_fm, bg="white", width=4000, height=1000)
      frame2.pack(side=tk.LEFT,fill="both", expand=True)
      frame2.place(relx=0.0, rely=0.06)

      ####-----------Total------------###
      passed=Frame(frame2, bg='white', width=400, height=25) 
      passed.place(x=50, y=0.2, width=400, height=25)   
      passed=Label(passed, text='Total Number of Success Criteria have Checked:', fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      passed.grid(row=0, column=0)
      passed=Frame(frame2, bg='white', width=30, height=25) 
      passed.place(x=440, y=0.2, width=30, height=25)   
      passed=Label(passed, text=TotalChecked_WCAG, fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      passed.grid(row=0, column=0)

      ###--------Passed-------------###
      passed=Frame(frame2, bg='white', width=320, height=25) 
      passed.place(x=50, y=30, width=320, height=25)   
      passed=Label(passed, text='The number of Guidelines have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold')) 
      passed.grid(row=0, column=0)
      passed=Frame(frame2, bg='white', width=30, height=25) 
      passed.place(x=400, y=30, width=30, height=25)   
      passed=Label(passed, text=TotalPassed_WCAG, fg='green', bg='white',font=("Arial", 11, 'bold')) 
      passed.grid(row=0, column=0)


      ###---------Failed----------------###
      failed=Frame(frame2, bg='white', width=320, height=25) 
      failed.place(x=50, y=55, width=320, height=25)   
      failed=Label(failed, text='The number of Guidelines have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold')) 
      failed.grid(row=0, column=0)
      failed=Frame(frame2, bg='white', width=30, height=25) 
      failed.place(x=400, y=55, width=30, height=25)   
      failed=Label(failed, text=TotalFailed_WCAG, fg='red', bg='white',font=("Arial", 11, 'bold')) 
      failed.grid(row=0, column=0)

      ###-------------Not Detected---------------###
      notDetected=Frame(frame2, bg='white', width=330, height=25) 
      notDetected.place(x=50, y=80, width=330, height=25)   
      notDetected=Label(notDetected, text='The number of Guidelines have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetected.grid(row=0, column=0)
      notDetected=Frame(frame2, bg='white', width=30, height=25) 
      notDetected.place(x=400, y=80, width=30, height=25)   
      notDetected=Label(notDetected, text=TotalNotDetected_WCAG, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetected.grid(row=0, column=0)

      ###------------Not Tested-----------------###
      notTested=Frame(frame2, bg='white', width=330, height=25) 
      notTested.place(x=50, y=105, width=330, height=25)   
      notTested=Label(notTested, text='The number of Guidelines have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTested.grid(row=0, column=0)
      notTested=Frame(frame2, bg='white', width=30, height=25) 
      notTested.place(x=400, y=105, width=30, height=25)   
      notTested=Label(notTested, text=TotalNotTested_WCAG, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTested.grid(row=0, column=0)


      TotalLevelA= nonSemantics_PassLevelA + Semantics_PassLevelA+ nonSemantics_FailLevelA + Semantics_FailLevelA+ nonSemantics_NDLevelA + Semantics_NDLevelA+ nonSemantics_NTLevelA +Semantics_NTLevelA
      print('Total Number of Success Criteria have checked under Level A:', TotalLevelA)

      TotalLevelA_Passed= nonSemantics_PassLevelA + Semantics_PassLevelA
      print('Total Number of Success Criteria have Passed under Level A:', TotalLevelA_Passed)
      TotalLevelA_Failed= nonSemantics_FailLevelA + Semantics_FailLevelA
      print('Total Number of Success Criteria have Failed under Level A:', TotalLevelA_Failed)
      TotalLevelA_NotDetected= nonSemantics_NDLevelA + Semantics_NDLevelA 
      print('Total Number of Success Criteria have Not Detected under Level A:', TotalLevelA_NotDetected)
      TotalLevelA_NotTested= nonSemantics_NTLevelA + Semantics_NTLevelA
      print('Total Number of Success Criteria have Not Tested under Level A:', TotalLevelA_NotTested)

      ###------------Level A-----------------###
      totalLevelA=Frame(frame2, bg='white', width=450, height=25) 
      totalLevelA.place(x=50, y=140, width=450, height=25)   
      totalLevelA=Label(totalLevelA, text='Total Number of Success Criteria have checked under Level A:', fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelA.grid(row=0, column=0)
      totalLevelA=Frame(frame2, bg='white', width=30, height=25) 
      totalLevelA.place(x=510, y=140, width=30, height=25)   
      totalLevelA=Label(totalLevelA, text=TotalLevelA, fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelA.grid(row=0, column=0)

      ###------------Level A (pass)-----------------###
      passLevelA=Frame(frame2, bg='white', width=430, height=25) 
      passLevelA.place(x=50, y=170, width=430, height=25)   
      passLevelA=Label(passLevelA, text='The number of Guidelines under Level A have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelA.grid(row=0, column=0)
      passLevelA=Frame(frame2, bg='white', width=30, height=25) 
      passLevelA.place(x=500, y=170, width=30, height=25)   
      passLevelA=Label(passLevelA, text=TotalLevelA_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelA.grid(row=0, column=0)

      ###------------Level A (fail)-----------------###
      failLevelA=Frame(frame2, bg='white', width=430, height=25) 
      failLevelA.place(x=50, y=195, width=430, height=25)   
      failLevelA=Label(failLevelA, text='The number of Guidelines under Level A have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelA.grid(row=0, column=0)
      failLevelA=Frame(frame2, bg='white', width=30, height=25) 
      failLevelA.place(x=500, y=195, width=30, height=25)   
      failLevelA=Label(failLevelA, text=TotalLevelA_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelA.grid(row=0, column=0)

      ###------------Level A (not detected)-----------------###
      notDetectedLevelA=Frame(frame2, bg='white', width=430, height=25) 
      notDetectedLevelA.place(x=50, y=220, width=430, height=25)   
      notDetectedLevelA=Label(notDetectedLevelA, text='The number of Guidelines under Level A have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelA.grid(row=0, column=0)
      notDetectedLevelA=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedLevelA.place(x=500, y=220, width=30, height=25)   
      notDetectedLevelA=Label(notDetectedLevelA, text=TotalLevelA_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelA.grid(row=0, column=0)

       ###------------Level A (not tested)-----------------###
      notTestedLevelA=Frame(frame2, bg='white', width=430, height=25) 
      notTestedLevelA.place(x=50, y=245, width=430, height=25)   
      notTestedLevelA=Label(notTestedLevelA, text='The number of Guidelines under Level A have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelA.grid(row=0, column=0)
      notTestedLevelA=Frame(frame2, bg='white', width=30, height=25) 
      notTestedLevelA.place(x=500, y=245, width=30, height=25)   
      notTestedLevelA=Label(notTestedLevelA, text=TotalLevelA_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelA.grid(row=0, column=0)


      TotalLevelAA= nonSemantics_PassLevelAA + Semantics_PassLevelAA + nonSemantics_FailLevelAA + Semantics_FailLevelAA + nonSemantics_NDLevelAA + Semantics_NDLevelAA +nonSemantics_NTLevelAA + Semantics_NTLevelAA
      print('Total Number of Success Criteria under Level AA:', TotalLevelAA)

      TotalLevelAA_Passed= nonSemantics_PassLevelAA + Semantics_PassLevelAA
      print('Total Number of Success Criteria Passed under Level AA:', TotalLevelAA_Passed)
      TotalLevelAA_Failed= nonSemantics_FailLevelAA + Semantics_FailLevelAA 
      print('Total Number of Success Criteria Failed under Level AA:', TotalLevelAA_Failed)
      TotalLevelAA_NotDetected= nonSemantics_NDLevelAA + Semantics_NDLevelAA 
      print('Total Number of Success Criteria Not Detected under Level AA:', TotalLevelAA_NotDetected)
      TotalLevelAA_NotTested= nonSemantics_NTLevelAA + Semantics_NTLevelAA
      print('Total Number of Success Criteria Not Tested under Level AA:', TotalLevelAA_NotTested)


      ###------------Level AA-----------------###
      totalLevelAA=Frame(frame2, bg='white', width=470, height=25) 
      totalLevelAA.place(x=50, y=280, width=470, height=25)   
      totalLevelAA=Label(totalLevelAA, text='Total Number of Success Criteria have checked under Level AA:', fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelAA.grid(row=0, column=0)
      totalLevelAA=Frame(frame2, bg='white', width=30, height=25) 
      totalLevelAA.place(x=520, y=280, width=30, height=25)   
      totalLevelAA=Label(totalLevelAA, text=TotalLevelAA, fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelAA.grid(row=0, column=0)

      ###------------Level AA (pass)-----------------###
      passLevelAA=Frame(frame2, bg='white', width=440, height=25) 
      passLevelAA.place(x=50, y=310, width=440, height=25)   
      passLevelAA=Label(passLevelAA, text='The number of Guidelines under Level AA have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelAA.grid(row=0, column=0)
      passLevelAA=Frame(frame2, bg='white', width=30, height=25) 
      passLevelAA.place(x=510, y=310, width=30, height=25)   
      passLevelAA=Label(passLevelAA, text=TotalLevelAA_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelAA.grid(row=0, column=0)

      ###------------Level AA (fail)-----------------###
      failLevelAA=Frame(frame2, bg='white', width=440, height=25) 
      failLevelAA.place(x=50, y=335, width=440, height=25)   
      failLevelAA=Label(failLevelAA, text='The number of Guidelines under Level AA have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelAA.grid(row=0, column=0)
      failLevelAA=Frame(frame2, bg='white', width=30, height=25) 
      failLevelAA.place(x=510, y=335, width=30, height=25)   
      failLevelAA=Label(failLevelAA, text=TotalLevelAA_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelAA.grid(row=0, column=0)

       ###------------Level AA (not detected)-----------------###
      notDetectedLevelAA=Frame(frame2, bg='white', width=440, height=25) 
      notDetectedLevelAA.place(x=50, y=360, width=440, height=25)   
      notDetectedLevelAA=Label(notDetectedLevelAA, text='The number of Guidelines under Level AA have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelAA.grid(row=0, column=0)
      notDetectedLevelAA=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedLevelAA.place(x=510, y=360, width=30, height=25)   
      notDetectedLevelAA=Label(notDetectedLevelAA, text=TotalLevelAA_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelAA.grid(row=0, column=0)

      ###------------Level AA (not tested)-----------------###
      notTestedLevelAA=Frame(frame2, bg='white', width=440, height=25) 
      notTestedLevelAA.place(x=50, y=385, width=440, height=25)   
      notTestedLevelAA=Label(notTestedLevelAA, text='The number of Guidelines under Level AA have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelAA.grid(row=0, column=0)
      notTestedLevelAA=Frame(frame2, bg='white', width=30, height=25) 
      notTestedLevelAA.place(x=510, y=385, width=30, height=25)   
      notTestedLevelAA=Label(notTestedLevelAA, text=TotalLevelAA_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelAA.grid(row=0, column=0)


      TotalLevelAAA= nonSemantics_PassLevelAAA + Semantics_PassLevelAAA + nonSemantics_FailLevelAAA + Semantics_FailLevelAAA +nonSemantics_NTLevelAAA+Semantics_NTLevelAAA+nonSemantics_NDLevelAAA+Semantics_NDLevelAAA
      print('Total Number of Success Criteria under Level AAA:', TotalLevelAAA)

      TotalLevelAAA_Passed= nonSemantics_PassLevelAAA + Semantics_PassLevelAAA 
      print('Total Number of Success Criteria Passed under Level AAA:', TotalLevelAAA_Passed)
      TotalLevelAAA_Failed= nonSemantics_FailLevelAAA + Semantics_FailLevelAAA
      print('Total Number of Success Criteria Failed under Level AAA:', TotalLevelAAA_Failed)
      TotalLevelAAA_NotDetected= nonSemantics_NDLevelAAA+Semantics_NDLevelAAA
      print('Total Number of Success Criteria Not Detected under Level AAA:', TotalLevelAAA_NotDetected)
      TotalLevelAAA_NotTested= nonSemantics_NTLevelAAA+Semantics_NTLevelAAA
      print('Total Number of Success Criteria Not Tested under Level AAA:', TotalLevelAAA_NotTested)


      ###------------Level AAA-----------------###
      totalLevelAAA=Frame(frame2, bg='white', width=470, height=25) 
      totalLevelAAA.place(x=50, y=420, width=470, height=25)   
      totalLevelAAA=Label(totalLevelAAA, text='Total Number of Success Criteria have checked under Level AAA:', fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelAAA.grid(row=0, column=0)
      totalLevelAAA=Frame(frame2, bg='white', width=30, height=25) 
      totalLevelAAA.place(x=525, y=420, width=30, height=25)   
      totalLevelAAA=Label(totalLevelAAA, text=TotalLevelAAA, fg='blue', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      totalLevelAAA.grid(row=0, column=0)

      ###------------Level AAA (pass)-----------------###
      passLevelAAA=Frame(frame2, bg='white', width=450, height=25) 
      passLevelAAA.place(x=50, y=450, width=450, height=25)   
      passLevelAAA=Label(passLevelAAA, text='The number of Guidelines under Level AAA have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelAAA.grid(row=0, column=0)
      passLevelAAA=Frame(frame2, bg='white', width=30, height=25) 
      passLevelAAA.place(x=520, y=450, width=30, height=25)   
      passLevelAAA=Label(passLevelAAA, text=TotalLevelAAA_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passLevelAAA.grid(row=0, column=0)

      ###------------Level AAA (fail)-----------------###
      failLevelAAA=Frame(frame2, bg='white', width=450, height=25) 
      failLevelAAA.place(x=50, y=475, width=450, height=25)   
      failLevelAAA=Label(failLevelAAA, text='The number of Guidelines under Level AAA have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelAAA.grid(row=0, column=0)
      failLevelAAA=Frame(frame2, bg='white', width=30, height=25) 
      failLevelAAA.place(x=520, y=475, width=30, height=25)   
      failLevelAAA=Label(failLevelAAA, text=TotalLevelAAA_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failLevelAAA.grid(row=0, column=0)

      ###------------Level AAA (not detected)-----------------###
      notDetectedLevelAAA=Frame(frame2, bg='white', width=450, height=25) 
      notDetectedLevelAAA.place(x=50, y=500, width=450, height=25)   
      notDetectedLevelAAA=Label(notDetectedLevelAAA, text='The number of Guidelines under Level AAA have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelAAA.grid(row=0, column=0)
      notDetectedLevelAAA=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedLevelAAA.place(x=520, y=500, width=30, height=25)   
      notDetectedLevelAAA=Label(notDetectedLevelAAA, text=TotalLevelAAA_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLevelAAA.grid(row=0, column=0)

      ###------------Level AAA (not tested)-----------------###
      notTestedLevelAAA=Frame(frame2, bg='white', width=450, height=25) 
      notTestedLevelAAA.place(x=50, y=525, width=450, height=25)   
      notTestedLevelAAA=Label(notTestedLevelAAA, text='The number of Guidelines under Level AAA have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelAAA.grid(row=0, column=0)
      notTestedLevelAAA=Frame(frame2, bg='white', width=30, height=25) 
      notTestedLevelAAA.place(x=520, y=525, width=30, height=25)   
      notTestedLevelAAA=Label(notTestedLevelAAA, text=TotalLevelAAA_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLevelAAA.grid(row=0, column=0)

      global Semantics_Pass_total
      global Semantics_Fail_total
      global Semantics_ND_total
      global Semantics_NT_total
      global Semantics_Checked_total

      Semantics_Pass_total=Semantics_PassLevelA+Semantics_PassLevelAA+Semantics_PassLevelAAA

      Semantics_Fail_total=Semantics_FailLevelA+Semantics_FailLevelAA+Semantics_FailLevelAAA

      Semantics_ND_total=Semantics_NDLevelA+Semantics_NDLevelAA+Semantics_NDLevelAAA

      Semantics_NT_total=Semantics_NTLevelA+Semantics_NTLevelAA+Semantics_NTLevelAAA

      Semantics_Checked_total=Semantics_Pass_total+Semantics_Fail_total+Semantics_ND_total+Semantics_NT_total


      global nonSemantics_Pass_total
      global nonSemantics_Fail_total
      global nonSemantics_ND_total
      global nonSemantics_NT_total
      global nonSemantics_Checked_total

      nonSemantics_Pass_total=nonSemantics_PassLevelA+nonSemantics_PassLevelAA+nonSemantics_PassLevelAAA

      nonSemantics_Fail_total=nonSemantics_FailLevelA+nonSemantics_FailLevelAA+nonSemantics_FailLevelAAA

      nonSemantics_ND_total=nonSemantics_NDLevelA+nonSemantics_NDLevelAA+nonSemantics_NDLevelAAA

      nonSemantics_NT_total=nonSemantics_NTLevelA+nonSemantics_NTLevelAA+nonSemantics_NTLevelAAA

      nonSemantics_Checked_total=nonSemantics_Pass_total+nonSemantics_Fail_total+nonSemantics_ND_total+nonSemantics_NT_total


      
      ###------------Words Count-----------------###
      totalWords=Frame(frame2, bg='white', width=320, height=25) 
      totalWords.place(x=50, y=580, width=320, height=25)   
      totalWords=Label(totalWords, text='Total Number of Words have Counted:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalWords.grid(row=0, column=0)
      totalWords=Frame(frame2, bg='white', width=30, height=25) 
      totalWords.place(x=380, y=580, width=30, height=25)   
      totalWords=Label(totalWords, text=Total_word_count, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalWords.grid(row=0, column=0)

      ###------------Duplicate Word Count-----------------###
      totalDuplicateWords=Frame(frame2, bg='white', width=320, height=25) 
      totalDuplicateWords.place(x=50, y=610, width=320, height=25)   
      totalDuplicateWords=Label(totalDuplicateWords, text='The number of Duplicate Words Count:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalDuplicateWords.grid(row=0, column=0)
      totalDuplicateWords=Frame(frame2, bg='white', width=30, height=25) 
      totalDuplicateWords.place(x=380, y=610, width=30, height=25)   
      totalDuplicateWords=Label(totalDuplicateWords, text=Total_Duplicate_word_count, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalDuplicateWords.grid(row=0, column=0)

      ###------------Unusual Word Count-----------------###
      totalUnusualWords=Frame(frame2, bg='white', width=320, height=25) 
      totalUnusualWords.place(x=50, y=635, width=320, height=25)   
      totalUnusualWords=Label(totalUnusualWords, text='The number of Unusual Words Count:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalUnusualWords.grid(row=0, column=0)
      totalUnusualWords=Frame(frame2, bg='white', width=30, height=25) 
      totalUnusualWords.place(x=380, y=635, width=30, height=25)   
      totalUnusualWords=Label(totalUnusualWords, text=Total_Unusual_word_count, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalUnusualWords.grid(row=0, column=0)

      ###------------Abreviation Count-----------------###
      totalAbreviation=Frame(frame2, bg='white', width=320, height=25) 
      totalAbreviation.place(x=50, y=660, width=320, height=25)   
      totalAbreviation=Label(totalAbreviation, text='The number of Abreviation Count:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalAbreviation.grid(row=0, column=0)
      totalAbreviation=Frame(frame2, bg='white', width=30, height=25) 
      totalAbreviation.place(x=380, y=660, width=30, height=25)   
      totalAbreviation=Label(totalAbreviation, text=Total_Abreviation_count, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalAbreviation.grid(row=0, column=0)

      ###------------Mispronounced Words Count-----------------###
      totalMispronouncedWord=Frame(frame2, bg='white', width=320, height=25) 
      totalMispronouncedWord.place(x=50, y=685, width=320, height=25)   
      totalMispronouncedWord=Label(totalMispronouncedWord, text='The number of Mispronunced Words Count:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalMispronouncedWord.grid(row=0, column=0)
      totalMispronouncedWord=Frame(frame2, bg='white', width=30, height=25) 
      totalMispronouncedWord.place(x=380, y=685, width=30, height=25)   
      totalMispronouncedWord=Label(totalMispronouncedWord, text=Total_Mispronounced_word_count, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      totalMispronouncedWord.grid(row=0, column=0)


      TotalCheckedCognitiveDisability= nonSemantics_PassCognitiveDisability + Semantics_PassCognitiveDisability + nonSemantics_FailCognitiveDisability + Semantics_FailCognitiveDisability + nonSemantics_NotDetectedCognitiveDisability + Semantics_NotDetectedCognitiveDisability + nonSemantics_NotTestedCognitiveDisability + Semantics_NotTestedCognitiveDisability
      print('Total Number of Success Criteria have Checked for Cognitive Disability:', TotalCheckedCognitiveDisability)
      
      TotalCheckedCognitiveDisability_Passed= nonSemantics_PassCognitiveDisability + Semantics_PassCognitiveDisability  
      print('Total Number of Success Criteria have  Passed for Cognitive Disability:', TotalCheckedCognitiveDisability_Passed)
      TotalCheckedCognitiveDisability_Failed= nonSemantics_FailCognitiveDisability + Semantics_FailCognitiveDisability 
      print('Total Number of Success Criteria have Failed for Cognitive Disability:', TotalCheckedCognitiveDisability_Failed)
      TotalCheckedCognitiveDisability_NotDetected= nonSemantics_NotDetectedCognitiveDisability + Semantics_NotDetectedCognitiveDisability 
      print('Total Number of Success Criteria have Not Detected for Cognitive Disability:', TotalCheckedCognitiveDisability_NotDetected)
      TotalCheckedCognitiveDisability_NotTested= nonSemantics_NotTestedCognitiveDisability + Semantics_NotTestedCognitiveDisability
      print('Total Number of Success Criteria have Not Tested for Cognitive Disability:', TotalCheckedCognitiveDisability_NotTested)


      ####-----------Total Cognitive DIsability------------###
      totalCognitive=Frame(frame2, bg='white', width=600, height=25) 
      totalCognitive.place(x=640, y=0.2, width=600, height=25)   
      totalCognitive=Label(totalCognitive, text='Total Number of Success Criteria have Checked for Cognitive Disability:', fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      totalCognitive.grid(row=0, column=0)
      totalCognitive=Frame(frame2, bg='white', width=30, height=25) 
      totalCognitive.place(x=1200, y=0.2, width=30, height=25)   
      totalCognitive=Label(totalCognitive, text=TotalCheckedCognitiveDisability, fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      totalCognitive.grid(row=0, column=0)

      ###--------Passed-------------###
      passedCognitive=Frame(frame2, bg='white', width=500, height=25) 
      passedCognitive.place(x=640, y=30, width=500, height=25)   
      passedCognitive=Label(passedCognitive, text='The number of Guidelines for Cognitive DIsability have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passedCognitive.grid(row=0, column=0)
      passedCognitive=Frame(frame2, bg='white', width=30, height=25) 
      passedCognitive.place(x=1150, y=30, width=30, height=25)   
      passedCognitive=Label(passedCognitive, text=TotalCheckedCognitiveDisability_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passedCognitive.grid(row=0, column=0)

      ###---------Failed----------------###
      failedCognitive=Frame(frame2, bg='white', width=500, height=25) 
      failedCognitive.place(x=640, y=55, width=500, height=25)   
      failedCognitive=Label(failedCognitive, text='The number of Guidelines for Cognitive DIsability have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failedCognitive.grid(row=0, column=0)
      failedCognitive=Frame(frame2, bg='white', width=30, height=25) 
      failedCognitive.place(x=1150, y=55, width=30, height=25)   
      failedCognitive=Label(failedCognitive, text=TotalCheckedCognitiveDisability_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failedCognitive.grid(row=0, column=0)

      ###-------------Not Detected---------------###
      notDetectedCognitive=Frame(frame2, bg='white', width=500, height=25) 
      notDetectedCognitive.place(x=640, y=80, width=500, height=25)   
      notDetectedCognitive=Label(notDetectedCognitive, text='The number of Guidelines for Cognitive DIsability have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedCognitive.grid(row=0, column=0)
      notDetectedCognitive=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedCognitive.place(x=1150, y=80, width=30, height=25)   
      notDetectedCognitive=Label(notDetectedCognitive, text=TotalCheckedCognitiveDisability_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedCognitive.grid(row=0, column=0)

      ###------------Not Tested-----------------###
      notTestedCognitive=Frame(frame2, bg='white', width=500, height=25) 
      notTestedCognitive.place(x=640, y=105, width=500, height=25)   
      notTestedCognitive=Label(notTestedCognitive, text='The number of Guidelines for Cognitive DIsability have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedCognitive.grid(row=0, column=0)
      notTestedCognitive=Frame(frame2, bg='white', width=30, height=25) 
      notTestedCognitive.place(x=1150, y=105, width=30, height=25)   
      notTestedCognitive=Label(notTestedCognitive, text=TotalCheckedCognitiveDisability_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedCognitive.grid(row=0, column=0)


      TotalCheckedVisionImpairment= nonSemantics_PassVisionImpairment + Semantics_PassVisionImpairment+ nonSemantics_FailVisionImpairment + Semantics_FailVisionImpairment + nonSemantics_NotDetectedVisionImpairment + Semantics_NotDetectedVisionImpairment+ nonSemantics_NotTestedVisionImpairment + Semantics_NotTestedVisionImpairment
      print('Total Number of Success Criteria have Checked for Vision Impairment:', TotalCheckedVisionImpairment)

      TotalCheckedVisionImpairment_Passed= nonSemantics_PassVisionImpairment + Semantics_PassVisionImpairment 
      print('Total Number of Success Criteria have Passed for Vision Impairment:', TotalCheckedVisionImpairment_Passed)
      TotalCheckedVisionImpairment_Failed= nonSemantics_FailVisionImpairment + Semantics_FailVisionImpairment 
      print('Total Number of Success Criteria have Failed for Vision Impairment:', TotalCheckedVisionImpairment_Failed)
      TotalCheckedVisionImpairment_NotDetected= nonSemantics_NotDetectedVisionImpairment + Semantics_NotDetectedVisionImpairment
      print('Total Number of Success Criteria have Not Detected for Vision Impairment:', TotalCheckedVisionImpairment_NotDetected)
      TotalCheckedVisionImpairment_NotTested= nonSemantics_NotTestedVisionImpairment + Semantics_NotTestedVisionImpairment
      print('Total Number of Success Criteria have Checked for Vision Impairment:', TotalCheckedVisionImpairment_NotTested)


      ###------------Total Vision Impairment-----------------###
      totalVisionImpairment=Frame(frame2, bg='white', width=600, height=25) 
      totalVisionImpairment.place(x=640, y=155, width=600, height=25)   
      totalVisionImpairment=Label(totalVisionImpairment, text='Total Number of Success Criteria have checked for Vision Impairment:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalVisionImpairment.grid(row=0, column=0)
      totalVisionImpairment=Frame(frame2, bg='white', width=30, height=25) 
      totalVisionImpairment.place(x=1190, y=155, width=30, height=25)   
      totalVisionImpairment=Label(totalVisionImpairment, text=TotalCheckedVisionImpairment, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalVisionImpairment.grid(row=0, column=0)

      ###------------pass-----------------###
      passVisionImpairment=Frame(frame2, bg='white', width=500, height=25) 
      passVisionImpairment.place(x=640, y=185, width=500, height=25)   
      passVisionImpairment=Label(passVisionImpairment, text='The number of Guidelines for Vision Impairment have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passVisionImpairment.grid(row=0, column=0)
      passVisionImpairment=Frame(frame2, bg='white', width=30, height=25) 
      passVisionImpairment.place(x=1150, y=185, width=30, height=25)   
      passVisionImpairment=Label(passVisionImpairment, text=TotalCheckedVisionImpairment_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passVisionImpairment.grid(row=0, column=0)

      ###------------fail-----------------###
      failVisionImpairment=Frame(frame2, bg='white', width=500, height=25) 
      failVisionImpairment.place(x=640, y=210, width=500, height=25)   
      failVisionImpairment=Label(failVisionImpairment, text='The number of Guidelines for Vision Impairment have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failVisionImpairment.grid(row=0, column=0)
      failVisionImpairment=Frame(frame2, bg='white', width=30, height=25) 
      failVisionImpairment.place(x=1150, y=210, width=30, height=25)   
      failVisionImpairment=Label(failVisionImpairment, text=TotalCheckedVisionImpairment_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failVisionImpairment.grid(row=0, column=0)

      ###------------not detected-----------------###
      notDetectedVisionImpairment=Frame(frame2, bg='white', width=500, height=25) 
      notDetectedVisionImpairment.place(x=640, y=235, width=500, height=25)   
      notDetectedVisionImpairment=Label(notDetectedVisionImpairment, text='The number of Guidelines for Vision Impairment have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedVisionImpairment.grid(row=0, column=0)
      notDetectedVisionImpairment=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedVisionImpairment.place(x=1150, y=235, width=30, height=25)   
      notDetectedVisionImpairment=Label(notDetectedVisionImpairment, text=TotalCheckedVisionImpairment_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedVisionImpairment.grid(row=0, column=0)

      ###------------not tested-----------------###
      notTestedVisionImpairment=Frame(frame2, bg='white', width=500, height=25) 
      notTestedVisionImpairment.place(x=640, y=260, width=500, height=25)   
      notTestedVisionImpairment=Label(notTestedVisionImpairment, text='The number of Guidelines for Vision Impairment have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedVisionImpairment.grid(row=0, column=0)
      notTestedVisionImpairment=Frame(frame2, bg='white', width=30, height=25) 
      notTestedVisionImpairment.place(x=1150, y=260, width=30, height=25)   
      notTestedVisionImpairment=Label(notTestedVisionImpairment, text=TotalCheckedVisionImpairment_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedVisionImpairment.grid(row=0, column=0)

      TotalCheckedHearingDifficulty= nonSemantics_PassHearingDifficulty + Semantics_PassHearingDifficulty + nonSemantics_FailHearingDifficulty + Semantics_FailHearingDifficulty + nonSemantics_NotDetectedHearingDifficulty + Semantics_NotDetectedHearingDifficulty + nonSemantics_NotTestedHearingDifficulty + Semantics_NotTestedHearingDifficulty
      print('Total Number of Success Criteria have Checked for Hearing Difficulty:', TotalCheckedHearingDifficulty)

      TotalCheckedHearingDifficulty_Passed= nonSemantics_PassHearingDifficulty + Semantics_PassHearingDifficulty 
      print('Total Number of Success Criteria have Passed for Hearing Difficulty:', TotalCheckedHearingDifficulty_Passed)
      TotalCheckedHearingDifficulty_Failed= nonSemantics_FailHearingDifficulty + Semantics_FailHearingDifficulty 
      print('Total Number of Success Criteria have Failed for Hearing Difficulty:', TotalCheckedHearingDifficulty_Failed)
      TotalCheckedHearingDifficulty_NotDetected= nonSemantics_NotDetectedHearingDifficulty + Semantics_NotDetectedHearingDifficulty 
      print('Total Number of Success Criteria have Not Detected for Hearing Difficulty:', TotalCheckedHearingDifficulty_NotDetected)

      TotalCheckedHearingDifficulty_NotTested= nonSemantics_NotTestedHearingDifficulty + Semantics_NotTestedHearingDifficulty
      print('Total Number of Success Criteria have Checked for Hearing Difficulty:', TotalCheckedHearingDifficulty_NotTested)


      ###------------Total Hearing Difficulty-----------------###
      totalHearingDifficulty=Frame(frame2, bg='white', width=600, height=25) 
      totalHearingDifficulty.place(x=640, y=310, width=600, height=25)   
      totalHearingDifficulty=Label(totalHearingDifficulty, text='Total Number of Success Criteria have checked for Hearing Difficulty:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalHearingDifficulty.grid(row=0, column=0)
      totalHearingDifficulty=Frame(frame2, bg='white', width=30, height=25) 
      totalHearingDifficulty.place(x=1190, y=310, width=30, height=25)   
      totalHearingDifficulty=Label(totalHearingDifficulty, text=TotalCheckedHearingDifficulty, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalHearingDifficulty.grid(row=0, column=0)

      ###------------pass-----------------###
      passHearingDifficulty=Frame(frame2, bg='white', width=500, height=25) 
      passHearingDifficulty.place(x=640, y=340, width=500, height=25)   
      passHearingDifficulty=Label(passHearingDifficulty, text='The number of Guidelines for Hearing Difficulty have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passHearingDifficulty.grid(row=0, column=0)
      passHearingDifficulty=Frame(frame2, bg='white', width=30, height=25) 
      passHearingDifficulty.place(x=1150, y=340, width=30, height=25)   
      passHearingDifficulty=Label(passHearingDifficulty, text=TotalCheckedHearingDifficulty_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passHearingDifficulty.grid(row=0, column=0)

      ###------------fail-----------------###
      failHearingDifficulty=Frame(frame2, bg='white', width=500, height=25) 
      failHearingDifficulty.place(x=640, y=365, width=500, height=25)   
      failHearingDifficulty=Label(failHearingDifficulty, text='The number of Guidelines for Hearing Difficulty have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failHearingDifficulty.grid(row=0, column=0)
      failHearingDifficulty=Frame(frame2, bg='white', width=30, height=25) 
      failHearingDifficulty.place(x=1150, y=365, width=30, height=25)   
      failHearingDifficulty=Label(failHearingDifficulty, text=TotalCheckedHearingDifficulty_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failHearingDifficulty.grid(row=0, column=0)

      ###------------not detected-----------------###
      notDetectedHearingDifficulty=Frame(frame2, bg='white', width=500, height=25) 
      notDetectedHearingDifficulty.place(x=640, y=390, width=500, height=25)   
      notDetectedHearingDifficulty=Label(notDetectedHearingDifficulty, text='The number of Guidelines for Hearing Difficulty have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedHearingDifficulty.grid(row=0, column=0)
      notDetectedHearingDifficulty=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedHearingDifficulty.place(x=1150, y=390, width=30, height=25)   
      notDetectedHearingDifficulty=Label(notDetectedHearingDifficulty, text=TotalCheckedHearingDifficulty_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedHearingDifficulty.grid(row=0, column=0)

      ###------------not tested-----------------###
      notTestedHearingDifficulty=Frame(frame2, bg='white', width=500, height=25) 
      notTestedHearingDifficulty.place(x=640, y=415, width=500, height=25)   
      notTestedHearingDifficulty=Label(notTestedHearingDifficulty, text='The number of Guidelines for Hearing Difficulty have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedHearingDifficulty.grid(row=0, column=0)
      notTestedHearingDifficulty=Frame(frame2, bg='white', width=30, height=25) 
      notTestedHearingDifficulty.place(x=1150, y=415, width=30, height=25)   
      notTestedHearingDifficulty=Label(notTestedHearingDifficulty, text=TotalCheckedHearingDifficulty_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedHearingDifficulty.grid(row=0, column=0)




      TotalCheckedMotionDisability= nonSemantics_PassMotionDisability + Semantics_PassMotionDisability + nonSemantics_FailMotionDisability + Semantics_FailMotionDisability + nonSemantics_NotDetectedMotionDisability + Semantics_NotDetectedMotionDisability + nonSemantics_NotTestedMotionDisability + Semantics_NotTestedMotionDisability
      print('Total Number of Success Criteria have Checked for Motion Disability:', TotalCheckedMotionDisability)

      TotalCheckedMotionDisability_Passed= nonSemantics_PassMotionDisability + Semantics_PassMotionDisability 
      print('Total Number of Success Criteria have Passed for Motion Disability:', TotalCheckedMotionDisability_Passed)
      TotalCheckedMotionDisability_Failed= nonSemantics_FailMotionDisability + Semantics_FailMotionDisability
      print('Total Number of Success Criteria have Failed for Motion Disability:', TotalCheckedMotionDisability_Failed)
      TotalCheckedMotionDisability_NotDetected= nonSemantics_NotDetectedMotionDisability + Semantics_NotDetectedMotionDisability 
      print('Total Number of Success Criteria have Not Detected for Motion Disability:', TotalCheckedMotionDisability_NotDetected)
      TotalCheckedMotionDisability_NotTested= nonSemantics_NotTestedMotionDisability + Semantics_NotTestedMotionDisability
      print('Total Number of Success Criteria have Not Tested for Motion Disability:', TotalCheckedMotionDisability_NotTested)


      ###------------Total Hearing Difficulty-----------------###
      totalMotionDisability=Frame(frame2, bg='white', width=600, height=25) 
      totalMotionDisability.place(x=640, y=465, width=600, height=25)   
      totalMotionDisability=Label(totalMotionDisability, text='Total Number of Success Criteria have checked for Motion Disability:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalMotionDisability.grid(row=0, column=0)
      totalMotionDisability=Frame(frame2, bg='white', width=30, height=25) 
      totalMotionDisability.place(x=1190, y=465, width=30, height=25)   
      totalMotionDisability=Label(totalMotionDisability, text=TotalCheckedMotionDisability, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalMotionDisability.grid(row=0, column=0)

      ###------------pass-----------------###
      passMotionDisability=Frame(frame2, bg='white', width=500, height=25) 
      passMotionDisability.place(x=640, y=495, width=500, height=25)   
      passMotionDisability=Label(passMotionDisability, text='The number of Guidelines for Motion Disability have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passMotionDisability.grid(row=0, column=0)
      passMotionDisability=Frame(frame2, bg='white', width=30, height=25) 
      passMotionDisability.place(x=1150, y=495, width=30, height=25)   
      passMotionDisability=Label(passMotionDisability, text=TotalCheckedMotionDisability_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passMotionDisability.grid(row=0, column=0)

      ###------------fail-----------------###
      failMotionDisability=Frame(frame2, bg='white', width=500, height=25) 
      failMotionDisability.place(x=640, y=520, width=500, height=25)   
      failMotionDisability=Label(failMotionDisability, text='The number of Guidelines for Motion Disability have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failMotionDisability.grid(row=0, column=0)
      failMotionDisability=Frame(frame2, bg='white', width=30, height=25) 
      failMotionDisability.place(x=1150, y=520, width=30, height=25)   
      failMotionDisability=Label(failMotionDisability, text=TotalCheckedMotionDisability_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failMotionDisability.grid(row=0, column=0)

      ###------------not detected-----------------###
      notDetectedMotionDisability=Frame(frame2, bg='white', width=500, height=25) 
      notDetectedMotionDisability.place(x=640, y=545, width=500, height=25)   
      notDetectedMotionDisability=Label(notDetectedMotionDisability, text='The number of Guidelines for Motion Disability have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedMotionDisability.grid(row=0, column=0)
      notDetectedMotionDisability=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedMotionDisability.place(x=1150, y=545, width=30, height=25)   
      notDetectedMotionDisability=Label(notDetectedMotionDisability, text=TotalCheckedMotionDisability_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedMotionDisability.grid(row=0, column=0)

       ###------------not tested-----------------###
      notTestedMotionDisability=Frame(frame2, bg='white', width=500, height=25) 
      notTestedMotionDisability.place(x=640, y=570, width=500, height=25)   
      notTestedMotionDisability=Label(notTestedMotionDisability, text='The number of Guidelines for Motion Disability have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedMotionDisability.grid(row=0, column=0)
      notTestedMotionDisability=Frame(frame2, bg='white', width=30, height=25) 
      notTestedMotionDisability.place(x=1150, y=570, width=30, height=25)   
      notTestedMotionDisability=Label(notTestedMotionDisability, text=TotalCheckedMotionDisability_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedMotionDisability.grid(row=0, column=0)


      TotalCheckedLearningDisability= nonSemantics_PassLearningDisability + Semantics_PassLearningDisability + nonSemantics_FailLearningDisability + Semantics_FailLearningDisability + nonSemantics_NotDetectedLearningDisability + Semantics_NotDetectedLearningDisability + nonSemantics_NotTestedLearningDisability + Semantics_NotTestedLearningDisability
      print('Total Number of Success Criteria have Checked for Learning Disability:', TotalCheckedLearningDisability)
      
      TotalCheckedLearningDisability_Passed= nonSemantics_PassLearningDisability + Semantics_PassLearningDisability
      print('Total Number of Success Criteria have Passed for Learning Disability:', TotalCheckedLearningDisability_Passed)
      TotalCheckedLearningDisability_Failed= nonSemantics_FailLearningDisability + Semantics_FailLearningDisability 
      print('Total Number of Success Criteria have Failed for Learning Disability:', TotalCheckedLearningDisability_Failed)
      TotalCheckedLearningDisability_NotDetected= nonSemantics_NotDetectedLearningDisability + Semantics_NotDetectedLearningDisability 
      print('Total Number of Success Criteria have Not Detected for Learning Disability:', TotalCheckedLearningDisability_NotDetected)
      TotalCheckedLearningDisability_NotTested= nonSemantics_NotTestedLearningDisability + Semantics_NotTestedLearningDisability
      print('Total Number of Success Criteria have Not Tested for Learning Disability:', TotalCheckedLearningDisability_NotTested)


      ###------------Total Learning Difficulty-----------------###
      totalLearningDisability=Frame(frame2, bg='white', width=600, height=25) 
      totalLearningDisability.place(x=640, y=620, width=600, height=25)   
      totalLearningDisability=Label(totalLearningDisability, text='Total Number of Success Criteria have checked for Learning Disability:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalLearningDisability.grid(row=0, column=0)
      totalLearningDisability=Frame(frame2, bg='white', width=30, height=25) 
      totalLearningDisability.place(x=1190, y=620, width=30, height=25)   
      totalLearningDisability=Label(totalLearningDisability, text=TotalCheckedLearningDisability, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalLearningDisability.grid(row=0, column=0)

      ###------------pass-----------------###
      passLearningDisability=Frame(frame2, bg='white', width=500, height=25) 
      passLearningDisability.place(x=640, y=650, width=500, height=25)   
      passLearningDisability=Label(passLearningDisability, text='The number of Guidelines for Learning Disability have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      passLearningDisability.grid(row=0, column=0)
      passLearningDisability=Frame(frame2, bg='white', width=30, height=25) 
      passLearningDisability.place(x=1150, y=650, width=30, height=25)   
      passLearningDisability=Label(passLearningDisability, text=TotalCheckedLearningDisability_Passed, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      passLearningDisability.grid(row=0, column=0)

      ###------------fail-----------------###
      failLearningDisability=Frame(frame2, bg='white', width=500, height=25) 
      failLearningDisability.place(x=640, y=675, width=500, height=25)   
      failLearningDisability=Label(failLearningDisability, text='The number of Guidelines for Learning Disability have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      failLearningDisability.grid(row=0, column=0)
      failLearningDisability=Frame(frame2, bg='white', width=30, height=25) 
      failLearningDisability.place(x=1150, y=675, width=30, height=25)   
      failLearningDisability=Label(failLearningDisability, text=TotalCheckedLearningDisability_Failed, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      failLearningDisability.grid(row=0, column=0)

      ###------------not detected-----------------###
      notDetectedLearningDisability=Frame(frame2, bg='white', width=500, height=25) 
      notDetectedLearningDisability.place(x=640, y=700, width=500, height=25)   
      notDetectedLearningDisability=Label(notDetectedLearningDisability, text='The number of Guidelines for Learning Disability have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLearningDisability.grid(row=0, column=0)
      notDetectedLearningDisability=Frame(frame2, bg='white', width=30, height=25) 
      notDetectedLearningDisability.place(x=1150, y=700, width=30, height=25)   
      notDetectedLearningDisability=Label(notDetectedLearningDisability, text=TotalCheckedLearningDisability_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      notDetectedLearningDisability.grid(row=0, column=0)

      ###------------not tested-----------------###
      notTestedLearningDisability=Frame(frame2, bg='white', width=500, height=25) 
      notTestedLearningDisability.place(x=640, y=725, width=500, height=25)   
      notTestedLearningDisability=Label(notTestedLearningDisability, text='The number of Guidelines for Learning Disability have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLearningDisability.grid(row=0, column=0)
      notTestedLearningDisability=Frame(frame2, bg='white', width=30, height=25) 
      notTestedLearningDisability.place(x=1150, y=725, width=30, height=25)   
      notTestedLearningDisability=Label(notTestedLearningDisability, text=TotalCheckedLearningDisability_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      notTestedLearningDisability.grid(row=0, column=0)




      ####-------------Total Objects----------------###

      totalWebOjects= nonSemanticObjects+SemanticObjects+userRequirementsObjects
      print('Total Web Objects Checked:', totalWebOjects)
      
      totalObject=Frame(frame2, bg='white', width=428, height=25) 
      totalObject.place(x=1320, y=0.2, width=428, height=25)   
      totalObject=Label(totalObject, text='Total Number of Objects of the Webpage have Checked:', fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      totalObject.grid(row=0, column=0)
      totalObject=Frame(frame2, bg='white', width=50, height=25) 
      totalObject.place(x=1770, y=0.2, width=50, height=25)   
      totalObject=Label(totalObject, text=totalWebOjects, fg='blue', bg='white',font=("Arial", 12, 'bold')) 
      totalObject.grid(row=0, column=0)

      ###--------Audio-------------###
      audio=Frame(frame2, bg='white', width=150, height=25) 
      audio.place(x=1320, y=30, width=150, height=25)   
      audio=Label(audio, text='Audio:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      audio.grid(row=0, column=0)
      audio=Frame(frame2, bg='white', width=50, height=25) 
      audio.place(x=1500, y=30, width=50, height=25)   
      audio=Label(audio, text=audio_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      audio.grid(row=0, column=0)

      ###-------------Display Orientation---------------###
      displayOrientation=Frame(frame2, bg='white', width=150, height=25) 
      displayOrientation.place(x=1320, y=55, width=150, height=25)   
      displayOrientation=Label(displayOrientation, text='Display Orientation:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      displayOrientation.grid(row=0, column=0)
      displayOrientation=Frame(frame2, bg='white', width=50, height=25) 
      displayOrientation.place(x=1500, y=55, width=50, height=25)   
      displayOrientation=Label(displayOrientation, text=displayOrientation_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      displayOrientation.grid(row=0, column=0)

      ###------------Button-----------------###
      ariaLabel=Frame(frame2, bg='white', width=150, height=25) 
      ariaLabel.place(x=1320, y=80, width=150, height=25)   
      ariaLabel=Label(ariaLabel, text='Button:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      ariaLabel.grid(row=0, column=0)
      ariaLabel=Frame(frame2, bg='white', width=50, height=25) 
      ariaLabel.place(x=1500, y=80, width=50, height=25)   
      ariaLabel=Label(ariaLabel, text=arialableButton_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      ariaLabel.grid(row=0, column=0)

      ###------------Color-----------------###
      color=Frame(frame2, bg='white', width=150, height=25) 
      color.place(x=1320, y=105, width=150, height=25)   
      color=Label(color, text='Colors:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)
      color=Frame(frame2, bg='white', width=50, height=25) 
      color.place(x=1500, y=105, width=50, height=25)   
      color=Label(color, text=color_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)

      ###------------Paragraph-----------------###
      color=Frame(frame2, bg='white', width=150, height=25) 
      color.place(x=1320, y=130, width=150, height=25)   
      color=Label(color, text='Paragraph:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)
      color=Frame(frame2, bg='white', width=50, height=25) 
      color.place(x=1500, y=130, width=50, height=25)   
      color=Label(color, text=paragraphColor_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)

      ###------------Keyboard Access-----------------###
      keyboardAccess=Frame(frame2, bg='white', width=150, height=25) 
      keyboardAccess.place(x=1320, y=155, width=150, height=25)   
      keyboardAccess=Label(keyboardAccess, text='Keyboard Access:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      keyboardAccess.grid(row=0, column=0)
      keyboardAccess=Frame(frame2, bg='white', width=50, height=25) 
      keyboardAccess.place(x=1500, y=155, width=50, height=25)   
      keyboardAccess=Label(keyboardAccess, text=tabIndex_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      keyboardAccess.grid(row=0, column=0)

      ###------------Search Field-----------------###
      SearchField=Frame(frame2, bg='white', width=150, height=25) 
      SearchField.place(x=1320, y=180, width=150, height=25)   
      SearchField=Label(SearchField, text='Search Field:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      SearchField.grid(row=0, column=0)
      SearchField=Frame(frame2, bg='white', width=50, height=25) 
      SearchField.place(x=1500, y=180, width=50, height=25)   
      SearchField=Label(SearchField, text=searchField_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      SearchField.grid(row=0, column=0)

      ###------------Dropdown Menu-----------------###
      dropDoownMenu=Frame(frame2, bg='white', width=150, height=25) 
      dropDoownMenu.place(x=1320, y=205, width=150, height=25)   
      dropDoownMenu=Label(dropDoownMenu, text='Dropdown Menu', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      dropDoownMenu.grid(row=0, column=0)
      dropDoownMenu=Frame(frame2, bg='white', width=50, height=25) 
      dropDoownMenu.place(x=1500, y=205, width=50, height=25)   
      dropDoownMenu=Label(dropDoownMenu, text=option_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      dropDoownMenu.grid(row=0, column=0)

      ###------------Form-----------------###
      form=Frame(frame2, bg='white', width=150, height=25) 
      form.place(x=1320, y=230, width=150, height=25)   
      form=Label(form, text='Forms:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      form.grid(row=0, column=0)
      form=Frame(frame2, bg='white', width=50, height=25) 
      form.place(x=1500, y=230, width=50, height=25)   
      form=Label(form, text=form_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      form.grid(row=0, column=0)

      ###------------Error Suggestion-----------------###
      errorSuggestion=Frame(frame2, bg='white', width=150, height=25) 
      errorSuggestion.place(x=1320, y=255, width=150, height=25)   
      errorSuggestion=Label(errorSuggestion, text='Error Suggestion:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      errorSuggestion.grid(row=0, column=0)
      errorSuggestion=Frame(frame2, bg='white', width=50, height=25) 
      errorSuggestion.place(x=1500, y=255, width=50, height=25)   
      errorSuggestion=Label(errorSuggestion, text=ariaInvalid_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      errorSuggestion.grid(row=0, column=0)

      ###------------Image-----------------###
      image=Frame(frame2, bg='white', width=150, height=25) 
      image.place(x=1320, y=280, width=150, height=25)   
      image=Label(image, text='Image:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      image.grid(row=0, column=0)
      image=Frame(frame2, bg='white', width=50, height=25) 
      image.place(x=1500, y=280, width=50, height=25)   
      image=Label(image, text=img_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      image.grid(row=0, column=0)

      ###------------Word-----------------###
      
      word=titleWord_totalCount+bodyWord_totalCount

      words=Frame(frame2, bg='white', width=150, height=25) 
      words.place(x=1320, y=305, width=150, height=25)   
      words=Label(words, text='Words:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      words.grid(row=0, column=0)
      words=Frame(frame2, bg='white', width=50, height=25) 
      words.place(x=1500, y=305, width=50, height=25)   
      words=Label(words, text=word, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      words.grid(row=0, column=0)

      ###------------Title-----------------###
      title=Frame(frame2, bg='white', width=150, height=25) 
      title.place(x=1320, y=330, width=150, height=25)   
      title=Label(title, text='Title:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      title.grid(row=0, column=0)
      title=Frame(frame2, bg='white', width=50, height=25) 
      title.place(x=1500, y=330, width=50, height=25)   
      title=Label(title, text=title_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      title.grid(row=0, column=0) 

      ###------------Checkbox-----------------###
      checkBox=Frame(frame2, bg='white', width=150, height=25) 
      checkBox.place(x=1320, y=355, width=150, height=25)   
      checkBox=Label(checkBox, text='Checkbox:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      checkBox.grid(row=0, column=0)
      checkBox=Frame(frame2, bg='white', width=50, height=25) 
      checkBox.place(x=1500, y=355, width=50, height=25)   
      checkBox=Label(checkBox, text=checkbox_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      checkBox.grid(row=0, column=0) 

      ###------------Loading time-----------------###
      loadingTime=Frame(frame2, bg='white', width=150, height=25) 
      loadingTime.place(x=1320, y=380, width=150, height=25)   
      loadingTime=Label(loadingTime, text='Loading Time:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      loadingTime.grid(row=0, column=0)
      loadingTime=Frame(frame2, bg='white', width=50, height=25) 
      loadingTime.place(x=1500, y=380, width=50, height=25)   
      loadingTime=Label(loadingTime, text=loading_time_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      loadingTime.grid(row=0, column=0)

      ###------------CAPTCHA-----------------###
      CAPTCHA=Frame(frame2, bg='white', width=150, height=25) 
      CAPTCHA.place(x=1320, y=405, width=150, height=25)   
      CAPTCHA=Label(CAPTCHA, text='CAPTCHA:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      CAPTCHA.grid(row=0, column=0)
      CAPTCHA=Frame(frame2, bg='white', width=50, height=25) 
      CAPTCHA.place(x=1500, y=405, width=50, height=25)   
      CAPTCHA=Label(CAPTCHA, text=Div_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      CAPTCHA.grid(row=0, column=0)

      ###------------Text resize option-----------------###
      textResizeOption=Frame(frame2, bg='white', width=150, height=25) 
      textResizeOption.place(x=1320, y=430, width=150, height=25)   
      textResizeOption=Label(textResizeOption, text='Text Resize Option:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textResizeOption.grid(row=0, column=0)
      textResizeOption=Frame(frame2, bg='white', width=50, height=25) 
      textResizeOption.place(x=1500, y=430, width=50, height=25)   
      textResizeOption=Label(textResizeOption, text=text_Resize_Option_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textResizeOption.grid(row=0, column=0)

      ###------------Font Type-----------------###
      
      fontType_totalCount=paragraphTextFontFamily_totalCount+headingTextFontFamily_totalCount

      fontType=Frame(frame2, bg='white', width=150, height=25) 
      fontType.place(x=1320, y=455, width=150, height=25)   
      fontType=Label(fontType, text='Font Type:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      fontType.grid(row=0, column=0)
      fontType=Frame(frame2, bg='white', width=50, height=25) 
      fontType.place(x=1500, y=455, width=50, height=25)   
      fontType=Label(fontType, text=fontType_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      fontType.grid(row=0, column=0)

      ###------------Text Pattern-----------------###
      
      textPattern=Frame(frame2, bg='white', width=150, height=25) 
      textPattern.place(x=1320, y=480, width=150, height=25)   
      textPattern=Label(textPattern, text='Text Pattern:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textPattern.grid(row=0, column=0)
      textPattern=Frame(frame2, bg='white', width=50, height=25) 
      textPattern.place(x=1500, y=480, width=50, height=25)   
      textPattern=Label(textPattern, text=TextPattern_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textPattern.grid(row=0, column=0)



      ###---------Links----------------###
      links=Frame(frame2, bg='white', width=150, height=25) 
      links.place(x=1580, y=30, width=150, height=25)   
      links=Label(links, text='Links:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      links.grid(row=0, column=0)
      links=Frame(frame2, bg='white', width=50, height=25) 
      links.place(x=1760, y=30, width=50, height=25)   
      links=Label(links, text=link_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      links.grid(row=0, column=0)


      ###------------Input Fields-----------------###
      placeholder=Frame(frame2, bg='white', width=150, height=25) 
      placeholder.place(x=1580, y=55, width=150, height=25)   
      placeholder=Label(placeholder, text='Input Fields:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      placeholder.grid(row=0, column=0)
      placeholder=Frame(frame2, bg='white', width=50, height=25) 
      placeholder.place(x=1760, y=55, width=50, height=25)   
      placeholder=Label(placeholder, text=placeholder_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      placeholder.grid(row=0, column=0)

      ###------------Headings-----------------###
      buttons=Frame(frame2, bg='white', width=150, height=25) 
      buttons.place(x=1580, y=80, width=150, height=25)   
      buttons=Label(buttons, text='Headings:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      buttons.grid(row=0, column=0)
      buttons=Frame(frame2, bg='white', width=50, height=25) 
      buttons.place(x=1760, y=80, width=50, height=25)   
      buttons=Label(buttons, text=headingColor_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      buttons.grid(row=0, column=0)

      ###------------Headers-----------------###
      color=Frame(frame2, bg='white', width=150, height=25) 
      color.place(x=1580, y=105, width=150, height=25)   
      color=Label(color, text='Headers:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)
      color=Frame(frame2, bg='white', width=50, height=25) 
      color.place(x=1760, y=105, width=50, height=25)   
      color=Label(color, text=headerColor_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      color.grid(row=0, column=0)

      ###------------Background Music-----------------###
      backgroundMusic=Frame(frame2, bg='white', width=150, height=25) 
      backgroundMusic.place(x=1580, y=130, width=150, height=25)   
      backgroundMusic=Label(backgroundMusic, text='Background Music:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      backgroundMusic.grid(row=0, column=0)
      backgroundMusic=Frame(frame2, bg='white', width=50, height=25) 
      backgroundMusic.place(x=1760, y=130, width=50, height=25)   
      backgroundMusic=Label(backgroundMusic, text=backgroundMusic_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      backgroundMusic.grid(row=0, column=0)

      ###------------Character Key Shortcut-----------------###
      characterKeyShortcut=Frame(frame2, bg='white', width=180, height=25) 
      characterKeyShortcut.place(x=1580, y=155, width=180, height=25)   
      characterKeyShortcut=Label(characterKeyShortcut, text='Character Key Shortcut:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      characterKeyShortcut.grid(row=0, column=0)
      characterKeyShortcut=Frame(frame2, bg='white', width=50, height=25) 
      characterKeyShortcut.place(x=1760, y=155, width=50, height=25)   
      characterKeyShortcut=Label(characterKeyShortcut, text=accessKey_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      characterKeyShortcut.grid(row=0, column=0)

      ###------------Label-----------------###
      labels=Frame(frame2, bg='white', width=150, height=25) 
      labels.place(x=1580, y=180, width=150, height=25)   
      labels=Label(labels, text='Labels:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      labels.grid(row=0, column=0)
      labels=Frame(frame2, bg='white', width=50, height=25) 
      labels.place(x=1760, y=180, width=50, height=25)   
      labels=Label(labels, text=Label_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      labels.grid(row=0, column=0)

      ###------------Dialogbox-----------------###
      checkBox=Frame(frame2, bg='white', width=150, height=25) 
      checkBox.place(x=1580, y=205, width=150, height=25)   
      checkBox=Label(checkBox, text='DialogBox:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      checkBox.grid(row=0, column=0)
      checkBox=Frame(frame2, bg='white', width=50, height=25) 
      checkBox.place(x=1760, y=205, width=50, height=25)   
      checkBox=Label(checkBox, text=dialogbox_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      checkBox.grid(row=0, column=0)

      ###------------Error Message-----------------###
      errorMessage=Frame(frame2, bg='white', width=150, height=25) 
      errorMessage.place(x=1580, y=230, width=150, height=25)   
      errorMessage=Label(errorMessage, text='Error Message:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      errorMessage.grid(row=0, column=0)
      errorMessage=Frame(frame2, bg='white', width=50, height=25) 
      errorMessage.place(x=1760, y=230, width=50, height=25)   
      errorMessage=Label(errorMessage, text=aria_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' , 'bold')) 
      errorMessage.grid(row=0, column=0)

      # ###------------Name, Role, Value-----------------###

      # global NameRoleValue

      # NameRoleValue=inputTypeAltTitle_totalCount+linkTitleText_totalCount

      # nameRoleValue=Frame(frame2, bg='white', width=370, height=25) 
      # nameRoleValue.place(x=13040, y=400, width=370, height=25)   
      # nameRoleValue=Label(nameRoleValue, text='The number of Name, Role, Value have Checked:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      # nameRoleValue.grid(row=0, column=0)
      # nameRoleValue=Frame(frame2, bg='white', width=50, height=25) 
      # nameRoleValue.place(x=1420, y=400, width=50, height=25)   
      # nameRoleValue=Label(nameRoleValue, text=NameRoleValue, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      # nameRoleValue.grid(row=0, column=0)

      ###------------Status Message-----------------###

      global StatusMessage

      StatusMessage=messageBoxSearchField_totalCount+messageBoxForm_totalCount

      statusMessage=Frame(frame2, bg='white', width=150, height=25) 
      statusMessage.place(x=1580, y=255, width=150, height=25)   
      statusMessage=Label(statusMessage, text='Status Messages:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      statusMessage.grid(row=0, column=0)
      statusMessage=Frame(frame2, bg='white', width=50, height=25) 
      statusMessage.place(x=1760, y=255, width=50, height=25)   
      statusMessage=Label(statusMessage, text=StatusMessage, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      statusMessage.grid(row=0, column=0)

      ###------------Video-----------------###
      video=Frame(frame2, bg='white', width=150, height=25) 
      video.place(x=1580, y=280, width=150, height=25)   
      video=Label(video, text='Video:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      video.grid(row=0, column=0)
      video=Frame(frame2, bg='white', width=50, height=25) 
      video.place(x=1760, y=280, width=50, height=25)   
      video=Label(video, text=headings, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      video.grid(row=0, column=0)

       ###------------Texts-----------------###
      
      texts=paragraphColor_totalCount+title_totalCount+headingColor_totalCount
      
      textss=Frame(frame2, bg='white', width=150, height=25) 
      textss.place(x=1580, y=305, width=150, height=25)   
      textss=Label(textss, text='Texts:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textss.grid(row=0, column=0)
      textss=Frame(frame2, bg='white', width=50, height=25) 
      textss.place(x=1760, y=305, width=50, height=25)   
      textss=Label(textss, text=texts, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      textss.grid(row=0, column=0)

      ###------------Language-----------------###
      language=Frame(frame2, bg='white', width=150, height=25) 
      language.place(x=1580, y=330, width=150, height=25)   
      language=Label(language, text='Languages:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      language.grid(row=0, column=0)
      language=Frame(frame2, bg='white', width=50, height=25) 
      language.place(x=1760, y=330, width=50, height=25)   
      language=Label(language, text=language_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      language.grid(row=0, column=0)

      ###------------Combo Box-----------------###
      comboBox=Frame(frame2, bg='white', width=150, height=25) 
      comboBox.place(x=1580, y=355, width=150, height=25)   
      comboBox=Label(comboBox, text='ComboBox:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      comboBox.grid(row=0, column=0)
      comboBox=Frame(frame2, bg='white', width=50, height=25) 
      comboBox.place(x=1760, y=355, width=50, height=25)   
      comboBox=Label(comboBox, text=combobox_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      comboBox.grid(row=0, column=0)

      ###------------Page Length-----------------###
      pageLength=Frame(frame2, bg='white', width=150, height=25) 
      pageLength.place(x=1580, y=380, width=150, height=25)   
      pageLength=Label(pageLength, text='Page Length:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      pageLength.grid(row=0, column=0)
      pageLength=Frame(frame2, bg='white', width=50, height=25) 
      pageLength.place(x=1760, y=380, width=50, height=25)   
      pageLength=Label(pageLength, text=page_length_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      pageLength.grid(row=0, column=0)

      ###------------Multi Language-----------------###
      multiLanguage=Frame(frame2, bg='white', width=150, height=25) 
      multiLanguage.place(x=1580, y=405, width=150, height=25)   
      multiLanguage=Label(multiLanguage, text='Multiple Language:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      multiLanguage.grid(row=0, column=0)
      multiLanguage=Frame(frame2, bg='white', width=50, height=25) 
      multiLanguage.place(x=1760, y=405, width=50, height=25)   
      multiLanguage=Label(multiLanguage, text=multiLanguage_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      multiLanguage.grid(row=0, column=0)

      ###------------Color changing option-----------------###
      colorChangingOption=Frame(frame2, bg='white', width=150, height=25) 
      colorChangingOption.place(x=1580, y=430, width=150, height=25)   
      colorChangingOption=Label(colorChangingOption, text='Color Changing Option:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      colorChangingOption.grid(row=0, column=0)
      colorChangingOption=Frame(frame2, bg='white', width=50, height=25) 
      colorChangingOption.place(x=1760, y=430, width=50, height=25)   
      colorChangingOption=Label(colorChangingOption, text=color_Changing_Option_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      colorChangingOption.grid(row=0, column=0)

      ###------------Font Size-----------------###
      
      fontSize_totalCount=paragraphTextFontSize_totalCount+headingTextFontSize_totalCount

      fontSize=Frame(frame2, bg='white', width=150, height=25) 
      fontSize.place(x=1580, y=455, width=150, height=25)   
      fontSize=Label(fontSize, text='Font Size:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      fontSize.grid(row=0, column=0)
      fontSize=Frame(frame2, bg='white', width=50, height=25) 
      fontSize.place(x=1760, y=455, width=50, height=25)   
      fontSize=Label(fontSize, text=fontSize_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      fontSize.grid(row=0, column=0)

      ###------------Content Type-----------------###
      
      contentType=Frame(frame2, bg='white', width=150, height=25) 
      contentType.place(x=1580, y=480, width=150, height=25)   
      contentType=Label(contentType, text='Content Type:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      contentType.grid(row=0, column=0)
      contentType=Frame(frame2, bg='white', width=50, height=25) 
      contentType.place(x=1760, y=480, width=50, height=25)   
      contentType=Label(contentType, text=TextImgVideo_totalCount, fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      contentType.grid(row=0, column=0)




      ####-------------User Requirements----------------###

      global TotalChecked_userRequirements
      global userRequirements_Pass
      global userRequirements_Fail
      global userRequirements_NotDetected
      global userRequirements_NotTested

      TotalChecked_userRequirements= userRequirements_Pass + userRequirements_Fail + userRequirements_NotDetected + userRequirements_NotTested
      print('Total Number of User Requirements have Checked:', TotalChecked_userRequirements)

      totalUserRequirements=Frame(frame2, bg='white', width=500, height=25) 
      totalUserRequirements.place(x=1320, y=530, width=500, height=25)   
      totalUserRequirements=Label(totalUserRequirements, text='Total Number of User Requirements have Checked:', fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalUserRequirements.grid(row=0, column=0)
      totalUserRequirements=Frame(frame2, bg='white', width=50, height=25) 
      totalUserRequirements.place(x=1820, y=530, width=50, height=25)   
      totalUserRequirements=Label(totalUserRequirements, text=TotalChecked_userRequirements, fg='blue', bg='white',font=("Arial", 12, 'bold' , 'bold')) 
      totalUserRequirements.grid(row=0, column=0)

      ####--------Passed-------------###
      User_Requirements_passed=Frame(frame2, bg='white', width=500, height=25) #370
      User_Requirements_passed.place(x=1320, y=560, width=500, height=25)   
      User_Requirements_passed=Label(User_Requirements_passed, text='The number of Guidelines for User Requirements have Passed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_passed.grid(row=0, column=0)
      User_Requirements_passed=Frame(frame2, bg='white', width=50, height=25) 
      User_Requirements_passed.place(x=1820, y=560, width=50, height=25)   
      User_Requirements_passed=Label(User_Requirements_passed, text=userRequirements_Pass, fg='green', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_passed.grid(row=0, column=0)

      ####---------Failed----------------###
      User_Requirements_failed=Frame(frame2, bg='white', width=500, height=25) #370
      User_Requirements_failed.place(x=1320, y=585, width=520, height=25)   
      User_Requirements_failed=Label(User_Requirements_failed, text='The number of Guidelines for User Requirements have Failed:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_failed.grid(row=0, column=0)
      User_Requirements_failed=Frame(frame2, bg='white', width=50, height=25) 
      User_Requirements_failed.place(x=1820, y=585, width=50, height=25) #1420, 655  
      User_Requirements_failed=Label(User_Requirements_failed, text=userRequirements_Fail, fg='red', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_failed.grid(row=0, column=0)

      ####-------------Not Detected---------------###
      User_Requirements_notDetected=Frame(frame2, bg='white', width=500, height=25) 
      User_Requirements_notDetected.place(x=1320, y=610, width=500, height=25)   
      User_Requirements_notDetected=Label(User_Requirements_notDetected, text='The number of Guidelines for User Requirements have Not Detected:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_notDetected.grid(row=0, column=0)
      User_Requirements_notDetected=Frame(frame2, bg='white', width=50, height=25) 
      User_Requirements_notDetected.place(x=1820, y=610, width=50, height=25)   
      User_Requirements_notDetected=Label(User_Requirements_notDetected, text=userRequirements_NotDetected, fg='dark goldenrod', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_notDetected.grid(row=0, column=0)

      # ###------------Not Tested-----------------###
      User_Requirements_notTested=Frame(frame2, bg='white', width=500, height=25) 
      User_Requirements_notTested.place(x=1320, y=635, width=500, height=25)   
      User_Requirements_notTested=Label(User_Requirements_notTested, text='The number of Guidelines for User Requirements have Not Tested:', fg='black', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_notTested.grid(row=0, column=0)
      User_Requirements_notTested=Frame(frame2, bg='white', width=50, height=25) 
      User_Requirements_notTested.place(x=1820, y=635, width=50, height=25)   
      User_Requirements_notTested=Label(User_Requirements_notTested, text=userRequirements_NotTested, fg='dark blue', bg='white',font=("Arial", 11, 'bold' )) 
      User_Requirements_notTested.grid(row=0, column=0)




    def General_statistics_page():

      ####------------------------###
      frame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=50) #highlightbackground="blue", highlightthickness=1
      frame1.pack(side=tk.LEFT,fill="both", expand=True)
      frame1.place(relx=0.0, rely=0.0)

      frame=tk.Frame (frame1, bg="white smoke", width=2000, height=35)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.26, rely=0.2)
      label = tk.Label(frame, text="General Statistics of WCAG 2.2 Standards and User Requirements",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()

      ###-------------###
      frame2=tk.Frame (main_fm, bg="white", width=4000, height=900)
      frame2.pack(side=tk.LEFT,fill="both", expand=True)
      frame2.place(relx=0.0, rely=0.08)#0.12

      ####------------------------------------------------####

      WCAG_totla=88
      notEvaluated=WCAG_totla-TotalChecked_WCAG

      overview_data_guidelines={
          "Total WCAG Standards": WCAG_totla,
          "Evaluated": TotalChecked_WCAG,
          "Not Evaluated": notEvaluated,
        }

      plt.rcParams.update({'font.size': 8})
      fig1, ax1=plt.subplots(figsize=(4.5,4.0)) #width, height
      colors=("turquoise", "darksalmon", "yellow")
      ax1.bar(overview_data_guidelines.keys(), overview_data_guidelines.values(), width=0.3, color=colors, edgecolor = "black")
      ax1.set_title("WCAG Standard Overview", fontsize=11, color="navy") 
      ax1.set_xlabel("Evaluated Statistics", fontsize=10)
      ax1.set_ylabel ("Evaluated Count", fontsize=10)
      #plt.show()

      canvas1=FigureCanvasTkAgg(fig1, frame2)
      canvas1.draw()
      canvas1.get_tk_widget().place(relx=0.02, rely=0.0)

      
      ###-------------------------------------------------------------###

      total_Evaluated=TotalChecked_WCAG+TotalChecked_userRequirements

      overview_data_guidelines_totalChecked={
          "Total Evaluated":total_Evaluated,
          "WCAG Standards": TotalChecked_WCAG,
          "Additional Requirements": TotalChecked_userRequirements,
        }

      plt.rcParams.update({'font.size': 8})
      fig2, ax2=plt.subplots(figsize=(4.5,4.0)) #width, height
      colors=("blue", "turquoise", "darkgoldenrod")
      ax2.bar(overview_data_guidelines_totalChecked.keys(), overview_data_guidelines_totalChecked.values(), width=0.3, color=colors,edgecolor = "black")
      ax2.set_title("Total Evaluated Guidelines Overview", fontsize=11, color="navy") 
      ax2.set_xlabel("Evaluated Statistics", fontsize=10)
      ax2.set_ylabel ("Evaluated Count", fontsize=10)
      #plt.show()

      canvas2=FigureCanvasTkAgg(fig2, frame2)
      canvas2.draw()
      canvas2.get_tk_widget().place(relx=0.13, rely=0.0)


      ##------------------------##
      
      verified_WCAG=TotalPassed_WCAG+TotalNotDetected_WCAG

      overview_data_guidelines_Automated_User_Expert_testing={
          "Total Evaluated": TotalChecked_WCAG,
          "Verified": verified_WCAG,
          "Additional Checking": TotalFailed_WCAG,
          "Expert Testing": TotalNotTested_WCAG
        }

      plt.rcParams.update({'font.size': 8})
      fig3, ax3=plt.subplots(figsize=(4.5,4.0))
      ax3.plot(list(overview_data_guidelines_Automated_User_Expert_testing.keys()), list(overview_data_guidelines_Automated_User_Expert_testing.values()), color='black', marker = 'o', markerfacecolor = 'blue', markersize = 8)
      ax3.set_title("Evaluated WCAG Standards Overview", fontsize=11, color="navy")
      ax3.set_xlabel("Evaluated Statistics", fontsize=10)
      ax3.set_ylabel ("Evaluated Count", fontsize=10) 

      canvas3=FigureCanvasTkAgg(fig3, frame2)
      canvas3.draw()
      canvas3.get_tk_widget().place(relx=0.24, rely=0.0)


      ##------------------------##
      
      verified_Additional_Requirements=userRequirements_Pass+userRequirements_NotDetected

      overview_data_guidelines_Additional_Requirements_Automated_User_Expert_testing={
          "Total Evaluated": TotalChecked_userRequirements,
          "Verified": verified_Additional_Requirements,
          "Additional Checking": userRequirements_Fail,
          "Expert Testing": userRequirements_NotTested
        }

      plt.rcParams.update({'font.size': 8})
      fig4, ax4=plt.subplots(figsize=(4.5,4.0))
      ax4.plot(list(overview_data_guidelines_Additional_Requirements_Automated_User_Expert_testing.keys()), list(overview_data_guidelines_Additional_Requirements_Automated_User_Expert_testing.values()), color='black', marker = 'o', markerfacecolor = 'blue', markersize = 8)
      ax4.set_title("Evaluated Additional Requirements Overview", fontsize=11, color="navy")
      ax4.set_xlabel("Evaluated Statistics", fontsize=10, color="black")
      ax4.set_ylabel ("Evaluated Count", fontsize=10, color="black") 

      canvas4=FigureCanvasTkAgg(fig4, frame2)
      canvas4.draw()
      canvas4.get_tk_widget().place(relx=0.35, rely=0.0)


      
        

      ####--------------------------------###

      V_LevelA_total=nonSemantics_VLevelA+Semantics_VLevelA
      print('Total Number of Success Criteria for Level A for Verified:',V_LevelA_total)
      AD_LevelA_total=nonSemantics_ADLevelA+Semantics_ADLevelA
      print('Total Number of Success Criteria for Level A for Additional Checking:',AD_LevelA_total)
      ET_LevelA_total=nonSemantics_ETLevelA+Semantics_ETLevelA
      print('Total Number of Success Criteria for Level A for Expert Testing:',ET_LevelA_total)

      overview_data_VADET_LevelA_total={
          "Verified": V_LevelA_total,
          "Additional Checking": AD_LevelA_total,
          "Expert Testing": ET_LevelA_total
        }

      plt.rcParams.update({'font.size': 8}) 
      fig5, ax5=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darksalmon")
      ax5.pie(overview_data_VADET_LevelA_total.values(), labels=overview_data_VADET_LevelA_total.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax5.set_title("Coverage of WCAG Criteria (Level A)", fontsize=11, color="navy")

      canvas5=FigureCanvasTkAgg(fig5, frame2)
      canvas5.draw()
      canvas5.get_tk_widget().place(relx=0.0, rely=0.55)



      ###---------------------###

      V_LevelAA_total=nonSemantics_VLevelAA+Semantics_VLevelAA
      print('Total Number of Success Criteria for Level AA for Verified:',V_LevelAA_total)
      AD_LevelAA_total=nonSemantics_ADLevelAA+Semantics_ADLevelAA
      print('Total Number of Success Criteria for Level AA for Additional Checking:',AD_LevelAA_total)
      ET_LevelAA_total=nonSemantics_ETLevelAA+Semantics_ETLevelAA
      print('Total Number of Success Criteria for Level AA for Expert Testing:', ET_LevelAA_total)

      overview_data_VADET_LevelAA_total={
          "Verified": V_LevelAA_total,
          "Additional Checking": AD_LevelAA_total,
          "Expert Testing": ET_LevelAA_total
        }

      plt.rcParams.update({'font.size': 8}) 
      fig6, ax6=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darksalmon")
      ax6.pie(overview_data_VADET_LevelAA_total.values(), labels=overview_data_VADET_LevelAA_total.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax6.set_title("Coverage of WCAG Criteria (Level AA)", fontsize=11, color="navy")


      canvas6=FigureCanvasTkAgg(fig6, frame2)
      canvas6.draw()
      canvas6.get_tk_widget().place(relx=0.12, rely=0.55)



      ###-------------------------###

      V_LevelAAA_total=nonSemantics_VLevelAAA+Semantics_VLevelAAA
      print('Total Number of Success Criteria for Level AAA for Verified:',V_LevelAAA_total)
      AD_LevelAAA_total=nonSemantics_ADLevelAAA+Semantics_ADLevelAAA
      print('Total Number of Success Criteria for Level AAA for Additional Checking:',AD_LevelAAA_total)
      ET_LevelAAA_total=nonSemantics_ETLevelAAA+Semantics_ETLevelAAA
      print('Total Number of Success Criteria for Level AAA for Expert Testing:',ET_LevelAAA_total)

      overview_data_VADET_LevelAAA_total={
          "Verified": V_LevelAAA_total,
          "Additional Checking": AD_LevelAAA_total,
          "Expert Testing": ET_LevelAAA_total
        }

      plt.rcParams.update({'font.size': 8}) 
      fig7, ax7=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darksalmon")
      ax7.pie(overview_data_VADET_LevelAAA_total.values(), labels=overview_data_VADET_LevelAAA_total.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax7.set_title("Coverage of WCAG Criteria (Level AAA)", fontsize=11, color="navy")

      canvas7=FigureCanvasTkAgg(fig7, frame2)
      canvas7.draw()
      canvas7.get_tk_widget().place(relx=0.24, rely=0.55)


      ####-----------------------------------------------####

      verified_UserRequirements= userRequirements_Pass+userRequirements_NotDetected

      overview_data_UserRequirements_total={
          "Verified": verified_UserRequirements,
          "Additional Checking": userRequirements_Fail,
          "Expert Testing": userRequirements_NotTested
        }

      plt.rcParams.update({'font.size': 8}) 
      fig8, ax8=plt.subplots(figsize=(4.5,4))
      colors=("turquoise", "yellow", "darksalmon")
      ax8.pie(overview_data_UserRequirements_total.values(), labels=overview_data_UserRequirements_total.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax8.set_title("Coverage of User Requirements", fontsize=11, color="navy")

      canvas8=FigureCanvasTkAgg(fig8, frame2)
      canvas8.draw()
      canvas8.get_tk_widget().place(relx=0.35, rely=0.55)   

      

    
    def Key_statistics_page():

      ####------------------------###
      frame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=50) #highlightbackground="blue", highlightthickness=1
      frame1.pack(side=tk.LEFT,fill="both", expand=True)
      frame1.place(relx=0.0, rely=0.0)

      frame=tk.Frame (frame1, bg="white smoke", width=2000, height=35)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.19, rely=0.2)
      label = tk.Label(frame, text="Statistics for Considered Guideline (WCAG 2.2), Disability Types and Tested Features",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()


      ###-------------###
      frame2=tk.Frame (main_fm, bg="white", width=4000, height=900)
      frame2.pack(side=tk.LEFT,fill="both", expand=True)
      frame2.place(relx=0.0, rely=0.08)#0.12


      plt.rcParams ["axes.prop_cycle"]=plt.cycler (
        color=["#4C2A85", "#BE96FF", "#957DAD", "#5E366E", "#A98CCC"])
      
      overview_data_levelA={
          "Total Evaluated": TotalLevelA,
          "P": TotalLevelA_Passed,
          "F": TotalLevelA_Failed,
          "ND": TotalLevelA_NotDetected,
          "NT": TotalLevelA_NotTested
        }

      overview_data_levelAA={
          "Total Evaluated": TotalLevelAA,
          "P": TotalLevelAA_Passed,
          "F": TotalLevelAA_Failed,
          "ND": TotalLevelAA_NotDetected,
          "NT": TotalLevelAA_NotTested
        }

      overview_data_levelAAA={
          "Total Evaluated": TotalLevelAAA,
          "P": TotalLevelAAA_Passed,
          "F": TotalLevelAAA_Failed,
          "ND": TotalLevelAAA_NotDetected,
          "NT": TotalLevelAAA_NotTested
        }

      plt.rcParams.update({'font.size': 8})
      fig1, ax1=plt.subplots(figsize=(4.5,4.0))
      ax1.plot(list(overview_data_levelA.keys()), list(overview_data_levelA.values()), color='blue', marker = '.', markerfacecolor = 'black', markersize = 8, linestyle= '-.')
      ax1.plot(list(overview_data_levelAA.keys()), list(overview_data_levelAA.values()), color='crimson', marker = '.', markerfacecolor = 'black', markersize = 8, linestyle= ':')
      ax1.plot(list(overview_data_levelAAA.keys()), list(overview_data_levelAAA.values()), color='navy', marker = '.', markerfacecolor = 'black', markersize = 8, linestyle= '--')
      
      ax1.set_title("Evaluated WCAG Conformance Levels", fontsize=11, color="navy")
      ax1.set_xlabel("Evaluated Statistics", fontsize=10)
      ax1.set_ylabel ("Evaluated Count", fontsize=10)

      LevelA = mpatches.Patch(color='blue', label='Level A', linestyle= '-.')
      LevelAA = mpatches.Patch(color='crimson', label='Level AA', linestyle= ':')
      LevelAAA = mpatches.Patch(color='navy', label='Level AAA', linestyle= '--')
      passed= mpatches.Patch(color='none', label='P-Pass')
      failed = mpatches.Patch(color='none', label='F-Fail')
      notDetected = mpatches.Patch(color='none', label='ND-Not Detected')
      notTested = mpatches.Patch(color='none', label='NT-Not Tested')
      plt.legend(handles=[LevelA,LevelAA,LevelAAA,passed, failed, notDetected, notTested], loc=0)
      #plt.show()


      canvas1=FigureCanvasTkAgg(fig1, frame2)
      canvas1.draw()
      canvas1.get_tk_widget().place(relx=0.02, rely=0.0)



      ####----------------------------####
      overview_WebObjects={
          "A": audio_totalCount,
          "Li": link_totalCount,
          "DO": displayOrientation_totalCount,
          "In": placeholder_totalCount,
          "K":tabIndex_totalCount,
          "B": arialableButton_totalCount,
          "H": headings,
          "C": color_totalCount,
          "Hea": header,
          "P": paragraphColor_totalCount,
          "BM":backgroundMusic_totalCount,
          "KBA":tabIndex_totalCount,
          "KCSK": accessKey_totalCount,
          "S":searchField_totalCount,
          "L": Label_totalCount,
          "DM": option_totalCount,
          "DB":dialogbox_totalCount,
          "F": form_totalCount,
          "EM":  aria_totalCount,
          "ES":ariaInvalid_totalCount,
          "SM": StatusMessage,
          "I": img_totalCount,
          "V":audioControlsAlt_totalCount,
          "W":titleWord_totalCount+bodyWord_totalCount,
          "Te":paragraphColor_totalCount+title_totalCount+headingColor_totalCount,
          "T": title_totalCount,
          "Lan": language_totalCount,
          "CB": checkbox_totalCount,
          "COB": combobox_totalCount,
          "LT":loading_time_totalCount,
          "PL":page_length_totalCount,
          "CAP":Div_totalCount,
          "MLan":multiLanguage_totalCount,
          "TR":text_Resize_Option_totalCount,
          "CL":color_Changing_Option_totalCount,
          "FT":paragraphTextFontFamily_totalCount+headingTextFontFamily_totalCount,
          "FS":paragraphTextFontSize_totalCount+headingTextFontSize_totalCount,
          "TP":TextPattern_totalCount,
          "CT":TextImgVideo_totalCount          
          
          
        }

      plt.rcParams.update({'font.size': 8})
      fig2, ax2=plt.subplots(figsize=(9.7,4.6)) #width, height

      colors=("green","blue","black","cyan","azure","tomato","orange","gold",
        "brown","coral","purple","navy","cadetblue","gray","yellow","salmon",
        "pink","aquamarine","khaki","red","black","crimson","darkgoldenrod")

      ax2.bar(overview_WebObjects.keys(), overview_WebObjects.values(), color=colors, edgecolor = "black")
      ax2.set_title("Evaluated Objects of the Tested Webpage", fontsize=11, color="navy")
      ax2.set_xlabel("Evaluated Web Objects", fontsize=10)
      ax2.set_ylabel ("Evaluated Count", fontsize=10)

      A= mpatches.Patch(color='green', label='Audio')
      Li = mpatches.Patch(color='blue', label='Link')
      DO = mpatches.Patch(color='black', label='Display Orientation')
      In= mpatches.Patch(color='black', label='Input')
      K = mpatches.Patch(color='cyan', label='Keyboard')
      B = mpatches.Patch(color='gold', label='Buttons')
      H = mpatches.Patch(color='red', label='Headings') 
      C = mpatches.Patch(color='brown', label='Color')
      Hea = mpatches.Patch(color='crimson', label='Header')
      P = mpatches.Patch(color='azure', label='Paragraph')
      BM = mpatches.Patch(color='coral', label='Background Music')
      KBA = mpatches.Patch(color='coral', label='Keyboard Access')
      KCSK = mpatches.Patch(color='orange', label='Keyboard Shortcut')
      S = mpatches.Patch(color='orange', label='Search Field')
      L = mpatches.Patch(color='black', label='Label')
      DM = mpatches.Patch(color='purple', label='Dropdown Menu')
      DB = mpatches.Patch(color='purple', label='Dialog Box')
      F = mpatches.Patch(color='gray', label='Form')
      EM = mpatches.Patch(color='yellow', label='Error Message')
      ES = mpatches.Patch(color='yellow', label='Error Suggestion')
      SM = mpatches.Patch(color='pink', label='Status Message')
      I = mpatches.Patch(color='aquamarine', label='Image')
      V = mpatches.Patch(color='aquamarine', label='Video')
      W = mpatches.Patch(color='aquamarine', label='Words')
      Te = mpatches.Patch(color='aquamarine', label='Text')
      T = mpatches.Patch(color='khaki', label='Title')
      Lan = mpatches.Patch(color='darkgoldenrod', label='Language')
      CB = mpatches.Patch(color='navy', label='Checkbox')
      COB = mpatches.Patch(color='navy', label='Combo Box')
      LT = mpatches.Patch(color='navy', label='Loading Time')
      PL = mpatches.Patch(color='navy', label='Page Length')
      CAP = mpatches.Patch(color='navy', label='CAPTCHA')
      MLan = mpatches.Patch(color='navy', label='Multiple Language')
      TR = mpatches.Patch(color='navy', label='Text Resize Option')
      CL = mpatches.Patch(color='navy', label='Color Changing Option')
      FT = mpatches.Patch(color='navy', label='Font Type')
      FS = mpatches.Patch(color='tomato', label='Font Size')
      TP = mpatches.Patch(color='cadetblue', label='Text Pattern')
      CT = mpatches.Patch(color='salmon', label='Content Type')
  

      plt.legend(handles=[A, Li, DO, In, K,B,H,C,Hea,P,BM,KBA,KCSK,S,L,DM,DB,F,ES,SM,I,V,W,Te,T,Lan,CB,COB,LT,PL,CAP,MLan,TR,CL,FT,FS,TP,CT], loc=1, ncol=3)#bbox_to_anchor=(0.5, 1.35), ncol=4)
      #plt.show()

      canvas2=FigureCanvasTkAgg(fig2, frame2)
      canvas2.draw()
      canvas2.get_tk_widget().place(relx=0.13, rely=0.0)


      ###--------------------------------------------###
      
      overview_data_UserRequirements={
          "Total Evaluated": TotalChecked_userRequirements,
          "P": userRequirements_Pass,
          "F": userRequirements_Fail,
          "ND": userRequirements_NotDetected,
          "NT": userRequirements_NotTested
        }

      plt.rcParams.update({'font.size': 8})
      fig3, ax3=plt.subplots(figsize=(4.5,4.0))
      ax3.plot(list(overview_data_UserRequirements.keys()), list(overview_data_UserRequirements.values()), color='black', marker = 'o', markerfacecolor = 'blue', markersize = 8)
      
      ax3.set_title("Evaluation of User Requirements", fontsize=11, color="navy")
      ax3.set_xlabel("Evaluated Statistics", fontsize=10)
      ax3.set_ylabel ("Evaluated Count", fontsize=10)

      passed= mpatches.Patch(color='white', label='P-Pass')
      failed = mpatches.Patch(color='none', label='F-Fail')
      notDetected = mpatches.Patch(color='none', label='ND-Not Detected')
      notTested = mpatches.Patch(color='none', label='NT-Not Tested')
      plt.legend(handles=[passed, failed, notDetected, notTested], loc=1, ncol=1)

      canvas3=FigureCanvasTkAgg(fig3, frame2)
      canvas3.draw()
      canvas3.get_tk_widget().place(relx=0.36, rely=0.0)


      ####----------------------------####
      overview_data_disability_Passed={
          "Cognitive Problem": TotalCheckedCognitiveDisability_Passed+userRequirements_PassCognitiveDisability,
          "Vision Problem": TotalCheckedVisionImpairment_Passed+userRequirements_PassVisionImpairment,
          "Hearing Difficulty": TotalCheckedHearingDifficulty_Passed+userRequirements_PassHearingDifficulty,
          "Motion Problem": TotalCheckedMotionDisability_Passed+userRequirements_PassMotionDisability,
          "Learning Problem": TotalCheckedLearningDisability_Passed+userRequirements_PassLearningDisability
        }

      plt.rcParams.update({'font.size': 7}) 
      fig4, ax4=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darkgoldenrod","cyan","darksalmon")
      ax4.pie(overview_data_disability_Passed.values(), labels=overview_data_disability_Passed.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax4.set_title("Passed Disability types", fontsize=11, color="navy")

      canvas4=FigureCanvasTkAgg(fig4, frame2)
      canvas4.draw()
      canvas4.get_tk_widget().place(relx=0.0, rely=0.55)


      ####----------------------------####
      overview_data_disability_Failed={
          "Cognitive Problem": TotalCheckedCognitiveDisability_Failed+userRequirements_FailCognitiveDisability,
          "Vision Problem": TotalCheckedVisionImpairment_Failed+userRequirements_FailVisionImpairment,
          "Hearing Difficulty": TotalCheckedHearingDifficulty_Failed+userRequirements_FailHearingDifficulty,
          "Motion Problem": TotalCheckedMotionDisability_Failed+userRequirements_FailMotionDisability,
          "Learning Problem": TotalCheckedLearningDisability_Failed+userRequirements_FailLearningDisability
        }

      plt.rcParams.update({'font.size': 7}) 
      fig5, ax5=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darkgoldenrod","cyan","darksalmon")
      ax5.pie(overview_data_disability_Failed.values(), labels=overview_data_disability_Failed.keys(),autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax5.set_title("Failed Disability types", fontsize=11, color="navy")

      canvas5=FigureCanvasTkAgg(fig5, frame2)
      canvas5.draw()
      canvas5.get_tk_widget().place(relx=0.11, rely=0.55)


      ####----------------------------####
      overview_data_disability_NotDetected={
          "Cognitive Problem": TotalCheckedCognitiveDisability_NotDetected+userRequirements_NotDetectedCognitiveDisability,
          "Vision Problem": TotalCheckedVisionImpairment_NotDetected+userRequirements_NotDetectedVisionImpairment,
          "Hearing Difficulty": TotalCheckedHearingDifficulty_NotDetected+userRequirements_NotDetectedHearingDifficulty,
          "Motion Problem": TotalCheckedMotionDisability_NotDetected+userRequirements_NotDetectedMotionDisability,
          "Learning Problem": TotalCheckedLearningDisability_NotDetected+userRequirements_NotDetectedLearningDisability
        }

      plt.rcParams.update({'font.size': 7}) 
      fig6, ax6=plt.subplots(figsize=(4.6,4.0))
      colors=("turquoise", "yellow", "darkgoldenrod","cyan","darksalmon")
      ax6.pie(overview_data_disability_NotDetected.values(), labels=overview_data_disability_NotDetected.keys(),autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax6.set_title("Not Detected Disability types", fontsize=11, color="navy")

      canvas6=FigureCanvasTkAgg(fig6, frame2)
      canvas6.draw()
      canvas6.get_tk_widget().place(relx=0.23, rely=0.55)


      ####----------------------------####
      overview_data_disability_NotTested={
          "Cognitive Problem": TotalCheckedCognitiveDisability_NotTested+userRequirements_NotTestedCognitiveDisability,
          "Vision Problem": TotalCheckedVisionImpairment_NotTested+userRequirements_NotTestedVisionImpairment,
          "Hearing Difficulty": TotalCheckedHearingDifficulty_NotTested+userRequirements_NotTestedHearingDifficulty,
          "Motion Problem": TotalCheckedMotionDisability_NotTested+userRequirements_NotTestedMotionDisability,
          "Learning Problem": TotalCheckedLearningDisability_NotTested+userRequirements_NotTestedLearningDisability
        }

      plt.rcParams.update({'font.size': 7}) 
      fig7, ax7=plt.subplots(figsize=(4.5,4.0))
      colors=("turquoise", "yellow", "darkgoldenrod","cyan","darksalmon")
      ax7.pie(overview_data_disability_NotTested.values(), labels=overview_data_disability_NotTested.keys(),autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax7.set_title("Not Tested Disability types", fontsize=11, color="navy")

      canvas7=FigureCanvasTkAgg(fig7, frame2)
      canvas7.draw()
      canvas7.get_tk_widget().place(relx=0.35, rely=0.55)


    
    def Overall_statistics_page():

      Title_text = soup.find('title')
      Title=Title_text.get_text()

      Total_HTML_Tag_Checked=nonSemantics_HTML_Tag_Checked+ Semantics_HTML_Tag_Checked+userRequirement_HTML_Tag_Checked
      print('Total Number of HTMLs Elements Checked:',Total_HTML_Tag_Checked)


      frame1=tk.Frame (main_fm, bg="white smoke", width=2000, height=90) #highlightbackground="blue", highlightthickness=1
      frame1.pack(side=tk.LEFT,fill="both", expand=True)
      frame1.place(relx=0.0, rely=0.0)

      frame=tk.Frame (frame1, bg="white smoke", width=2000, height=35)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.25, rely=0.01)
      label = tk.Label(frame, text="Web Accessibility Evaluation Report (WCAG 2.2, Level A, AA and AAA)",fg='black', bg='white smoke',font=("Arial", 20, 'bold'))
      label.pack()

      
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.10, rely=0.40)
      label = tk.Label(frame, text="Evaluation Report for Webpage:", fg='black', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack()
      frame=tk.Frame (frame1, bg="white", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.21, rely=0.40)
      label = tk.Label(frame, text=websiteLink, fg='blue', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack() 

      
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.38, rely=0.40)
      label = tk.Label(frame, text='Evaluated Webpage Title:', fg='black', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack() 
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.47, rely=0.40)
      label = tk.Label(frame, text=Title, fg='blue', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack()

      
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.38, rely=0.65)
      label = tk.Label(frame, text='Wepage Size in KB:', fg='black', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack() 
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30) 
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.47, rely=0.65)
      label = tk.Label(frame, text=page_length_KB, fg='blue', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack()

      
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.10, rely=0.65)
      label = tk.Label(frame, text='Total HTML Elements Checked:', fg='black', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack() 
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.21, rely=0.65)
      label = tk.Label(frame, text=Total_HTML_Tag_Checked, fg='blue', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack()

      
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.60, rely=0.65)
      label = tk.Label(frame, text='Evaluated Webpage Loading time:', fg='black', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack() 
      frame=tk.Frame (frame1, bg="white smoke", width=1000, height=30)
      frame.pack(side=tk.LEFT,fill="both", expand=True)
      frame.place(relx=0.72, rely=0.65)
      label = tk.Label(frame, text=loading_time, fg='blue', bg='white smoke',font=("Arial", 10, 'bold'))
      label.pack()


      ###-------------###
      frame2=tk.Frame (main_fm, bg="white", width=4000, height=1000)
      frame2.pack(side=tk.LEFT,fill="both", expand=True)
      frame2.place(relx=0.0, rely=0.12)


      ###------------------------------------------------------------###
      overview_data_ConformanceLevel={
          "Guidelines": 87,
          "Evaluated": TotalChecked_WCAG,
          "Level A": TotalLevelA,
          "Level AA": TotalLevelAA,
          "Level AAA": TotalLevelAAA,
        }

      plt.rcParams.update({'font.size': 8})
      fig2, ax2=plt.subplots(figsize=(4.5,4.0)) #width, height
      colors=("turquoise", "darksalmon", "yellow","cyan","navy")
      ax2.bar(overview_data_ConformanceLevel.keys(), overview_data_ConformanceLevel.values(), width=0.3, color=colors, edgecolor = "black")
      ax2.set_title("Evaluated WCAG Conformance Level", fontsize=11, color="navy") 
      ax2.set_xlabel("Evaluated Statistics", fontsize=10)
      ax2.set_ylabel ("Evaluated Count", fontsize=10)
      #plt.show()

      canvas2=FigureCanvasTkAgg(fig2, frame2)
      canvas2.draw()
      canvas2.get_tk_widget().place(relx=0.01, rely=0.0)


      ###------------------------------------------------------------------###
      overview_data_disability={
          "Cognitive Problem": TotalCheckedCognitiveDisability+TotalCheckedCognitiveDisability_userRequirements,
          "Vision Problem": TotalCheckedVisionImpairment+TotalCheckedVisionImpairment_userRequirements,
          "Hearing Difficulty": TotalCheckedHearingDifficulty+TotalCheckedHearingDifficulty_userRequirements,
          "Motion Problem": TotalCheckedMotionDisability+TotalCheckedMotionDisability_userRequirements,
          "Learning Problem": TotalCheckedLearningDisability+TotalCheckedLearningDisability_userRequirements
        }

      plt.rcParams.update({'font.size': 8}) 
      fig4, ax4=plt.subplots(figsize=(4.7,4.0))
      colors=("turquoise", "yellow", "darkgoldenrod","cyan","darksalmon")#labeldistance=1.20,
      #ax4.pie(overview_data_disability.values(), labels=overview_data_disability.keys(), autopct="%1.2f%%", pctdistance=1.5,  shadow=True, colors=colors,hatch=['O', 'oO', '+', '*', '..'])
      ax4.pie(overview_data_disability.values(), labels=overview_data_disability.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
      ax4.set_title("Evaluated Disability types", fontsize=11, color="navy")

      # Cognitive_Problem = mpatches.Patch(color='coral', label='Cognitive Problem')
      # Vision_Problem = mpatches.Patch(color='yellow', label='Vision Problem')
      # Hearing_Difficulty = mpatches.Patch(color='darkgoldenrod', label='Hearing Difficulty')
      # Motion_Problem = mpatches.Patch(color='darksalmon', label='Motion Problem')
      # Learning_Problem = mpatches.Patch(color='cyan', label='Learning Problem')
      
      #plt.legend(handles=[Cognitive_Problem, Vision_Problem, Hearing_Difficulty, Motion_Problem, Learning_Problem], bbox_to_anchor=(1,1), loc="best", bbox_transform=plt.gcf().transFigure)


      canvas4=FigureCanvasTkAgg(fig4, frame2)
      canvas4.draw()
      canvas4.get_tk_widget().place(relx=0.12, rely=0.0)


      ###---------------------------------------------------------###
      overview_text_complexity={
          "Total Words": Total_word_count,
          "Duplicates": Total_Duplicate_word_count,
          "Unusual": Total_Unusual_word_count,
          "Abreviation": Total_Abreviation_count,
          "Mispronunced": Total_Mispronounced_word_count
        }

      plt.rcParams.update({'font.size': 8})
      fig3, ax3=plt.subplots(figsize=(4.5,4.0))
      ax3.fill_between(overview_text_complexity.keys(), overview_text_complexity.values())
      ax3.set_title("Semantic Issues with Text Content", fontsize=11, color="navy")
      ax3.set_xlabel("Issues in Text Content", fontsize=10)
      ax3.set_ylabel ("Number of Count", fontsize=10)
      plt.legend()
      #plt.show()

      canvas3=FigureCanvasTkAgg(fig3, frame2)
      canvas3.draw()
      canvas3.get_tk_widget().place(relx=0.01, rely=0.42)


      ###--------------------------------------####
      
      overview_data={
          "Total": 87+18,
          "Evaluated": TotalChecked_WCAG +TotalChecked_userRequirements,
          "P": TotalPassed_WCAG+userRequirements_Pass,
          "F": TotalFailed_WCAG+userRequirements_Fail,
          "ND": TotalNotDetected_WCAG+userRequirements_NotDetected,
          "NT": TotalNotTested_WCAG+userRequirements_NotTested
        }

      plt.rcParams.update({'font.size': 8})
      fig1, ax1=plt.subplots(figsize=(4.5,4.0))
      ax1.plot(list(overview_data.keys()), list(overview_data.values()), color='black', marker = 'o', markerfacecolor = 'blue', markersize = 8)
      ax1.set_title("Statistics for Assessment Terminologies", fontsize=11, color="navy")
      ax1.set_xlabel("Evaluated Statistics", fontsize=10)
      ax1.set_ylabel ("Evaluated Count", fontsize=10)

      total= mpatches.Patch(color='none', label='Total- WCAG + User Requirements')
      passed= mpatches.Patch(color='none', label='P-Pass')
      failed = mpatches.Patch(color='none', label='F-Fail')
      notTested = mpatches.Patch(color='none', label='NT-Not Tested')
      notDetected = mpatches.Patch(color='none', label='ND-Not Detected')

      plt.legend(handles=[total,passed, failed, notTested, notDetected], loc=1, ncol=1)

      
      canvas1=FigureCanvasTkAgg(fig1, frame2)
      canvas1.draw()
      canvas1.get_tk_widget().place(relx=0.13, rely=0.42)



      ###-------------------------####
      from PIL import Image
      Image.CUBIC = Image.BICUBIC
      import ttkbootstrap as ttk
      #from ttkbootstrap.constants import*

      ##----------------------------###
      # score=70
      # if (score>=90):
      #   my_gauge=ttk.Floodgauge(frame2, bootstyle="success",
      #   font=("Times", 17),
      #   mask="Accessible:{}%",
      #   maximum=100,
      #   length=600,
      #   orient="horizontal",
      #   value=score,)
      #   #my_gauge.pack(pady=50, fill=X, padx=20)
      #   my_gauge.place(relx=0.23, rely=0.37)

      # elif(score<90 and score>=70):
      #   my_gauge=ttk.Floodgauge(frame2, bootstyle="warning",
      #   font=("Times", 17),
      #   mask="Partially Accessible:{}%",
      #   maximum=100,
      #   length=200, 
      #   orient="horizontal",
      #   value=score,)
      #   #my_gauge.pack(pady=50, fill=X, padx=20)
      #   my_gauge.place(relx=0.23, rely=0.37)

      # else:
      #   my_gauge=ttk.Floodgauge(frame2, bootstyle="danger",
      #   font=("Times", 17),
      #   mask="Not Accessible:{}%",
      #   maximum=100,
      #   length=600,
      #   orient="horizontal",
      #   value=score,)
      #   #my_gauge.pack(pady=50, fill=X, padx=20)
      #   my_gauge.place(relx=0.23, rely=0.37)
      
      ###------------------------------------------------###
      
      #CognitiveAccessibilityScore_add=(TotalCheckedCognitiveDisability_Passed)-(TotalCheckedCognitiveDisability_Failed+TotalCheckedCognitiveDisability_NotDetected+TotalCheckedCognitiveDisability_NotTested) 
      
      #CognitiveAccessibilityScore=int(abs(((TotalCheckedCognitiveDisability_Passed)-(TotalCheckedCognitiveDisability_Failed+TotalCheckedCognitiveDisability_NotDetected))/(TotalCheckedCognitiveDisability))*100)
      CognitiveAccessibilityScore=round(abs(((TotalCheckedCognitiveDisability_Passed)/(TotalCheckedCognitiveDisability_Failed+TotalCheckedCognitiveDisability_NotDetected)))*100,2)
      print(CognitiveAccessibilityScore)

      Cognitive_accessibilityScore=ttk.Meter(frame2, 
        amountused=CognitiveAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=15, 
        bootstyle='primary',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Cognitive",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=17)
        #subtextstyle=SECONDARY)
      Cognitive_accessibilityScore.place(relx=0.26, rely=0.01)##0.02



       #VisionAccessibilityScore_add=(TotalCheckedVisionImpairment_Passed)-(TotalCheckedVisionImpairment_Failed+TotalCheckedVisionImpairment_NotDetected+TotalCheckedVisionImpairment_NotTested) 
      
      #VisionAccessibilityScore=int(abs(((TotalCheckedVisionImpairment_Passed)-(TotalCheckedVisionImpairment_Failed+TotalCheckedVisionImpairment_NotDetected))/(TotalCheckedVisionImpairment))*100)
      VisionAccessibilityScore=round(abs(((TotalCheckedVisionImpairment_Passed)/(TotalCheckedVisionImpairment_Failed+TotalCheckedVisionImpairment_NotDetected)))*100,2)
      print(VisionAccessibilityScore)

      Vision_accessibilityScore=ttk.Meter(frame2, 
        amountused=VisionAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=15, 
        bootstyle='warning',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Vision",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=17)
        #subtextstyle=SECONDARY)
      Vision_accessibilityScore.place(relx=0.30, rely=0.01)


      #LearningAccessibilityScore_add=(TotalCheckedLearningDisability_Passed)-(TotalCheckedLearningDisability_Failed+TotalCheckedLearningDisability_NotDetected+TotalCheckedLearningDisability_NotTested) 
      
      LearningAccessibilityScore=int(abs(((TotalCheckedLearningDisability_Passed)-(TotalCheckedLearningDisability_Failed+TotalCheckedLearningDisability_NotDetected))/(TotalCheckedLearningDisability))*100)
      #LearningAccessibilityScore=round(abs(((TotalCheckedLearningDisability_Passed)/(TotalCheckedLearningDisability_Failed+TotalCheckedLearningDisability_NotDetected)))*100,2)
      print(LearningAccessibilityScore)

      Learning_accessibilityScore=ttk.Meter(frame2, 
        amountused=LearningAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=15, 
        bootstyle='info',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Learning",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=17)
        #subtextstyle=SECONDARY)
      Learning_accessibilityScore.place(relx=0.34, rely=0.01)

      #MotionAccessibilityScore_add=(TotalCheckedMotionDisability_Passed)-(TotalCheckedMotionDisability_Failed+TotalCheckedMotionDisability_NotDetected+TotalCheckedMotionDisability_NotTested)
      
      MotionAccessibilityScore=int(abs(((TotalCheckedMotionDisability_Passed)-(TotalCheckedMotionDisability_Failed+TotalCheckedMotionDisability_NotDetected))/(TotalCheckedMotionDisability))*100)
      #MotionAccessibilityScore=round(abs(((TotalCheckedMotionDisability_Passed)/(TotalCheckedMotionDisability_Failed+TotalCheckedMotionDisability_NotDetected)))*100,2)
      print(MotionAccessibilityScore)

      Motion_accessibilityScore=ttk.Meter(frame2, 
        amountused=MotionAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=15, 
        bootstyle='dark',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Motion",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=17)
        #subtextstyle=SECONDARY)
      Motion_accessibilityScore.place(relx=0.38, rely=0.01)

      #HearingAccessibilityScore_add=(TotalCheckedHearingDifficulty_Passed)-(TotalCheckedHearingDifficulty_Failed+TotalCheckedHearingDifficulty_NotDetected+TotalCheckedHearingDifficulty_NotTested)
      
      #HearingAccessibilityScore=int(abs(((TotalCheckedHearingDifficulty_Passed)-(TotalCheckedHearingDifficulty_Failed+TotalCheckedHearingDifficulty_NotDetected))/(TotalCheckedHearingDifficulty))*100)
      HearingAccessibilityScore=round(abs(((TotalCheckedHearingDifficulty_Passed)/(TotalCheckedHearingDifficulty_Failed+TotalCheckedHearingDifficulty_NotDetected)))*100,2)
      print(HearingAccessibilityScore)

      Hearing_accessibilityScore=ttk.Meter(frame2, 
        amountused=HearingAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=15, 
        bootstyle='danger',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Hearing",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=17)
        #subtextstyle=SECONDARY)
      Hearing_accessibilityScore.place(relx=0.42, rely=0.01)


      ###------------------------------------------------------###
      #nonSemanticsAccessibilityScore_add=(nonSemantics_Pass_total)-(nonSemantics_Fail_total+nonSemantics_ND_total+nonSemantics_NT_total)
      
      #nonSemanticAccessibilityScore=int(abs(((nonSemantics_Pass_total)-(nonSemantics_Fail_total+nonSemantics_ND_total))/(nonSemantics_Checked_total))*100)
      nonSemanticAccessibilityScore=round(abs(((nonSemantics_Pass_total)/(nonSemantics_Fail_total+nonSemantics_ND_total)))*100,2)
      print(nonSemanticAccessibilityScore)

      NonSemantic_accessibilityScore=ttk.Meter(frame2, 
        amountused=nonSemanticAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=24, 
        bootstyle='dark',
        textfont=["Times", 10, "bold"],
        textright="%",
        subtext="Non-Semantic",
        subtextfont=["Times", 10, "normal"],
        subtextstyle="black",
        stripethickness=5)
        #subtextstyle=SECONDARY)
      NonSemantic_accessibilityScore.place(relx=0.29, rely=0.20)

      ###------------------------------------------------------------###

      #SemanticsAccessibilityScore_add=(Semantics_Pass_total)-(Semantics_Fail_total+Semantics_ND_total+Semantics_NT_total)
      
      #SemanticAccessibilityScore=int(abs(((Semantics_Pass_total)-(Semantics_Fail_total+Semantics_ND_total))/(Semantics_Checked_total))*100)
      SemanticAccessibilityScore=round(abs(((Semantics_Pass_total)/(Semantics_Fail_total+Semantics_ND_total)))*100,2)
      print(SemanticAccessibilityScore)
      
      Semantic_accessibilityScore=ttk.Meter(frame2, 
        amountused=SemanticAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=25, 
        bootstyle='warning',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Semantic",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=5)
        #subtextstyle=SECONDARY)
      Semantic_accessibilityScore.place(relx=0.34, rely=0.20)

      ###-------------------------###
      
      #userRequirementsAccessibilityScore=int(abs(((userRequirements_Pass)-(userRequirements_Fail+userRequirements_NotDetected))/(TotalChecked_userRequirements))*100)
      userRequirementsAccessibilityScore=round(abs(((userRequirements_Pass)/(userRequirements_Fail+userRequirements_NotDetected)))*100,2)
      print(userRequirementsAccessibilityScore)

      
      Additional_accessibilityScore=ttk.Meter(frame2, 
        amountused=userRequirementsAccessibilityScore, 
        metersize=153, ##length of circle
        meterthickness=25, 
        bootstyle='danger',
        textfont=["Times", 12, "bold"],
        textright="%",
        subtext="Additional",
        subtextfont=["Times", 12, "normal"],
        subtextstyle="black",
        stripethickness=5)
        #subtextstyle=SECONDARY)
      Additional_accessibilityScore.place(relx=0.39, rely=0.20)


      #TotalChecked= nonSemantics_Pass + Semantics_Pass+ userRequirements_Pass+nonSemantics_Fail + Semantics_Fail+ userRequirements_Fail+nonSemantics_NotDetected +Semantics_NotDetected+ userRequirements_NotDetected+nonSemantics_NotTested+Semantics_NotTested+userRequirements_NotTested
      TotalChecked= nonSemantics_Pass + Semantics_Pass+ userRequirements_Pass+nonSemantics_Fail + Semantics_Fail+ userRequirements_Fail+nonSemantics_NotDetected +Semantics_NotDetected+ userRequirements_NotDetected
      print('Total Number of WCAG Success Criteria and user requirement have Checked:', TotalChecked)

      TotalPassed= nonSemantics_Pass + Semantics_Pass+userRequirements_Pass
      print('Total Number of Success Criteria and user requirement have Passed:', TotalPassed)
      TotalFailed= nonSemantics_Fail + Semantics_Fail+userRequirements_Fail
      print('Total Number of Success Criteria and user requirement have Failed:', TotalFailed)
      TotalNotDetected= nonSemantics_NotDetected +Semantics_NotDetected+userRequirements_NotDetected
      print('Total Number of Success Criteria and user requirement have Not Detected:', TotalNotDetected)
      TotalNotTested= nonSemantics_NotTested+Semantics_NotTested+userRequirements_NotTested
      print('Total Number of Success Criteria and user requirement have Not Tested:', TotalNotTested)

      # OverallPassedScore=(abs((TotalFailed+TotalNotDetected)/(TotalPassed)))
      # print(OverallPassedScore)
      
      #OverallAccessibilityScore=int(abs(((TotalPassed)-(TotalFailed+TotalNotDetected))/(TotalChecked))*100)
      #OverallAccessibilityScore=int(abs(((TotalPassed)/(TotalChecked))*100))
      OverallAccessibilityScore=round(abs(((TotalPassed)/(TotalFailed+TotalNotDetected)))*100,2)
      print(OverallAccessibilityScore)

      Overall_accessibilityScore=ttk.Meter(frame2, 
        amountused=OverallAccessibilityScore, 
        metersize=330, 
        meterthickness=30, 
        bootstyle='success',
        textfont=["Times", 25, "bold"],
        textright="%",
        subtext="Overall Score",
        subtextfont=["Times", 16, "bold",],
        subtextstyle="black")
                #subtextstyle=SECONDARY)
      Overall_accessibilityScore.place(relx=0.37, rely=0.46)

      additional_Focus=100-OverallAccessibilityScore

      if(OverallAccessibilityScore==100):
        data={"Accessible": OverallAccessibilityScore}
        plt.rcParams.update({'font.size': 10}) 
        fig5, ax5=plt.subplots(figsize=(4.5,4.0))
        colors=("turquoise")
        ax5.pie(data.values(), labels=data.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
        ax5.set_title("Completely  Accessible", fontsize=13, color="green")
        #plt.show()
        canvas5=FigureCanvasTkAgg(fig5, frame2)
        canvas5.draw()
        canvas5.get_tk_widget().place(relx=0.25, rely=0.43)

      elif(OverallAccessibilityScore<100 and OverallAccessibilityScore>=75):
        data={"Accessible": OverallAccessibilityScore, "Require focus": additional_Focus}
        plt.rcParams.update({'font.size': 9}) 
        fig5, ax5=plt.subplots(figsize=(4.5,4.0))
        colors=("turquoise", "yellow")
        ax5.pie(data.values(), labels=data.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
        ax5.set_title("Comparatively Accessible", fontsize=13, color="blue")
        #plt.show()
        canvas5=FigureCanvasTkAgg(fig5, frame2)
        canvas5.draw()
        canvas5.get_tk_widget().place(relx=0.25, rely=0.43)

      elif(OverallAccessibilityScore<75 and OverallAccessibilityScore>=55):
        data={"Accessible": OverallAccessibilityScore, "Require focus": additional_Focus}
        plt.rcParams.update({'font.size': 9}) 
        fig5, ax5=plt.subplots(figsize=(4.5,4.0))
        colors=("turquoise", "yellow")
        ax5.pie(data.values(), labels=data.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
        ax5.set_title("Partially Accessible", fontsize=13, color="yellow")
        #plt.show()
        canvas5=FigureCanvasTkAgg(fig5, frame2)
        canvas5.draw()
        canvas5.get_tk_widget().place(relx=0.25, rely=0.43)

      else:
        data={"Accessible": OverallAccessibilityScore, "Require focus": additional_Focus}
        plt.rcParams.update({'font.size': 9}) 
        fig5, ax5=plt.subplots(figsize=(4.5,4.0))
        colors=("turquoise", "yellow")
        ax5.pie(data.values(), labels=data.keys(), autopct="%1.2f%%", shadow=True, colors=colors, wedgeprops = {"edgecolor" : "black", 'linewidth': 0.4, 'antialiased': True})
        ax5.set_title("Slightly Accessible", fontsize=13, color="red")
        #plt.show()
        canvas5=FigureCanvasTkAgg(fig5, frame2)
        canvas5.draw()
        canvas5.get_tk_widget().place(relx=0.25, rely=0.43)

   
      

      


      




















  main_fm=tk.Frame(root, bg='white')
  main_fm.pack(fill=tk.BOTH, expand=True)


  nonSemantics_page()

  root.mainloop()

    
 

def main_screen():

  global screen
  global URL
  global Guideline

  screen=Tk()
  screen.geometry("1000x1000")
  screen.configure(bg= "cyan")
  screen.title("Web Content Accessibility Testing")

  labelTitle=Label(text="Web Content Accessibility Evaluate Environment (WCAEE)", font=("arial", 30, 'bold'), fg="blue", bg="cyan")
  labelTitle.pack(pady=50)

  bordercolor=Frame(screen, bg="black", width=1300, height=550)
  bordercolor.pack()

  mainframe= Frame(bordercolor, bg="turquoise", width=1300, height=550)
  mainframe.pack(padx=5, pady=5)

  Label(mainframe, text="Enter the Website URL:", font=("arail", 20, "bold"), bg="turquoise").place(x=100, y=50) 
  Label(mainframe, text="The Guideline to Check Against:", font=("arail", 15, "bold"), bg="turquoise").place(x=100, y=150) 
  Label(mainframe, text="The Conformance Level to Check Against:", font=("arail", 15, "bold"), bg="turquoise").place(x=100, y=200) 
  Label(mainframe, text="Additional Requrements to Check Against:", font=("arail", 15, "bold"), bg="turquoise").place(x=100, y=250) 

  Label(mainframe, text="Assessment Terminologies:", font=("arail", 15, "bold"), bg="turquoise").place(x=100, y=300)
  Label(mainframe, text="Passed (P): Guidelines that have been successfully implemented", font=("arail", 13, "bold"), fg= "black", bg="turquoise").place(x=400, y=300)
  Label(mainframe, text="Fail (F): Guidelines that have been wrongly implemented", font=("arail", 13, "bold"), fg= "black", bg="turquoise").place(x=400, y=330)
  Label(mainframe, text="Not Detected (ND): Guidelines that not implemented", font=("arail", 13, "bold"), fg= "black", bg="turquoise").place(x=400, y=360)
  Label(mainframe, text="Not Tested (NT): Guidelines that require user or expert testing", font=("arail", 13, "bold"), fg= "black", bg="turquoise").place(x=400, y=390)

  
  URL=StringVar()
  
  entry_URL=Entry(mainframe, textvariable=URL,  width=70, bd=1, font=("arail", 12))
  entry_URL.place(x=430, y=55)
  placeholder_text = 'https://'
  entry_URL.insert(0, placeholder_text)

  
  check_but_1 = tkinter.Checkbutton(mainframe, text = 'WCAG 2.2', font=("arail", 15, "bold"), bg="turquoise")
  check_but_1.pack()
  check_but_1.place(x=500, y=150)
  check_but_1.select()

  check_but_2 = tkinter.Checkbutton(mainframe, text = 'Level (A, AA, AAA)', font=("arail", 15, "bold"), bg="turquoise")
  check_but_2.pack()
  check_but_2.place(x=550, y=200)
  check_but_2.select()

  check_but_3 = tkinter.Checkbutton(mainframe, text = 'User Requirements', font=("arail", 15, "bold"), bg="turquoise")
  check_but_3.pack()
  check_but_3.place(x=550, y=250)
  check_but_3.select()

  check_but_4 = tkinter.Checkbutton(mainframe, text = 'Expert Suggestions', font=("arail", 15, "bold"), bg="turquoise")
  check_but_4.pack()
  check_but_4.place(x=800, y=250)
  check_but_4.select()



  def reset():
    entry_URL.delete(0, END)


  Button(mainframe, text="Evaluate", height="2", width=20, font=("arail", 13, "bold"), bg="orange", fg="black", bd=1, command=Test_Execute).place(x=400, y=460)
  Button(mainframe, text="Exit", height="2", width=20, bg="tomato", font=("arail", 13, "bold"), fg="black", bd=1, command=screen.destroy).place(x=650, y=460)



  screen.mainloop()


main_screen()
